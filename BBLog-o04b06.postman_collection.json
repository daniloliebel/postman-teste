{
	"info": {
		"_postman_id": "58cab725-5d9b-41e6-8f37-0213c5b68e93",
		"name": "BBLog (o04b06)",
		"description": "Padrões:\n- Aba Authorization: \n\tType -> \"No Auth\".\n- Aba Headers: \n\t- Key: Content-Type / Value: application/json\n\t- Key: Authorization / Value: token\n- Observação: Validação de token será necessário apenas para requisições posteriores ao Logon.\n- Para todas as requisições, verificar com testes se o código de resposta é [200], se há retorno de informações e tempo de performance.\n\nLOGON:\n- Setar URL em uma variável de ambiente, para ser usada nas outras requisições.\n- Logar com usuário e senha previamente cadastrados.\n- Verificar se ocorreu logon com sucesso.\n- Setar valor do token gerado em uma variável de ambiente para servir de autorização para outras requisições.\n\nVEICULO:\n- Testes de métodos auxiliares. \n- Para o teste será realizada a inserção e edição completa.\n\n\t- getMunicipio\n\t- getMarca\n\t- getModelo\n\t- getAgrupamentoVeiculo\n\t- getTipoCarroceriaVeiculo\n\n- Testes:\n- Inserção completa: \n\t- Com renavam correto.\n\t- Com renavam incorreto.\n\t- Verificar após a inserção se realmente os dados foram inseridos e gravados para todos os campos.\n\n- Edição completa:\n\t- Alterar todos os campos.\n\t- Verificar após a edição se realmente os dados foram editados e gravados para todos os campos.\n\nEntidade [PESSOAS]\n\nMOTORISTA/PRESTADOR DE SERVIÇOS/PARTICIPANTE/PESSOA ESTRANGEIRA\n- Testes de métodos auxiliares(necessário apenas um teste). \n- Para o teste será realizada a inserção e edição completa.\n- Motorista:\n\t- getNacionalidade\n\t- getTelefoneTipo\n\t- getEmailTipo\n\t- loadDadosPessoas\n\t- getBanco\n\t- getAgencia\n- Prestador de serviços:\n\t- getProprietarioLista\n\t- getAtividadeFiscal\n\t- getCNAE\n- Participante:\n\t- getClienteLista\n\t- getRegimeTributario\n\t- getTipoLucro\n\t- getPessoaDados\n\t- getCEP\n\nTestes:\n- Inserção completa:\n- Verificar após a inserção se realmente os dados foram inseridos e gravados para todos os campos.\n- Contato\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n- Email\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n- Endereço\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n- Conta Bancária\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n\n- Para todos os itens acima:\n\t- Criar casos de teste que se tente inserir registros duplicados para verificar se o sistema bloqueia.\n\t- 2 contatos iguais\n\t- 2 emails iguais\n\t- 2 endereços iguais\n\t- 2 contas bancárias iguais\n\n- Edição completa:\n\t- Alterar todos os campos, inclusive para os que foram inseridos dois registros.\n\t- Verificar após a edição se realmente os dados foram editados e gravados para todos os campos.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "LOGON",
			"item": [
				{
					"name": "LOGON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dfe4314d-7465-43ee-863c-e1cfcdbf4ebc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3e34b24a-fb52-4138-96fc-2e4d3da7849b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Obter Token\", function() {",
									"    var jsonData = pm.response.json();",
									"    var token = jsonData.result.token;",
									"    pm.expect(token).not.eql(null);",
									"",
									"    pm.environment.set(\"token\", token);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"if (pm.response.code !== 200) pm.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"LOGON\",\r\n    \"operation\": \"LOGON\",\r\n    \"parameters\": {\r\n        \"username\": \"admincorp\",\r\n        \"password\": \"kmm2020\",\r\n        \"cod_gestao\": 91780\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VEICULO",
			"item": [
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7eff2397-bf43-4e1a-9182-45a17465ef57",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fd0c30e5-5ca7-42e3-8d42-078fb05d3ddc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4b81e94-a301-4913-890b-2f1ca3768a64",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Município, UF e CEP",
									"pm.test(\"Obter Municipio\", function () {",
									"    var municipio_id = jsonData.result.items[0].municipio_id;",
									"    var alt_municipio_id = jsonData.result.items[8].municipio_id;",
									"    var uf = jsonData.result.items[0].uf;",
									"    var alt_uf = jsonData.result.items[8].uf;",
									"    var cep = jsonData.result.items[0].cep;",
									"    var cep_1 = jsonData.result.items[8].cep;",
									"    var alt_cep = jsonData.result.items[9].cep;",
									"    ",
									"    pm.environment.set(\"municipio_id\", municipio_id);",
									"    pm.environment.set(\"uf\", uf);",
									"    ",
									"    pm.environment.set(\"alt_municipio_id\", alt_municipio_id);",
									"    pm.environment.set(\"alt_uf\", alt_uf);",
									"    ",
									"    pm.environment.set(\"cep\", cep);",
									"    pm.environment.set(\"cep_1\", cep_1);",
									"    pm.environment.set(\"alt_cep\", alt_cep);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d04991d-0c82-4197-b457-f8688d45b26a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"a%f\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 50\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getModeloVeiculo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a6655d1-dd47-4318-81c8-8a1cf63f6e61",
								"exec": [
									"//variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Obter Marca\", function () {",
									"    var marca_id = jsonData.result.items[0].marca_id;",
									"    var alt_marca_id = jsonData.result.items[1].marca_id;",
									"    ",
									"    pm.environment.set(\"marca_id\", marca_id);",
									"    pm.environment.set(\"alt_marca_id\", alt_marca_id);",
									"});",
									"",
									"pm.test(\"Obter Modelo\", function () {",
									"    var modelo_id = jsonData.result.items[0].modelo_id;",
									"    var alt_modelo_id = jsonData.result.items[1].modelo_id;",
									"    ",
									"    pm.environment.set(\"modelo_id\", modelo_id);",
									"    pm.environment.set(\"alt_modelo_id\", alt_modelo_id);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5c1bc4aa-d03f-4d46-b1db-4c39719d4f9a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getModeloVeiculo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"modelo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"modelo\",\n                    \"operator\": \"contains\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getAgrupamentoVeiculo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8c72db1-b0c0-4c8a-94aa-64c026dd5d44",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Obter Agrupamento\", function () {",
									"    var agrupamento_id = jsonData.result.items.find(x => x.agrupamento == \"Cavalo Mecânico Terceiro\").agrupamento_id;",
									"    var alt_agrupamento_id = jsonData.result.items.find(x => x.agrupamento == \"Cavalo Mecânico Terceiro\").agrupamento_id;",
									"    ",
									"    pm.environment.set(\"agrupamento_id\", agrupamento_id);",
									"    pm.environment.set(\"alt_agrupamento_id\", alt_agrupamento_id);",
									"});",
									"",
									"pm.test(\"Obter Agrupamento Reboque\", function () {",
									"    var agrupamento_id_reboque = jsonData.result.items.find(x => x.agrupamento == \"Semi-Reboque Terceiro\").agrupamento_id;",
									"    ",
									"    pm.environment.set(\"agrupamento_id_reboque\", agrupamento_id_reboque);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getAgrupamentoVeiculo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"agrupamento\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"agrupamento\",\n                    \"operator\": \"contains\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTipoCarroceriaVeiculo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03a0a014-112c-4fd3-a5c0-09e853f1657b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Obter Carroceria\", function () {",
									"    var carroceria_id = jsonData.result.items.find(x => x.carroceria == \"Qa - Cavalo Mecânico Terceiro\").tipo_carroceria_id;",
									"    var alt_carroceria_id = jsonData.result.items.find(x => x.carroceria == \"Qa - Cavalo Mecânico Terceiro\").tipo_carroceria_id;",
									"    ",
									"    pm.environment.set(\"carroceria_id\", carroceria_id);",
									"    pm.environment.set(\"alt_carroceria_id\", alt_carroceria_id);",
									"});",
									"",
									"pm.test(\"Obter Carroceria Reboque\", function () {",
									"    var carroceria_id_reboque = jsonData.result.items.find(x => x.carroceria == \"Qa - Semi Reboque - 3 Eixos (Terceiro)\").tipo_carroceria_id;",
									"    pm.environment.set(\"carroceria_id_reboque\", carroceria_id_reboque);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "90c9d8c2-c37a-414b-998b-f31f1a8ca939",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTipoCarroceriaVeiculo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"carroceria\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"carroceria\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8cbd583f-bbea-49b1-9357-3045ef8e27f1",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "922a74a0-bd7a-4976-9b3c-536e8463ad27",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220\",\r\n    \"operation\": \"insVeiculo\",\r\n    \"parameters\": {\r\n        \"veiculo_id\": null,\r\n        \"placa\": \"{{placa}}\",\r\n        \"uf\": \"{{uf}}\",\r\n        \"municipio_id\": \"{{municipio_id}}\",\r\n        \"ano\": \"{{ano_fab}}\",\r\n        \"chassis\": \"{{chassis}}\",\r\n        \"renavam\": \"{{renavam}}\",\r\n        \"modalidade\": \"{{modalidade}}\",\r\n        \"cor\": \"{{cor}}\",\r\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\r\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\r\n        \"marca_id\": \"{{marca_id}}\",\r\n        \"modelo_id\": \"{{modelo_id}}\",\r\n        \"volume\": \"\",\r\n        \"peso\": \"\",\r\n        \"tara\": \"\",\r\n        \"proprietario\": []\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89f0f437-8b4f-44c2-9155-077422630712",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altVeiculo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "08bb134a-06f5-4c63-9622-738bc2a6b42d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f57c6292-d51f-4da1-bce8-34a3e6a02245",
								"exec": [
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id}}\",\n        \"placa\": \"{{placa_id}}\",\n        \"uf\": \"{{alt_uf}}\",\n        \"municipio_id\": \"{{alt_municipio_id}}\",\n        \"ano\": \"{{alt_ano_fab}}\",\n        \"chassis\": \"{{alt_chassis}}\",\n        \"renavam\": \"{{alt_renavam}}\",\n        \"modalidade\": \"{{alt_modalidade}}\",\n        \"cor\": \"{{alt_cor}}\",\n        \"tipo_carroceria_id\": \"{{alt_carroceria_id}}\",\n        \"agrupamento_id\": \"\",\n        \"marca_id\": \"{{alt_marca_id}}\",\n        \"modelo_id\": \"{{alt_modelo_id}}\",\n        \"volume\": \"0\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoAlterado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a39b053-ca45-4711-8546-7e188ec28168",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Editar Municipio\", function () {",
									"    var municipio_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_request = pm.environment.get(\"alt_municipio_id\"); ",
									"    ",
									"    pm.expect(municipio_response).eql(municipio_request);",
									"});",
									"",
									"pm.test(\"Editar Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"alt_ano_fab\"); ",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"}); ",
									"",
									"pm.test(\"Editar Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"alt_chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Editar Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"alt_cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Editar Carroceria\", function () {",
									"    var carroceria_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_request = pm.environment.get(\"alt_carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_response).eql(carroceria_request);",
									"});",
									"",
									"pm.test(\"Editar Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"alt_renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Editar Marca\", function () {",
									"    var marca_response = jsonData.result.items[0].marca_id;",
									"    var marca_request = pm.environment.get(\"alt_marca_id\");",
									"    ",
									"    pm.expect(marca_response).eql(marca_request);",
									"});",
									"",
									"pm.test(\"Editar Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"alt_modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "51764d7d-a462-4d64-9785-502e5af6da07",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6389390a-e721-4468-b771-bbf8f5967fab",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "83c2a6ef-4cb0-4c82-a1a7-0f3791e031f2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MOTORISTA",
			"item": [
				{
					"name": "M220 - getNacionalidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "206aedf7-4a1a-4da4-8577-8bc0ac885011",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Nacionalidade\", function () {",
									"    var nacionalidade_id = jsonData.result.items[0].cod_nacionalidade;",
									"    var nacionalidade_id_edicao = jsonData.result.items[1].cod_nacionalidade;",
									"    ",
									"    pm.environment.set(\"nacionalidade_id\", nacionalidade_id);",
									"    pm.environment.set(\"nacionalidade_id_edicao\", nacionalidade_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getNacionalidade\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"nacionalidade\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"nacionalidade\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220  - getTelefoneTipo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07f26283-b442-44c7-a791-dc82cf61551d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Telefone\", function () {",
									"    var tipo_fone = jsonData.result.items[0].telefone_tipo_id;",
									"    var alt_tipo_fone = jsonData.result.items[2].telefone_tipo_id;",
									"    ",
									"    pm.environment.set(\"tipo_fone_id\", tipo_fone); ",
									"    pm.environment.set(\"alt_tipo_fone_id\", alt_tipo_fone);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTelefoneTipo\",\n    \"parameters\": {\n    \t\"telefone_tipo_id\": \"%\"\n    } \n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getEmailTipo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee844fa4-36bb-4296-8ceb-24b8f74b55a5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Email\", function () {",
									"    var email_tipo_id = jsonData.result.items[0].email_tipo_id;",
									"    var alt_email_tipo_id = jsonData.result.items[1].email_tipo_id;",
									"    ",
									"    pm.environment.set(\"email_tipo_id\", email_tipo_id);",
									"    pm.environment.set(\"alt_email_tipo_id\", alt_email_tipo_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getEmailTipo\",\n    \"parameters\": {\n    \t\"email_tipo_id\": \"%\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getAgencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f4608d3-d0fd-4ddf-b63d-0659845bb1ca",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Banco/Agência\", function () {",
									"    var banco_id = jsonData.result.items[0].banco_id;",
									"    var agencia_id = jsonData.result.items[0].agencia_id;",
									"    pm.environment.set(\"banco_id\", banco_id);",
									"    pm.environment.set(\"agencia_id\", agencia_id);",
									"    ",
									"    var banco_1_id = jsonData.result.items[1].banco_id;",
									"    var agencia_1_id = jsonData.result.items[1].agencia_id;",
									"    pm.environment.set(\"banco_1_id\", banco_1_id);",
									"    pm.environment.set(\"agencia_1_id\", agencia_1_id);",
									"    ",
									"    //variaveis editar",
									"    var alt_banco_id = jsonData.result.items[2].banco_id;",
									"    var alt_agencia_id = jsonData.result.items[2].agencia_id;",
									"    pm.environment.set(\"alt_banco_id\", alt_banco_id);",
									"    pm.environment.set(\"alt_agencia_id\", alt_agencia_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getAgencia\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"agencia_completa\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"column\": \"%\",\n                    \"operator\": \"equal\"\n                },\n                {\n                    \"value\": \"\",\n                    \"column\": \"agencia_completa\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd695c72-385f-49c3-9671-1ac7a74c849a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8b8c4024-fe4b-441f-ac16-67a1ece2aef1",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 1;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaMotoristaGet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d38dcdb-5c64-4105-a674-c5ff1165d265",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter CPF Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cnpj_cpf;",
									"    pm.environment.set(\"mantem_cnpj_cpf\", id_pessoa);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_pessoa}}\",\n        \"operation\": \"SELECT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaMotoristaUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "135796ca-c489-4d48-88b7-1bca0dfbbe4a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"num_pis_edicao\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Editar Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero_edicao\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Editar RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg_edicao\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Editar Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id_edicao\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Naturalidade\", function () {",
									"    var naturalidade_response = jsonData.result.nat_municipio_id;",
									"    var naturalidade_request = pm.environment.get(\"alt_municipio_id\");",
									"    ",
									"    pm.expect(naturalidade_response).eql(naturalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão RG\", function () {",
									"    var data_rg_response = jsonData.result.cart_ident_emissao;",
									"    var data_rg_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_rg_response).eql(data_rg_request);",
									"});",
									"",
									"pm.test(\"Editar Emissor RG\", function () {",
									"    var emissor_rg_response = jsonData.result.cart_ident_orgao;",
									"    var emissor_rg_request = pm.environment.get(\"emissor_rg_edicao\");",
									"    ",
									"    pm.expect(emissor_rg_response).eql(emissor_rg_request);",
									"});",
									"",
									"pm.test(\"Editar UF Emissor RG\", function () {",
									"    var uf_emissao_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_emissao_rg_request = pm.environment.get(\"alt_uf\");",
									"    ",
									"    pm.expect(uf_emissao_rg_response).eql(uf_emissao_rg_request);",
									"});",
									"",
									"//===================================================================",
									"pm.test(\"Editar Número Registro CNH\", function () {",
									"    var cnh_registro_response = jsonData.result.cnh_num_registro;",
									"    var cnh_registro_request = pm.environment.get(\"cnh_registro_edicao\");",
									"",
									"    pm.expect(cnh_registro_response).eql(cnh_registro_request);",
									"});",
									"",
									"pm.test(\"Editar Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh_edicao\");",
									"",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga_edicao\");",
									"",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Data Primeira CNH\", function () {",
									"    var data_primeira_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var data_primeira_cnh_request = pm.environment.get(\"data_antiga_edicao\");",
									"",
									"    pm.expect(data_primeira_cnh_response).eql(data_primeira_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Data Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura_edicao\");",
									"",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Número CNH\", function () {",
									"    var cnh_response = jsonData.result.cnh_numero;",
									"    var cnh_request = pm.environment.get(\"cnh_numero_edicao\");",
									"",
									"    pm.expect(cnh_response).eql(cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Categoria\", function () {",
									"    var categoria_response = jsonData.result.cnh_cod_categoria;",
									"    var categoria_request = pm.environment.get(\"categoria_cnh_edicao\");",
									"",
									"    pm.expect(categoria_response.trim()).eql(categoria_request);",
									"});",
									"",
									"pm.test(\"Editar UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"alt_uf\");",
									"",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Pai CNH\", function () {",
									"    var pai_cnh_response = jsonData.result.nome_pai;",
									"    var pai_cnh_request = pm.environment.get(\"nome_edicao\");",
									"",
									"    pm.expect(pai_cnh_response).eql(pai_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Mãe CNH\", function () {",
									"    var mae_cnh_response = jsonData.result.nome_mae;",
									"    var mae_cnh_request = pm.environment.get(\"nome_edicao\");",
									"",
									"    pm.expect(mae_cnh_response).eql(mae_cnh_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//======================================================================================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"",
									"//=================================================================================================================================",
									"",
									"pm.test(\"Editar Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).banco_id;",
									"    var banco_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Editar Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).conta;",
									"    pm.environment.set(\"debug_cod\", conta_response);",
									"    var conta_request = pm.environment.get(\"conta_edicao2\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_edicao2\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Editar Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_edicao\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_edicao\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "444e74a7-64ad-4cf7-8002-806ef8f21712",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"cod_pessoa\": \"{{cod_pessoa}}\",\n        \"nat_municipio_id\": \"{{alt_municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id_edicao}}\",\n        \"cnpj_cpf\": \"{{mantem_cnpj_cpf}}\",\n        \"razao_social\": \"{{nome_edicao}}\",\n        \"cod_sexo\": \"{{genero_edicao}}\",\n        \"data_nascimento\": \"{{data_antiga_edicao}}\",\n        \"pis_pasep_nit\": \"{{num_pis_edicao}}\",\n        \"cart_ident_num\": \"{{rg_edicao}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg_edicao}}\",\n        \"cart_ident_uf\": \"{{alt_uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga_edicao}}\",\n        \"cnh_num_registro\": \"{{cnh_registro_edicao}}\",\n        \"cnh_numero\": \"{{cnh_numero_edicao}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh_edicao}}\",\n        \"cnh_uf\": \"{{alt_uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh_edicao}}\",\n        \"cnh_validade\": \"{{data_futura_edicao}}\",\n        \"cnh_data_emissao\": \"{{data_antiga_edicao}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga_edicao}}\",\n        \"nome_mae\": \"{{nome_edicao}}\",\n        \"nome_pai\": \"{{nome_edicao}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_endereco\": \"{{cod_endereco}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_endereco\": \"{{cod_endereco2}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": \"{{cod_telefone}}\",\n                \"operation\": \"UPDATE\",\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": \"\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": \"{{cod_telefone2}}\",\n                \"operation\": \"UPDATE\",\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": \"\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_email\": \"{{cod_email}}\",\n                \"email_id\": \"{{cod_email}}\",\n                \"cod_pessoa\": \"{{cod_pessoa}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"type\": \"\",\n                \"email_proprietario\": \"AGILE\",\n                \"tipo_email\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_email\": \"{{cod_email2}}\",\n                \"email_id\": \"{{cod_email2}}\",\n                \"cod_pessoa\": \"{{cod_pessoa}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"type\": \"\",\n                \"email_proprietario\": \"AGILE\",\n                \"tipo_email\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao2}}\",\n                \"conta_dv\": \"{{dv_edicao2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\",\n                \"cod_conta\": \"{{cod_conta}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao}}\",\n                \"conta_dv\": \"{{dv_edicao}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\",\n                \"cod_conta\": \"{{cod_conta2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PARTICIPANTE",
			"item": [
				{
					"name": "M220 - manipulaClientePF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dee8e23d-25f7-463a-8b48-30f3a0dffa20",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter CPF Participante PF\", function () {",
									"    var cpf_pessoa = jsonData.result.cnpj_cpf;",
									"    pm.environment.set(\"cpf_part_pf\", cpf_pessoa);",
									"});",
									"",
									"",
									"pm.test(\"Obter Código Participante PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pf\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Participante PF\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_participante_pf\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_participante_pf\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone Participante PF\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_participante_pf\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_participante_pf\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço Participante PF\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_participante_pf\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_participante_pf\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf_participante\"); ",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_participante\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var cidade_response = jsonData.result.nat_municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Insere PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_participante\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b76356e1-5277-44a0-b082-21f7e0f33f2d",
								"exec": [
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    //Participante",
									"    var cpf_participante = geraCpf();",
									"    var cpf_participante_edicao = geraCpf();",
									"    pm.environment.set(\"cpf_participante\", cpf_participante);",
									"    pm.environment.set(\"cpf_participante_edicao\", cpf_participante_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"ADRIANA\", \"ANA\", \"MARIA\", \"SANDRA\", \"JULIANA\", \"ANTONIO\", \"CARLOS\", \"FRANCISCO\", \"JOAO\", \"JOSE\", \"BRUNA\", \"CAMILA\", \"JESSICA\", \"LETICIA\", \"AMANDA\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\", \"GABRIEL\", \"BERNARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    var aux = Math.round(Math.random() * 13);",
									"    ",
									"    var nome_completo = array_nome[aux] + ' ' + comp_nome[aux] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {//Participante",
									"    var nome_participante = geraNome();",
									"    var nome_participante_edicao = geraNome();",
									"    pm.environment.set(\"nome_participante\", nome_participante);",
									"    pm.environment.set(\"nome_participante_edicao\", nome_participante_edicao);",
									"    ",
									"    var nome_participante_pj = geraNome();",
									"    var nome_participante_pj_edicao = geraNome();",
									"    pm.environment.set(\"nome_participante_pj\", nome_participante_pj);",
									"    pm.environment.set(\"nome_participante_pj_edicao\", nome_participante_pj_edicao);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {//Participante",
									"    var pis_participante = geraPis();",
									"    var pis_participante_edicao = geraPis();",
									"    pm.environment.set(\"pis_participante\", pis_participante);",
									"    pm.environment.set(\"pis_participante_edicao\", pis_participante_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_participante}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"razao_social\": \"{{nome_participante}}\",\n        \"nome_fantasia\": \"\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"pis_pasep_nit\": \"{{pis_participante}}\",\n        \"cod_atividade_fiscal\": \"\",\n        \"cod_regime_tributario\": null,\n        \"tipo_lucro\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClienteUpdatePF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1823c4d-ed4b-4e95-8739-a7d49bcfa4de",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//InsGrupoNegociador",
									"pm.test(\"Obter Código Participante PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pf\", id_pessoa);",
									"});",
									"",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_participante_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero_edicao\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Editar PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_participante_edicao\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Editar Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id_edicao\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Naturalidade\", function () {",
									"    var naturalidade_response = jsonData.result.nat_municipio_id;",
									"    var naturalidade_request = pm.environment.get(\"alt_municipio_id\");",
									"    ",
									"    pm.expect(naturalidade_response).eql(naturalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pf\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pf\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pf\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pf\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//========================================================================================="
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_participante_pf}}\",\n        \"cnpj_cpf\": \"{{cpf_part_pf}}\",\n        \"cod_sexo\": \"{{genero_edicao}}\",\n        \"razao_social\": \"{{nome_participante_edicao}}\",\n        \"data_nascimento\": \"{{data_antiga_edicao}}\",\n        \"nat_municipio_id\": \"{{alt_municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id_edicao}}\",\n        \"pis_pasep_nit\": \"{{pis_participante_edicao}}\",\n        \"cnae\": \"\",\n        \"def_fisica\": 0,\n        \"def_visual\": 0,\n        \"def_reabilitado\": 0,\n\t\t\"def_auditiva\": 0,\n\t\t\"def_mental\": 0,\n\t\t\"def_intelectual\": 0,\n        \"enderecos\": [\n            {\n            \t\"cod_endereco\": \"{{cod_endereco_participante_pf}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_participante_pf}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_participante_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_participante_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_participante_pf}}\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_participante_pf}}\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRegimeTributario",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69ea934e-f183-4722-9149-d4e119e6fa26",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);",
									"});",
									"",
									"pm.test(\"Obter Atividade Fiscal\", function () {",
									"    var regime_tribut = jsonData.result.items[0].cod_regime_tributario;",
									"    regime_tribut = jsonData.result.items.find(x => x.regime_tributario == \"Regime Normal\").cod_regime_tributario;",
									"    ",
									"    pm.environment.set(\"regime_tribut\", regime_tribut);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRegimeTributario\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTipoLucro",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9d6de47-4a4c-4f2c-bf53-ebed7f57d506",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);",
									"});",
									"",
									"pm.test(\"Obter Lucro\", function () {",
									"    var lucro_pj = jsonData.result.items[0].tipo_lucro;",
									"    var lucro_pj_edicao = jsonData.result.items[1].tipo_lucro;",
									"    pm.environment.set(\"lucro_pj\", lucro_pj);",
									"    pm.environment.set(\"lucro_pj_edicao\", lucro_pj_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTipoLucro\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCNAE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc7a96f5-c0da-4ecc-81a7-e58953f62232",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter CNAE\", function () {",
									"    var cnae_pj = jsonData.result.items[0].cnae;",
									"    var cnae_pj_edicao = jsonData.result.items[1].cnae;",
									"    pm.environment.set(\"cnae_pj\", cnae_pj);",
									"    pm.environment.set(\"cnae_pj_edicao\", cnae_pj_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCNAE\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"cnae_completo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"cnae_completo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 50\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getAtividadeFiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8225fb5b-69c7-46f3-88f9-745f8082b2e6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Atividade Fiscal\", function () {",
									"    var at_fiscal_pj = jsonData.result.items.find(x => x.descricao == \"Contrib.-Transporte\").cod_atividade_fiscal;",
									"    var at_fiscal_pj_edicao = jsonData.result.items.find(x => x.descricao == \"Contrib.-Transporte\").cod_atividade_fiscal;",
									"    pm.environment.set(\"at_fiscal_pj\", at_fiscal_pj);",
									"    pm.environment.set(\"at_fiscal_pj_edicao\", at_fiscal_pj_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getAtividadeFiscal\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05fbe121-dda0-430b-a99c-9facfbe6bc52",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter CNPJ Participante PJ\", function () {",
									"    var cnpj_part_pj = jsonData.result.cnpj_cpf;",
									"    pm.environment.set(\"cnpj_part_pj\", cnpj_part_pj);",
									"});",
									"",
									"",
									"pm.test(\"Obter Código Participante PJ\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pj\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Participante PJ\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_participante_pj\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_participante_pj\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone Participante PJ\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_participante_pj\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_participante_pj\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço Participante PJ\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_participante_pj\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_participante_pj\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CNPJ\", function () {",
									"    var cnpj_response = jsonData.result.cnpj_cpf;",
									"    var cnpj_request = pm.environment.get(\"cnpj_participante\"); ",
									"    ",
									"    pm.expect(cnpj_response).eql(cnpj_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_participante_pj\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fant_participante\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"pm.test(\"Insere CNAE\", function () {",
									"    var cnae_response = jsonData.result.cnae;",
									"    var cnae_request = pm.environment.get(\"cnae_pj\"); ",
									"    ",
									"    pm.expect(cnae_response).eql(cnae_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    cod_regime_response = ''+cod_regime_response;",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9bfacc1e-327f-4b16-89f2-63e9c1720c66",
								"exec": [
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCnpj() {",
									"\tvar n = 9;",
									"\tvar n1  = gera_random(n);",
									"\tvar n2  = gera_random(n);",
									" \tvar n3  = gera_random(n);",
									" \tvar n4  = gera_random(n);",
									" \tvar n5  = gera_random(n);",
									"\tvar n6  = gera_random(n);",
									" \tvar n7  = gera_random(n);",
									" \tvar n8  = gera_random(n);",
									" \tvar n9  = 0;//gera_random(n);",
									" \tvar n10 = 0;//gera_random(n);",
									" \tvar n11 = 0;//gera_random(n);\t",
									" \tvar n12 = 1;//gera_random(n);\t\t",
									"\tvar d1 = n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;",
									"\td1 = 11 - (mod(d1,11) );",
									"\t\t \t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t\t \t",
									" \tvar d2 = d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;",
									" \td2 = 11 - (mod(d2,11) );",
									"\t\t \t",
									" \tif (d2 >= 10) d2 = 0;",
									"\t\t \t",
									"\tvar gera_cnpj = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+d1+d2;",
									"\t\t\t",
									"\treturn gera_cnpj;",
									"}",
									"",
									"pm.test(\"Gerar CNPJ\", function () {//Participante",
									"    var cnpj_participante = geraCnpj();",
									"    pm.environment.set(\"cnpj_participante\", cnpj_participante);",
									"});",
									"function geraTipoLucro() {",
									"    var lucro = Math.floor((Math.random() * 2) + 1);",
									"    return lucro;",
									"} ",
									"",
									"pm.test(\"Gerar Tipo de Lucro\", function () {",
									"    var tipo_lucro = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro\", tipo_lucro);",
									"    ",
									"    var tipo_lucro_edicao = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro_edicao\", tipo_lucro_edicao);",
									"});",
									"",
									"",
									"//Gerar Nome Fantasia",
									"function geraNomeFantasia() {",
									"    var array_nome = [\"TRANS\", \"LOG\", \"TRANSPORTES\", \"EXPRESS\", \"EXPRESSO\", \"HORTIFRUTI\", \"LOGISTICA\", \"RAPIDO\", \"FAZENDA\", \"IRMAOS\", \"COMERCIO\", \"BANALORI\", \"IGARASHI\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\"];",
									"    var position = Math.round(Math.random() * 11);",
									"    ",
									"    var fantasia = array_nome[position] + ' ' + comp_nome[position];",
									"    ",
									"    return fantasia;",
									"}",
									"",
									"pm.test(\"Gerar Nome Fantasia\", function () {",
									"    //Participante",
									"    var nome_fant_participante = geraNomeFantasia();",
									"    var nome_fant_participante_edicao = geraNomeFantasia();",
									"    ",
									"    pm.environment.set(\"nome_fant_participante\", nome_fant_participante);",
									"    pm.environment.set(\"nome_fant_participante_edicao\", nome_fant_participante_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cnpj_participante}}\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"{{nome_participante_pj}}\",\n        \"nome_fantasia\": \"{{nome_fant_participante}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj}}\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClienteUpdatePJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "809a1ecc-ddea-441e-be8c-b27267cf482b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//InsGrupoNegociador",
									"pm.test(\"Obter Código Participante PJ\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pj\", id_pessoa);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_participante_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Fantasia\", function () {",
									"    var nome_response = jsonData.result.nome_fantasia;",
									"    var nome_request = pm.environment.get(\"nome_fant_participante_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar CNAE\", function () {",
									"    var nome_response = jsonData.result.cnae;",
									"    var nome_request = pm.environment.get(\"cnae_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj_edicao\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Editar Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    cod_regime_response = ''+cod_regime_response;",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro_edicao\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pj\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pj\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pj\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pj\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_participante_pj}}\",\n        \"cnpj_cpf\": \"{{cnpj_part_pj}}\",\n        \"razao_social\": \"{{nome_participante_pj_edicao}}\",\n        \"nome_fantasia\": \"{{nome_fant_participante_edicao}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj_edicao}}\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj_edicao}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro_edicao}}\",\n        \"enderecos\": [\n            {\n            \t\"cod_endereco\": \"{{cod_endereco_participante_pj}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_participante_pj}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_participante_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_participante_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_participante_pj}}\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_participante_pj}}\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Expedidor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4b469de-143a-483c-8e2c-c4a1dadd2d0b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count === 0){",
									"        pm.expect(count).eql(0);",
									"    }else{",
									"        pm.expect(count).above(0);",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Participantes Cadastrados Repom",
									"//Verifica se já existem participantes cadastrados repom",
									"pm.environment.set(\"cpf_expedidor_repom\", 29438251073); //número cpf",
									"//pm.environment.set(\"cpf_recebedor_repom\", 99588153034); //número cpf",
									"",
									"pm.test('Verifica participantes', () => {",
									"    var exist_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_expedidor\", exist_expedidor);",
									"",
									"    if (exist_expedidor) {",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }",
									"",
									"    /*var exist_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_recebedor\", exist_recebedor);",
									"",
									"    if (exist_expedidor && exist_recebedor) {",
									"        postman.setNextRequest(null);",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        var id_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }",
									"",
									"    else if (exist_expedidor) {",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }*/",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"29438251073\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePF Expedidor Repom",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7a64742-f84f-4844-880e-93e186c3a576",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter Código Participante Repom\", function () {",
									"    var id_expedidor = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8f32ff77-959d-4481-964f-ce7c538eca45",
								"exec": [
									"//Gerador Tipo Endereço\r",
									"function geraTipoEndereco() {\r",
									"    var sort = Math.floor((Math.random() * 3) + 1);\r",
									"    var tipo_endereco = '';\r",
									"    \r",
									"    switch (sort) {\r",
									"        case 1:\r",
									"            tipo_endereco = 5;\r",
									"            break;\r",
									"        case 2: \r",
									"            tipo_endereco = 2;\r",
									"            break;\r",
									"        case 3:\r",
									"            tipo_endereco = 1;\r",
									"            break;\r",
									"    }\r",
									"    \r",
									"    return tipo_endereco;\r",
									"}\r",
									"\r",
									"pm.test(\"Gerar Tipo Endereço\", function () {\r",
									"    var cod_endereco_tipo = geraTipoEndereco();\r",
									"    pm.environment.set(\"codEnderecoTipo\", cod_endereco_tipo);\r",
									"});\r",
									"\r",
									"//Endereço\r",
									"function geraBairro() {\r",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];\r",
									"    var sort = Math.round(Math.random() * 7);\r",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;\r",
									"    var vila = array_bairro[sort]+\" \"+aux;\r",
									"    return vila;\r",
									"}\r",
									"\r",
									"function geraLogradouro() {\r",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",\r",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];\r",
									"    var sort = Math.round(Math.random() * 11);\r",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;\r",
									"    var rua = array_rua[sort]+\" \"+aux;\r",
									"    return rua;\r",
									"}\r",
									"\r",
									"function geraComplemento() {\r",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];\r",
									"    var sort = Math.round(Math.random() * 4);\r",
									"    var complem = array_complemento[sort];\r",
									"    return complem;\r",
									"}\r",
									"\r",
									"function geraNumeroEndereco() {\r",
									"    var num_end = Math.round((Math.random() * 1000) + 100);\r",
									"    return num_end;\r",
									"}\r",
									"\r",
									"pm.test(\"Gerar Endereço\", function () {\r",
									"    var logradouro = geraLogradouro();\r",
									"    var complemento = geraComplemento();\r",
									"    var num_endereco = geraNumeroEndereco();\r",
									"    num_endereco = ''+num_endereco;\r",
									"    var bairro = geraBairro();\r",
									"    \r",
									"    pm.environment.set(\"logradouro\", logradouro);\r",
									"    pm.environment.set(\"numeroEndereco\", num_endereco);\r",
									"    pm.environment.set(\"bairro\", bairro);\r",
									"    pm.environment.set(\"complemento\", complemento);\r",
									"});\r",
									"\r",
									"//Inscrição Estadual\r",
									"pm.test(\"Gerar Inscrição Estadual\", function () {\r",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". \r",
									"    // 55492(PR)\r",
									"    \r",
									"    var municipio_id_ins_est = 55492;\r",
									"    var ins_estadual = '6182694930';\r",
									"    pm.environment.set(\"municipioId\", municipio_id_ins_est);\r",
									"    pm.environment.set(\"inscricaoEstadual\", ins_estadual);\r",
									"\r",
									"    //CEP\r",
									"    pm.environment.set(\"cepEnderecoEmpresa\", 84100000);\r",
									"});\r",
									"\r",
									"//Endereço padrão\r",
									"pm.environment.set(\"enderecoPadrao\", 1);\r",
									"\r",
									"//UF empresa\r",
									"pm.environment.set(\"ufEmpresa\", \"PR\");\r",
									"\r",
									"//Atividade fiscal\r",
									"pm.environment.set(\"codAtividadeFiscal\", 4);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_expedidor_repom}}\",\n        \"cod_sexo\": \"M\",\n        \"razao_social\": \"JOÃO EXPEDIDOR\",\n        \"data_nascimento\": \"1980-12-22 03:00:00\",\n        \"nat_municipio_id\": 67326,\n        \"cod_nacionalidade\": 10,\n        \"cnae\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"37410000\",\n                \"uf\": \"MG\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{numeroEndereco}}\",\n                \"complemento\": \"\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": 39055,\n                \"cod_endereco_tipo\": \"{{codEnderecoTipo}}\",\n                \"endereco_padrao\": \"{{enderecoPadrao}}\",\n                \"cod_atividade_fiscal\": 4,\n                \"inscricao_estadual\": \"8405394095028\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"54986958789\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": 54,\n                \"telefone_tipo_id\": 3,\n                \"telefone_padrao\": 1,\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": 0,\n                \"email\": \"joao.expedidor@gmail.com\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": 1,\n                \"endereco\": \"joao.expedidor@gmail.com\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"pis_pasep_nit\": \"\",\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaCliente SelectExpedidor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17da8bfc-e477-4782-b0fb-0355bbd6ef29",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Obter código endereço expedidor Repom\", function () {",
									"    var cod_end_expedidor_repom = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_expedidor_repom\", cod_end_expedidor_repom);",
									"});",
									"",
									"var exist_recebedor = pm.environment.get(\"exist_recebedor\");",
									"",
									"if (exist_recebedor) postman.setNextRequest(\"M220 - manipulaCliente SelectRecebedor\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_expedidor_repom}}\",\n        \"operation\": \"SELECT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Recebedor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a58245d-0e58-4c8a-8df8-1a830d2da0d8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count === 0){",
									"        pm.expect(count).eql(0);",
									"    }else{",
									"        pm.expect(count).above(0);",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Participantes Cadastrados Repom",
									"//Verifica se já existem participantes cadastrados repom",
									"//pm.environment.set(\"cpf_expedidor_repom\", 29438251073); //número cpf",
									"pm.environment.set(\"cpf_recebedor_repom\", 99588153034); //número cpf",
									"",
									"pm.test('Verifica participantes', () => {",
									"    /*var exist_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_expedidor\", exist_expedidor);*/",
									"",
									"    var exist_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_recebedor\", exist_recebedor);",
									"",
									"    if (exist_recebedor) {",
									"        var id_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectRecebedor\");",
									"    }",
									"",
									"    /*if (exist_expedidor && exist_recebedor) {",
									"        postman.setNextRequest(null);",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        var id_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }",
									"",
									"    else if (exist_expedidor) {",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }*/",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"99588153034\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePF Recebedor Repom",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bae8dd9-1755-46e3-b71c-7e1be828e4b3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter Código Participante\", function () {",
									"    var id_recebedor = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "08e63821-68a6-4f65-bc25-3e32f0cba67d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_recebedor_repom}}\",\n        \"cod_sexo\": \"M\",\n        \"razao_social\": \"JOAO RECEBEDOR\",\n        \"data_nascimento\": \"1956-12-26 03:00:00\",\n        \"nat_municipio_id\": 72451,\n        \"cod_nacionalidade\": 10,\n        \"cnae\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"17830000\",\n                \"uf\": \"SP\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{numeroEndereco}}\",\n                \"complemento\": \"\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": 83151,\n                \"cod_endereco_tipo\": 1,\n                \"endereco_padrao\": \"{{enderecoPadrao}}\",\n                \"cod_atividade_fiscal\": \"{{codAtividadeFiscal}}\",\n                \"inscricao_estadual\": \"190579858855\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"54988596358\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": 54,\n                \"telefone_tipo_id\": 2,\n                \"telefone_padrao\": 1,\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": 0,\n                \"email\": \"joao.recebedor@gmail.com\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": 1,\n                \"endereco\": \"joao.recebedor@gmail.com\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"pis_pasep_nit\": \"\",\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaCliente SelectRecebedor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a463b6d2-5e59-40fc-a9f8-0c478c5338ad",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Obter código endereço recebedor Repom\", function () {",
									"    var cod_end_recebedor_repom = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_recebedor_repom\", cod_end_recebedor_repom);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e01d61b0-a3bc-45d3-be14-5fcedeab68b3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_recebedor_repom}}\",\n        \"operation\": \"SELECT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PRESTADOR DE SERVICOS",
			"item": [
				{
					"name": "M220 - manipulaProprietarioPF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "950658cc-4bb9-4561-8354-9da55f2428f1",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Prestador Serviços PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_prest_serv_pf\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_prest_serv_pf\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_prest_serv_pf\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta_prest_serv_pf\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2_prest_serv_pf\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_prest_serv_pf\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_prest_serv_pf\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_prest_serv_pf\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_prest_serv_pf\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf_prest_serv\"); ",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var cidade_response = jsonData.result.nat_municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Insere PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_prest_serv\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cb3d1f03-a76c-42bd-be36-ced4967a2241",
								"exec": [
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf_prest_serv = geraCpf();",
									"    var cpf_prest_serv_edicao = geraCpf();",
									"    pm.environment.set(\"cpf_prest_serv\", cpf_prest_serv);",
									"    pm.environment.set(\"cpf_prest_serv_edicao\", cpf_prest_serv_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"ADRIANA\", \"ANA\", \"MARIA\", \"SANDRA\", \"JULIANA\", \"ANTONIO\", \"CARLOS\", \"FRANCISCO\", \"JOAO\", \"JOSE\", \"BRUNA\", \"CAMILA\", \"JESSICA\", \"LETICIA\", \"AMANDA\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\", \"GABRIEL\", \"BERNARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    var aux = Math.round(Math.random() * 13);",
									"    ",
									"    var nome_completo = array_nome[aux] + ' ' + comp_nome[aux] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_prest_serv_edicao = geraNome();",
									"    pm.environment.set(\"nome_prest_serv\", nome);",
									"    pm.environment.set(\"nome_prest_serv_edicao\", nome_prest_serv_edicao);",
									"    ",
									"    var nome2 = geraNome();",
									"    pm.environment.set(\"nome_prest_serv_pj\", nome2);",
									"     var nome3 = geraNome();",
									"    pm.environment.set(\"nome_prest_serv_pj_edicao\", nome3);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var pis_prest_serv = geraPis();",
									"    var pis_prest_serv_edicao = geraPis();",
									"    pm.environment.set(\"pis_prest_serv\", pis_prest_serv);",
									"    pm.environment.set(\"pis_prest_serv_edicao\", pis_prest_serv_edicao);",
									"});",
									"",
									"// Gerar RNTRC / TAC",
									"function geraRntrc() {",
									"    var random_num = Math.floor((Math.random() * 1000) + 5000);",
									"    var random_num2 = Math.floor((Math.random() * 1000) + 5000);",
									"    var rntrc = ''+random_num+random_num2;",
									"    return rntrc;",
									"}",
									"",
									"pm.test(\"Gerar RNTRC / TAC\", function () {",
									"    var numero_rntrc = geraRntrc();",
									"    var numero_rntrc_edicao = geraRntrc();",
									"    ",
									"    pm.environment.set(\"numero_rntrc\", numero_rntrc);",
									"    pm.environment.set(\"numero_rntrc_edicao\", numero_rntrc_edicao);",
									"    ",
									"    var numero_rntrc2 = geraRntrc();",
									"    var numero_rntrc_edicao2 = geraRntrc();",
									"    ",
									"    pm.environment.set(\"numero_rntrc2\", numero_rntrc2);",
									"    pm.environment.set(\"numero_rntrc_edicao2\", numero_rntrc_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"//Data RNTRC",
									"function geraDataEmissaoRntrc() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataEmissaoRntrcEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Emissão RNTRC\", function () {",
									"    var data_emissao_rntrc = geraDataEmissaoRntrc();",
									"    pm.environment.set(\"data_emissao_rntrc\", data_emissao_rntrc);",
									"    ",
									"    var data_emissao_rntrc_edicao = geraDataEmissaoRntrcEdicao();",
									"    pm.environment.set(\"data_emissao_rntrc_edicao\", data_emissao_rntrc_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_prest_serv}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"razao_social\": \"{{nome_prest_serv}}\",\n        \"nome_fantasia\": \"\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"pis_pasep_nit\": \"{{pis_prest_serv}}\",\n        \"cod_atividade_fiscal\": \"\",\n        \"cod_regime_tributario\": null,\n        \"tipo_lucro\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\",\n        \"rntrc_tac\": \"{{numero_rntrc}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaProprietarioUpdatePF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d42caa96-fd5c-4f8d-9461-dd22412f77e7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero_edicao\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Editar PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_prest_serv_edicao\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Editar Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id_edicao\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Naturalidade\", function () {",
									"    var naturalidade_response = jsonData.result.nat_municipio_id;",
									"    var naturalidade_request = pm.environment.get(\"alt_municipio_id\");",
									"    ",
									"    pm.expect(naturalidade_response).eql(naturalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"//RNTRC",
									"pm.test(\"Editar RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc_edicao\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc_edicao\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Editar Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura_edicao\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pf\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pf\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pf\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pf\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"",
									"//=================================================================================================================================",
									"",
									"pm.test(\"Editar Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).banco_id;",
									"    var banco_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Editar Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).conta;",
									"    pm.environment.set(\"debug_cod\", conta_response);",
									"    var conta_request = pm.environment.get(\"conta_edicao2\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_edicao2\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Editar Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_edicao\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_edicao\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n        \"cnpj_cpf\": \"{{cpf_prest_serv}}\",\n        \"cod_sexo\": \"{{genero_edicao}}\",\n        \"razao_social\": \"{{nome_prest_serv_edicao}}\",\n        \"data_nascimento\": \"{{data_antiga_edicao}}\",\n        \"nat_municipio_id\": \"{{alt_municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id_edicao}}\",\n        \"cnae\": \"\",\n        \"pis_pasep_nit\": \"{{pis_prest_serv_edicao}}\",\n        \"def_fisica\": 0,\n        \"def_visual\": 0,\n        \"def_reabilitado\": 0,\n\t\t\"def_auditiva\": 0,\n\t\t\"def_mental\": 0,\n\t\t\"def_intelectual\": 0,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": \"{{cod_endereco_prest_serv_pf}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\":\"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_prest_serv_pf}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_prest_serv_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_prest_serv_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_prest_serv_pf}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_prest_serv_pf}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\",\n        \"rntrc_tac\": \"{{numero_rntrc_edicao}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc_edicao}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura_edicao}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao2}}\",\n                \"cod_conta\": \"{{cod_conta_prest_serv_pf}}\",\n                \"conta_dv\": \"{{dv_edicao2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao}}\",\n                \"cod_conta\": \"{{cod_conta2_prest_serv_pf}}\",\n                \"conta_dv\": \"{{dv_edicao}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaProprietarioPJ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ac6d92f8-9272-4d6b-8aae-535f71b5acf1",
								"exec": [
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCnpj() {",
									"\tvar n = 9;",
									"\tvar n1  = gera_random(n);",
									"\tvar n2  = gera_random(n);",
									" \tvar n3  = gera_random(n);",
									" \tvar n4  = gera_random(n);",
									" \tvar n5  = gera_random(n);",
									"\tvar n6  = gera_random(n);",
									" \tvar n7  = gera_random(n);",
									" \tvar n8  = gera_random(n);",
									" \tvar n9  = 0;//gera_random(n);",
									" \tvar n10 = 0;//gera_random(n);",
									" \tvar n11 = 0;//gera_random(n);\t",
									" \tvar n12 = 1;//gera_random(n);\t\t",
									"\tvar d1 = n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;",
									"\td1 = 11 - (mod(d1,11) );",
									"\t\t \t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t\t \t",
									" \tvar d2 = d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;",
									" \td2 = 11 - (mod(d2,11) );",
									"\t\t \t",
									" \tif (d2 >= 10) d2 = 0;",
									"\t\t \t",
									"\tvar gera_cnpj = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+d1+d2;",
									"\t\t\t",
									"\treturn gera_cnpj;",
									"}",
									"",
									"pm.test(\"Gerar CNPJ\", function () {",
									"    var cnpj = geraCnpj();",
									"    pm.environment.set(\"cnpj_prest_serv\", cnpj);",
									"});",
									"",
									"pm.test(\"Regime Tributário\", function () {",
									"    var regime_tribut = 3;",
									"    pm.environment.set(\"regime_tribut\", regime_tribut);",
									"});",
									"",
									"function geraTipoLucro() {",
									"    var lucro = Math.floor((Math.random() * 2) + 1);",
									"    return lucro;",
									"} ",
									"",
									"pm.test(\"Gerar Tipo de Lucro\", function () {",
									"    var tipo_lucro = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro\", tipo_lucro);",
									"    ",
									"    var tipo_lucro_edicao = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro_edicao\", tipo_lucro_edicao);",
									"});",
									"",
									"",
									"//Gerar Nome Fantasia",
									"function geraNomeFantasia() {",
									"    var array_nome = [\"TRANS\", \"LOG\", \"TRANSPORTES\", \"EXPRESS\", \"EXPRESSO\", \"HORTIFRUTI\", \"LOGISTICA\", \"RAPIDO\", \"FAZENDA\", \"IRMAOS\", \"COMERCIO\", \"BANALORI\", \"IGARASHI\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\"];",
									"    var position = Math.round(Math.random() * 11);",
									"    ",
									"    var fantasia = array_nome[position] + ' ' + comp_nome[position];",
									"    ",
									"    return fantasia;",
									"}",
									"",
									"pm.test(\"Gerar Nome Fantasia\", function () {",
									"    var nome_fantasia = geraNomeFantasia();",
									"    var nome_fantasia_edicao = geraNomeFantasia();",
									"    ",
									"    pm.environment.set(\"nome_fantasia\", nome_fantasia);",
									"    pm.environment.set(\"nome_fantasia_edicao\", nome_fantasia_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bb8db3af-473e-4919-a25a-30e771015fdb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Prestador Serviços PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_prest_serv_pj\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_prest_serv_pj\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_prest_serv_pj\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta_prest_serv_pj\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2_prest_serv_pj\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_prest_serv_pj\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_prest_serv_pj\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_prest_serv_pj\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_prest_serv_pj\", cod_endereco2);",
									"});",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CNPJ\", function () {",
									"    var cnpj_response = jsonData.result.cnpj_cpf;",
									"    var cnpj_request = pm.environment.get(\"cnpj_prest_serv\"); ",
									"    ",
									"    pm.expect(cnpj_response).eql(cnpj_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv_pj\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fantasia\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"pm.test(\"Insere CNAE\", function () {",
									"    var cnae_response = jsonData.result.cnae;",
									"    var cnae_request = pm.environment.get(\"cnae_pj\");",
									"    ",
									"    pm.expect(cnae_response).eql(cnae_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									"",
									"pm.test(\"Insere RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc2\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cnpj_prest_serv}}\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"{{nome_prest_serv_pj}}\",\n        \"nome_fantasia\": \"{{nome_fantasia}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj}}\",\n        \"pis_pasep_nit\": \"\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\",\n        \"rntrc_tac\": \"{{numero_rntrc2}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaProprietarioUpdatePJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c619fa95-ee5b-4f31-a4e5-04c2087b0e11",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Fantasia\", function () {",
									"    var nome_response = jsonData.result.nome_fantasia;",
									"    var nome_request = pm.environment.get(\"nome_fantasia_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar CNAE\", function () {",
									"    var nome_response = jsonData.result.cnae;",
									"    var nome_request = pm.environment.get(\"cnae_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj_edicao\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Editar Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro_edicao\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									"",
									"pm.test(\"Editar RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc_edicao2\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc_edicao\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Editar Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura_edicao\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pj\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pj\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pj\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pj\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"",
									"//=================================================================================================================================",
									"",
									"pm.test(\"Editar Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).banco_id;",
									"    var banco_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Editar Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).conta;",
									"    pm.environment.set(\"debug_cod\", conta_response);",
									"    var conta_request = pm.environment.get(\"conta_edicao2\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_edicao2\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Editar Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_edicao\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_edicao\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_prest_serv_pj}}\",\n        \"cnpj_cpf\": \"{{cnpj_prest_serv}}\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"{{nome_prest_serv_pj_edicao}}\",\n        \"nome_fantasia\": \"{{nome_fantasia_edicao}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj_edicao}}\",\n        \"pis_pasep_nit\": \"\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj_edicao}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro_edicao}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": \"{{cod_endereco_prest_serv_pj}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\":\"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_prest_serv_pj}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_prest_serv_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_prest_serv_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_prest_serv_pj}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pj}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_prest_serv_pj}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pj}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\",\n        \"rntrc_tac\": \"{{numero_rntrc_edicao2}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc_edicao}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura_edicao}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao2}}\",\n                \"cod_conta\": \"{{cod_conta_prest_serv_pj}}\",\n                \"conta_dv\": \"{{dv_edicao2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao}}\",\n                \"cod_conta\": \"{{cod_conta2_prest_serv_pj}}\",\n                \"conta_dv\": \"{{dv_edicao}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PESSOA ESTRANGEIRA",
			"item": [
				{
					"name": "M220 - manipulaCliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01767cda-ee58-4601-b3de-2e147fb140d5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Contribuinte\", function () {",
									"    var cpf_pessoa = jsonData.result.cod_contribuinte;",
									"    pm.environment.set(\"cod_cont_pe\", cpf_pessoa);",
									"});",
									"",
									"",
									"pm.test(\"Obter Código Pessoa Estrangeira\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pe\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa Estrangeira\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_pe\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_pe\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone Pessoa Estrangeira\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_pe\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_pe\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço Pessoa Estrangeira\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_pe\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_pe\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    pm.environment.set(\"teste_insc\", insc_est_response);",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Cód Contribuinte\", function () {",
									"    var cpf_response = jsonData.result.cod_contribuinte;",
									"    var cpf_request = pm.environment.get(\"cod_contribuinte\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_p_estrangeira\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fant_estrangeiro\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d048aa50-9d7b-4ca7-89c1-a3293f0137a4",
								"exec": [
									"//Gerador de Código Contribuinte",
									"function geraCod() {",
									"    var cod = Math.round(Math.random() * 10000) + 5000000;",
									"    return cod;",
									"}",
									"",
									"pm.test(\"Gerar Cód Contribuinte\", function () {",
									"    var cod_contribuinte = geraCod();",
									"    cod_contribuinte = ''+cod_contribuinte;",
									"    var cod_contribuinte_edicao = geraCod();",
									"    pm.environment.set(\"cod_contribuinte\", cod_contribuinte);",
									"    pm.environment.set(\"cod_contribuinte_edicao\", cod_contribuinte_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNomePessoaEstrangeira() {",
									"    var array_nome = [\"ADRIANA\", \"ANA\", \"MARIA\", \"SANDRA\", \"JULIANA\", \"ANTONIO\", \"CARLOS\", \"FRANCISCO\", \"JOAO\", \"JOSE\", \"BRUNA\", \"CAMILA\", \"JESSICA\", \"LETICIA\", \"AMANDA\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\", \"GABRIEL\", \"BERNARDO\"];",
									"    var array_sobrenome = [\"ARGENTINA\", \"ALEMAO\", \"BRASILEIRO\", \"PERUANO\", \"AMERICANO\", \"HOLANDES\", \"CHILENO\", \"MEXICANO\", \"PARAGUAIO\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    var aux = Math.round(Math.random() * 13);",
									"    ",
									"    var nome_completo = array_nome[aux] + ' ' + comp_nome[aux] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Razão Social\", function () {",
									"    var nome_p_estrangeira = geraNomePessoaEstrangeira();",
									"    var nome_p_estrangeira_edicao = geraNomePessoaEstrangeira();",
									"    pm.environment.set(\"nome_p_estrangeira\", nome_p_estrangeira);nome_p_estrangeira",
									"    pm.environment.set(\"nome_p_estrangeira_edicao\", nome_p_estrangeira_edicao);",
									"});",
									"",
									"//Gerador de Nome Fantasia",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome_fant_estrangeiro\", nome);",
									"    pm.environment.set(\"nome_fant_estrangeiro_edicao\", nome_edicao);",
									"})",
									"",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cod_contribuinte\": \"{{cod_contribuinte}}\",\n        \"razao_social\": \"{{nome_p_estrangeira}}\",\n        \"nome_fantasia\": \"{{nome_fant_estrangeiro}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n        \t{\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClienteUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8626ac3-2ba2-45ee-9a18-a465b20423d4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Não Editar Cód Contribuinte\", function () {",
									"    var cpf_response = jsonData.result.cod_contribuinte;",
									"    var cpf_request = pm.environment.get(\"cod_cont_pe\"); ",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_p_estrangeira_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fant_estrangeiro_edicao\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//======================================================================================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_pe\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_pe\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_pe\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_pe\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_pe\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_pe\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_pe\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_pe\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_pe\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_pe\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_pe\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_pe\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f5efe4fd-c877-4149-a23f-d6dd3a3a5aad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_pe}}\",\n        \"cod_contribuinte\": \"{{cod_cont_pe}}\",\n        \"razao_social\": \"{{nome_p_estrangeira_edicao}}\",\n        \"nome_fantasia\": \"{{nome_fant_estrangeiro_edicao}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": \"{{cod_endereco_pe}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\":\"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_pe}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_pe}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_pe}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_pe}}\",\n                \"cod_pessoa\": \"{{cod_pe}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_pe}}\",\n                \"cod_pessoa\": \"{{cod_pe}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CLASSIFICACAO DE NATUREZA",
			"item": [
				{
					"name": "M220 - getNatureza",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c6236e7-8f52-4b0e-a7a3-99cd7d0eb5a0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Natureza Operacional\", function () {",
									"    var natureza_op = jsonData.result.items[0].num_natureza;",
									"    var descricaoNatureza = jsonData.result.items[0].descricao;",
									"    pm.environment.set(\"oper_natureza_id\", natureza_op);",
									"    pm.environment.set(\"descricaoNatureza\", descricaoNatureza);",
									"",
									"",
									"    var natureza_op_edicao = jsonData.result.items[1].num_natureza; ",
									"    pm.environment.set(\"oper_natureza_id_edicao\", natureza_op_edicao);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getNatureza\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaNaturezaComercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "523aca6f-5aad-4797-b8d5-281a6c20721f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Natureza\", function () {",
									"    var class_nat_id = jsonData.result.classificacao_natureza_id;",
									"    pm.environment.set(\"class_nat_id\", class_nat_id);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_natureza\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Insere Natureza Operacional\", function () {",
									"    var count = jsonData.result.natureza_operacional[1].classificacao_natureza_oper_id;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Insere Natureza Operacional Diferente\", function () {",
									"    var num_response = jsonData.result.natureza_operacional[0].num_natureza;",
									"    var num_1_response = jsonData.result.natureza_operacional[1].num_natureza;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"});",
									"// Get para edição",
									"pm.test(\"Obter ID Natureza Operacional\", function () {",
									"    var nat_op_id = jsonData.result.natureza_operacional[0].classificacao_natureza_oper_id;",
									"    pm.environment.set(\"nat_op_id\", nat_op_id);",
									"    var nat_op_id2 = jsonData.result.natureza_operacional[1].classificacao_natureza_oper_id;",
									"    pm.environment.set(\"nat_op_id2\", nat_op_id2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6132bbef-92ff-4403-b19a-ae5f283bcd20",
								"exec": [
									"//Funcões",
									"function descNatureza() {",
									"    var array_descricao = [\"Carga Geral\", \"Carga A Granel\", \"Carga Frigorificada\", \"Carga Perigosa\", \"Neo-Granel\", \"Volumes\", \"Caixas\", \"Fracionada\"];",
									"    var position = Math.round(Math.random() * 7);",
									"    var aux = Math.round((Math.random() * 100) + 10000);",
									"    var aux2 = Math.round(Math.random() * 235) + 15365;",
									"    var classificacao = aux2+' '+array_descricao[position]+aux;",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição Natureza\", function () {",
									"    var desc_natureza = descNatureza();",
									"    pm.environment.set(\"desc_natureza\", desc_natureza);",
									"    var desc_natureza_edicao = descNatureza();",
									"    pm.environment.set(\"desc_natureza_edicao\", desc_natureza_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaNaturezaComercial\",\n    \"parameters\": {\n        \"classificacao_comercial_id\": null,\n        \"operation\": \"INSERT\",\n        \"descricao\": \"{{desc_natureza}}\",\n        \"vinculo_operacional\": [\n            {\n                \"num_natureza\": \"{{oper_natureza_id}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"num_natureza\": \"{{oper_natureza_id_edicao}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaNaturezaComercialUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00fb3682-9a49-4d10-80c6-d80dbd3385d4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_request = pm.environment.get(\"desc_natureza_edicao\"); ",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar Natureza Operacional\", function () {",
									"    var cod_op_response = jsonData.result.natureza_operacional[0].classificacao_natureza_oper_id;",
									"    var cod_op_request = pm.environment.get(\"nat_op_id\");",
									"    cod_op_request = cod_op_request+2;",
									"    pm.expect(cod_op_response).eql(cod_op_request);",
									"    ",
									"    var cod_op_response1 = jsonData.result.natureza_operacional[1].classificacao_natureza_oper_id;",
									"    var cod_op_request1 = pm.environment.get(\"nat_op_id2\");",
									"    cod_op_request1 = cod_op_request1+2;",
									"    ",
									"    pm.expect(cod_op_response1).eql(cod_op_request1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaNaturezaComercial\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"classificacao_natureza_id\": \"{{class_nat_id}}\",\n        \"vinculo_operacional\": [\n        \t{\n                \"classificacao_natureza_oper_id\": \"{{nat_op_id}}\",\n                \"num_natureza\": \"{{oper_natureza_id}}\",\n                \"natureza\": \"\",\n                \"natureza_grupo_id\": \"\",\n                \"descricao\": \"\",\n                \"id\": \"\",\n                \"operation\": \"DELETE\"\n            },\n            {\n                \"classificacao_natureza_oper_id\": \"{{nat_op_id2}}\",\n                \"num_natureza\": \"{{oper_natureza_id_edicao}}\",\n                \"natureza\": \"\",\n                \"natureza_grupo_id\": \"\",\n                \"descricao\": \"\",\n                \"id\": \"\",\n                \"operation\": \"DELETE\"\n            },\n            {\n                \"num_natureza\": \"{{oper_natureza_id}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"num_natureza\": \"{{oper_natureza_id_edicao}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"descricao\": \"{{desc_natureza_edicao}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteClassificacaoNatureza",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bea85dae-3a1e-422b-89a7-2cad66e4dca7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"//Utilizar no update de M220 - altTabelaFrete",
									"pm.test(\"Obter Código Classificação\", function () {",
									"    var class_nat_id_edicao = jsonData.result.items[0].classificacao_natureza_id;",
									"    pm.environment.set(\"class_nat_id_edicao\", class_nat_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteClassificacaoNatureza\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"classificacao_natureza_id\",\n                    \"title\": \"ID Classificacao\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Data inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"Usuário atualização\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CLASSIFICACAO COMERCIAL DO VEICULO",
			"item": [
				{
					"name": "Busca classificação comercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f797cb08-5fb4-473d-9ce5-a13b8c952106",
								"exec": [
									"//Variáveis\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test('Valida o retorno da consulta', function(){\r",
									"    var count = jsonData.result.count;\r",
									"    if(count === 0){\r",
									"        postman.setNextRequest(\"M220 - manipulaClassComercial 1\");\r",
									"    }else{\r",
									"        postman.setNextRequest(\"Remove classificação comercial\");\r",
									"\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"API_TEST\",\r\n    \"operation\": \"executaQuery\",\r\n    \"parameters\": {\r\n        \"query\": {\r\n            \"sql_query\": \"select * from COMERCIAL.V$CLAS_COM_OPER t where t.tipo_carroceria_id = {{carroceria_id}}\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove classificação comercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "087d6f8d-5299-4c78-8e4f-d6155f29d1d5",
								"exec": [
									"//Variáveis\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test('Valida o retorno da consulta', function(){\r",
									"    pm.expect(jsonData.success).eql(true);\r",
									"    pm.expect(jsonData.code).eql(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"API_TEST\",\r\n    \"operation\": \"executaDML\",\r\n    \"parameters\": {\r\n        \"query\": {\r\n            \"sql_query\": \"delete COMERCIAL.V$CLAS_COM_OPER t where t.tipo_carroceria_id = {{carroceria_id}}\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClassComercial 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e7b230d4-c245-405e-9b10-94bd0a35e096",
								"exec": [
									"//Funcões",
									"function descVeiculo() {",
									"    var array_descricao = [\"Semi Reboque Graneleiro\", \"Truck\", \"Bitruck\", \"Semi Reboque Basculante\", \"Semi Reboque Baú\", \"Semi Reboque Sider\", \"Bitrem\", \"Rodotrem\"];",
									"    var position = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 100) + 250000;",
									"    var aux2 = Math.round(Math.random() * 325) + 321545;",
									"    var classificacao = aux2+' '+array_descricao[position]+aux;",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição Veículo\", function () {",
									"    var desc_clas_veiculo = descVeiculo();",
									"    pm.environment.set(\"desc_clas_veiculo\", desc_clas_veiculo);",
									"    ",
									"    var desc_clas_veiculo_edicao = descVeiculo();",
									"    pm.environment.set(\"desc_clas_veiculo_edicao\", desc_clas_veiculo_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Lotação Veículo\", function () {",
									"    var lotacao = Math.round((Math.random() * 50) + 1);",
									"    pm.environment.set(\"lotacao\", lotacao);",
									"    ",
									"    var lotacao_edicao = Math.round((Math.random() * 99) + 51);",
									"    pm.environment.set(\"lotacao_edicao\", lotacao_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "06634a3d-0232-418c-9924-1d69a6f9c1e8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Classificação Comercial Veículo\", function () {",
									"    var class_comercial_id = jsonData.result.classificacao_comercial_id;",
									"    pm.environment.set(\"class_comercial_id\", class_comercial_id);",
									"});",
									"",
									"pm.test(\"Obter ID Tipo Carroceria\", function () {",
									"    var tipo_carroc_id = jsonData.result.classificacao_operacional[0].tipo_carroceria_id;",
									"    pm.environment.set(\"tipo_carroc_id\", tipo_carroc_id);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_clas_veiculo\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Insere Lotação\", function () {",
									"    var lotacao_response = jsonData.result.lotacao_minima;",
									"    var lotacao_request = pm.environment.get(\"lotacao\"); ",
									"    ",
									"    pm.expect(lotacao_response).eql(lotacao_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaClassComercial\",\n    \"parameters\": {\n        \"classificacao_comercial_id\": null,\n        \"operation\": \"INSERT\",\n        \"descricao\": \"{{desc_clas_veiculo}}\",\n        \"lotacao_minima\": \"{{lotacao}}\",\n        \"vinculo_operacional\": [\n            {\n                \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n                \"carroceria\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClassComercial 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c845e205-8834-43b8-9e46-0fa5b7624079",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_request = pm.environment.get(\"desc_clas_veiculo_edicao\"); ",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar Lotação\", function () {",
									"    var lotacao_response = jsonData.result.lotacao_minima;",
									"    var lotacao_request = pm.environment.get(\"lotacao_edicao\"); ",
									"    ",
									"    pm.expect(lotacao_response).eql(lotacao_request);",
									"});",
									"",
									"pm.test(\"Editar Classificação Operacional\", function () {",
									"    var cod_class_response = jsonData.result.classificacao_operacional[0].tipo_carroceria_id;",
									"    var cod_class_request = pm.environment.get(\"alt_carroceria_id\"); ",
									"    pm.expect(cod_class_response).eql(cod_class_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaClassComercial\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"classificacao_comercial_id\": \"{{class_comercial_id}}\",\n        \"vinculo_operacional\": [\n        \t{\n                \"clas_com_oper_id\": \"{{tipo_carroc_id}}\",\n                \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n                \"tipo_carroceria\": \"\",\n                \"carroceria\": \"\",\n                \"id\": \"0\",\n                \"operation\": \"DELETE\"\n            },\n            {\n                \"tipo_carroceria_id\": \"{{alt_carroceria_id}}\",\n                \"carroceria\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"descricao\": \"{{desc_clas_veiculo_edicao}}\",\n        \"lotacao_minima\": \"{{lotacao_edicao}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GRUPO NEGOCIADOR",
			"item": [
				{
					"name": "M220 - getPessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccb9576b-a02d-45be-994e-dd8c587898c3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"function geraIdPessoa() {",
									"    var count = jsonData.result.count;",
									"    if (count > 0) count -= count;",
									"    if (count > 100) count = 100;",
									"    var posicao = Math.floor(Math.random() * count);",
									"    return posicao;",
									"}",
									"",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var aux = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg = jsonData.result.items[aux].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg\", cod_pessoa_grupo_neg);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg_2\", cod_pessoa_grupo_neg_2);",
									"});",
									"",
									"pm.test(\"Obter Código Pessoa Edição\", function () {",
									"    var aux = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg = jsonData.result.items[aux].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg_edicao\", cod_pessoa_grupo_neg);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg_edicao2\", cod_pessoa_grupo_neg_2);",
									"});",
									"",
									"//Participantes Operação Logística",
									"",
									"//Remetentes - Coleta",
									"pm.test(\"Gerar Remetentes\", function () {",
									"    var aux = geraIdPessoa();",
									"    var remetente_1 = jsonData.result.items[aux].cod_pessoa;",
									"    var mun_origem = jsonData.result.items[aux].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"remetente_1\", remetente_1);",
									"    pm.environment.set(\"mun_origem\", mun_origem);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var remetente_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    var mun_origem_2 = jsonData.result.items[aux_pos].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"remetente_edicao\", remetente_2);",
									"    pm.environment.set(\"mun_origem_edicao\", mun_origem_2);",
									"});",
									"",
									"//Destinatário - Entrega",
									"pm.test(\"Gerar Destinatários\", function () {",
									"    var aux = geraIdPessoa();",
									"    pm.environment.set(\"auxiliar_test\", aux);",
									"    ",
									"    var destinatario_1 = jsonData.result.items[aux].cod_pessoa;",
									"    var mun_destino = jsonData.result.items[aux].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"destinatario_1\", destinatario_1);",
									"    pm.environment.set(\"mun_destino\", mun_destino);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    pm.environment.set(\"aux_pos_test\", aux_pos);",
									"    ",
									"    var destinatario_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    var mun_destino_2 = jsonData.result.items[aux_pos].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"destinatario_edicao\", destinatario_2);",
									"    pm.environment.set(\"mun_destino_edicao\", mun_destino_2);",
									"});",
									"",
									"//Tomador de Serviço",
									"pm.test(\"Gerar Tomador\", function () {",
									"    var aux = geraIdPessoa();",
									"    var tomador_serv_1 = jsonData.result.items[aux].cod_pessoa;",
									"    pm.environment.set(\"tomador_serv_1\", tomador_serv_1);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var tomador_serv_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    pm.environment.set(\"tomador_serv_edicao\", tomador_serv_2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getPessoa\",\n    \"parameters\": {\n        \"tipo_pessoa\": \"\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"razao_social\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"razao_social\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insGrupoNegociador",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f34e388e-981f-4a07-ae6a-528b3cc5f6f6",
								"exec": [
									"//Funcões",
									"function descGrupo() {",
									"    var array_descricao = [\"Central De Distribuição\", \"Central De Cargas\", \"Ag. Fretes\"];",
									"    var position = Math.round(Math.random() * 2);",
									"    var aux = Math.round((Math.random() * 100) + 10000);",
									"    var desc = array_descricao[position]+\" \"+aux;",
									"    ",
									"    return desc;",
									"}",
									"",
									"pm.test(\"Gerar Grupo Negociador\", function () {",
									"    var desc_grupo_neg = descGrupo();",
									"    pm.environment.set(\"desc_grupo_neg\", desc_grupo_neg);",
									"    var desc_grupo_neg_edicao = descGrupo();",
									"    pm.environment.set(\"desc_grupo_neg_edicao\", desc_grupo_neg_edicao);",
									"});",
									"",
									"// Gerar",
									"pm.test(\"Gerar Tipo Tabela Frete\", function () {",
									"    var tipo_tf = 1;",
									"    var tipo_tf_edicao = 2;",
									"    pm.environment.set(\"tipo_tf\", tipo_tf);",
									"    pm.environment.set(\"tipo_tf_edicao\", tipo_tf_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8d3e5449-04ca-40ef-8d8b-0e9078660729",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Grupo Negociador\", function () {",
									"    var id_grupo = jsonData.result.produto_cliente_seguro_id;",
									"    pm.environment.set(\"id_grupo\", id_grupo);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insGrupoNegociador\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"descricao\": \"{{desc_grupo_neg}}\",\n        \"permite_tabela_aberta\": 0,\n        \"emite_tabela_frete\": 0,\n        \"modelo_id\": \"{{tipo_tf}}\",\n        \"pessoas\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getGrupoNegociador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fdc4b8-eb9e-4ee3-b888-abcddfc9a701",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_grupo_neg\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Insere Modelo Tabela Frete\", function () {",
									"    var modelo_tf_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_tf_resquest = pm.environment.get(\"tipo_tf\");",
									"    ",
									"    pm.expect(modelo_tf_response).eql(modelo_tf_resquest);",
									"});",
									"",
									"pm.test(\"Insere Código Pessoa\", function () {",
									"    var codigo_p_response = jsonData.result.items[0].pessoas[0].cod_pessoa;",
									"    var codigo_p_resquest = pm.environment.get(\"cod_participante_pf\");",
									"    pm.expect(codigo_p_response).eql(codigo_p_resquest);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getGrupoNegociador\",\n    \"parameters\": {\n        \"lista\": 0,\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"grupo_id\",\n                    \"operator\": \"equal\",\n                    \"value\": \"{{id_grupo}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altGrupoNegociador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ce98529-d929-443d-bfb2-fc2edc6a1d19",
								"exec": [
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altGrupoNegociador\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"grupo_id\": \"{{id_grupo}}\",\n        \"descricao\": \"{{desc_grupo_neg_edicao}}\",\n        \"permite_tabela_aberta\": 0,\n        \"emite_tabela_frete\": 0,\n        \"modelo_id\": \"{{tipo_tf_edicao}}\",\n        \"pessoas\": [\n        \t{\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getGrupoNegociadorUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c65fced4-e5cb-4811-84a3-d9b9c4f3511f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"",
									"//Get Pessoa para Operação Logística",
									"pm.test(\"Obter ID Pessoa OPERLOG\", function () {",
									"    var id_cliente = jsonData.result.items[0].pessoas[0].cod_pessoa;",
									"    pm.environment.set(\"id_cliente\", id_cliente);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_grupo_neg_edicao\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Editar Modelo Tabela Frete\", function () {",
									"    var modelo_tf_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_tf_resquest = pm.environment.get(\"tipo_tf_edicao\");",
									"    ",
									"    pm.expect(modelo_tf_response).eql(modelo_tf_resquest);",
									"});",
									"",
									"pm.test(\"Editar Código Pessoa\", function () {",
									"    var codigo_p_response = jsonData.result.items[0].pessoas[0].cod_pessoa;",
									"    var codigo_p_resquest = pm.environment.get(\"cod_participante_pj\");",
									"    pm.expect(codigo_p_response).eql(codigo_p_resquest);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getGrupoNegociador\",\n    \"parameters\": {\n        \"lista\": 0,\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"grupo_id\",\n                    \"operator\": \"equal\",\n                    \"value\": \"{{id_grupo}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ROTA",
			"item": [
				{
					"name": "M220 - getMunicipio \"Jaraguá/GO\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "131e7fb0-ccce-44d9-bd29-7da621fbb24c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Municípios rota viagem",
									"pm.test(\"Obter Municipio Origem\", function () {",
									"    var origem_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").municipio_id;",
									"    pm.environment.set(\"origem_municipio_id\", origem_municipio_id);",
									"    ",
									"    var referencia_origem_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").referencia_id;",
									"    pm.environment.set(\"referencia_origem_id\", referencia_origem_id);",
									"    ",
									"    var origem_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").latitude;",
									"    pm.environment.set(\"origem_latitude\", origem_latitude);",
									"    ",
									"    var origem_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").longitude;",
									"    pm.environment.set(\"origem_longitude\", origem_longitude);",
									"});",
									"",
									"/*pm.test(\"Obter Municipio destino\", function () {",
									"    var destino_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").municipio_id;",
									"    pm.environment.set(\"destino_municipio_id\", destino_municipio_id);",
									"    ",
									"    var referencia_destino_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").referencia_id;",
									"    pm.environment.set(\"referencia_destino_id\", referencia_destino_id);",
									"    ",
									"    var destino_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").latitude;",
									"    pm.environment.set(\"destino_latitude\", destino_latitude);",
									"    ",
									"    var destino_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").longitude;",
									"    pm.environment.set(\"destino_longitude\", destino_longitude);",
									"});*/",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7cc40809-ee0f-45f5-ae94-4d6a65da4fea",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"Jaraguá/GO\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio \"Marmeleiro/PR\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b065ab15-8152-48e2-9f38-2342c238ee62",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Municípios rota viagem",
									"/*pm.test(\"Obter Municipio Origem\", function () {",
									"    var origem_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").municipio_id;",
									"    pm.environment.set(\"origem_municipio_id\", origem_municipio_id);",
									"    ",
									"    var referencia_origem_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").referencia_id;",
									"    pm.environment.set(\"referencia_origem_id\", referencia_origem_id);",
									"    ",
									"    var origem_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").latitude;",
									"    pm.environment.set(\"origem_latitude\", origem_latitude);",
									"    ",
									"    var origem_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").longitude;",
									"    pm.environment.set(\"origem_longitude\", origem_longitude);",
									"});*/",
									"",
									"pm.test(\"Obter Municipio destino\", function () {",
									"    var destino_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").municipio_id;",
									"    pm.environment.set(\"destino_municipio_id\", destino_municipio_id);",
									"    ",
									"    var referencia_destino_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").referencia_id;",
									"    pm.environment.set(\"referencia_destino_id\", referencia_destino_id);",
									"    ",
									"    var destino_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").latitude;",
									"    pm.environment.set(\"destino_latitude\", destino_latitude);",
									"    ",
									"    var destino_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").longitude;",
									"    pm.environment.set(\"destino_longitude\", destino_longitude);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5e6b7d08-fffa-4cb8-81cc-1f822de72858",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"Marmeleiro/PR\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRota",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34f585b9-3075-402b-b198-c295768a7f7c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"var lista_municipios = jsonData.result.items;",
									"",
									"for ( let i in lista_municipios ) {",
									"    /*if (lista_municipios[i].origem === \"Jaraguá-GO\" &&  lista_municipios[i].destino === \"Marmeleiro-PR\") {*/",
									"    if (lista_municipios[i].origem === \"Jaraguá\" &&  lista_municipios[i].destino === \"Marmeleiro\") {",
									"        postman.setNextRequest(\"M220 - getTabelaFreteServico\");",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRota\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"descricao_rota\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"%Jaraguá%Marmeleiro%\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insRota",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13430448-2bc8-41ea-8af0-49b8c1ce692f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7a530214-524f-49cc-b040-b8660b44f670",
								"exec": [
									"// distancia origem/destino",
									"pm.environment.set(\"descricao_rota\", \"Jaraguá/GO x Marmeleiro/PR\");",
									"pm.environment.set(\"distancia_padrao\", 1542.959);",
									"pm.environment.set(\"percurso_uf\", \"MG,SP\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insRota\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"descricao_rota\": \"{{descricao_rota}}\",\n        \"distancia_padrao\": \"{{distancia_padrao}}\",\n        \"descricao_via\": \"{{descricao_rota}}\",\n        \"percurso_uf\": \"{{percurso_uf}}\",\n        \"polilinha\": null,\n        \"referencia_origem_id\": \"{{referencia_origem_id}}\",\n        \"referencia_destino_id\": \"{{referencia_destino_id}}\",\n        \"origem_municipio_id\": \"{{origem_municipio_id}}\",\n        \"destino_municipio_id\": \"{{destino_municipio_id}}\",\n        \"origem_latitude\": \"{{origem_latitude}}\",\n        \"origem_longitude\": \"{{origem_longitude}}\",\n        \"destino_latitude\": \"{{destino_latitude}}\",\n        \"destino_longitude\": \"{{destino_longitude}}\",\n        \"roteiro_id\": null,\n        \"pontos_controle\": []\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CENARIO DE FRETE",
			"item": [
				{
					"name": "M220 - getTabelaFreteServico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f8a84d3-2604-4ccf-bcb9-a3a8a0c4aafc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Serviço\", function () {",
									"    var tipo_servico_frete = jsonData.result.items[0].tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_frete\", tipo_servico_frete);",
									"    ",
									"    /*var tipo_servico_frete_edicao = jsonData.result.items[1].tipo_servico_id;*/",
									"    var tipo_servico_frete_edicao = jsonData.result.items.find(x => x.descricao === \"Conhecimento Normal\").tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_frete_edicao\", tipo_servico_frete_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteServico\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteClassificacaoComercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfc1da21-a9b1-4c5a-ba91-d730ce50b7e7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Utilizar no update de M220 - altTabelaFrete",
									"pm.test(\"Obter Código Classificação Comercial\", function () {",
									"    var class_comercial_id_edicao = jsonData.result.items[0].classificacao_comercial_id;",
									"    pm.environment.set(\"class_comercial_id_edicao\", class_comercial_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteClassificacaoComercial\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"classificacao_comercial_id\",\n                    \"title\": \"columns.classificacao_comercial_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Data inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"Usuário atualização\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteTipoFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ca56b1a-52c5-4fa2-934a-c6f22af0de03",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Frete\", function () {",
									"    var frete_viagem = jsonData.result.items[0].tipo;",
									"    pm.environment.set(\"frete_viagem\", frete_viagem);",
									"    ",
									"    var frete_viagem_edicao = jsonData.result.items[1].tipo;",
									"    pm.environment.set(\"frete_viagem_edicao\", frete_viagem_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteTipoFrete\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVigenciaModelo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f757885-3979-4746-b498-91f04ca2793d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Modelo Vigência\", function () {",
									"    var modelo_vigencia = jsonData.result.items[0].modelo_id;",
									"    pm.environment.set(\"modelo_vigencia\", modelo_vigencia);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVigenciaModelo\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteTipoNegociacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fb4b49c-e3a4-4e50-9905-7494d181df73",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Negociação\", function () {",
									"    var tipo_neg_frete = jsonData.result.items[0].tipo_negociacao_id;",
									"    pm.environment.set(\"tipo_neg_frete\", tipo_neg_frete);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteTipoNegociacao\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getGeneralidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "609d327d-fa23-4be7-b8f0-0ff360fcc0b3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getGeneralidade\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVariaveisTipoNegociacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4de3899d-05ad-4feb-8907-f647109bb53a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Obter variáveis\", function () {",
									"    pm.environment.set(\"tf_vigencia_variaveis\", \"\");",
									"    ",
									"    var count = jsonData.result.items.length;",
									"    pm.environment.set(\"count_variaveis\", count);",
									"    ",
									"    var result = jsonData.result.items;",
									"    result = {\"variavel\": result};",
									"    ",
									"    pm.environment.set(\"tf_vigencia_variaveis\", JSON.stringify(result.variavel));",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVariaveisTipoNegociacao\",\n    \"parameters\": {\n        \"tipo_negociacao_id\": \"123456\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRota",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0675b2c4-46ae-4349-a130-272fc8c162e2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Rota\", function () {",
									"    var rota_tb = jsonData.result.items[0].rota_id;",
									"    pm.environment.set(\"rota_tb\", rota_tb);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4d51c0c7-b6d7-465c-b413-dc3786954105",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRota\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"descricao_rota\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"%Jaraguá%Marmeleiro%\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insTabelaFrete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f92da443-4afb-483e-9919-91aee9585402",
								"exec": [
									"//Funcões",
									"function descGrupo() {",
									"    var array_descricao = \"Teste tabela frete\";",
									"    var aux = Math.round((Math.random() * 100) + 10000);",
									"    var desc = array_descricao+\" \"+aux;",
									"    ",
									"    return desc;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_tabela_frete = descGrupo();",
									"    pm.environment.set(\"desc_tabela_frete\", desc_tabela_frete);",
									"    var desc_tabela_frete_edicao = descGrupo();",
									"    pm.environment.set(\"desc_tabela_frete_edicao\", desc_tabela_frete_edicao);",
									"});",
									"",
									"function geraDataVigenciaInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataVigenciaInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_ini_vigencia = geraDataVigenciaInicio();",
									"    pm.environment.set(\"data_ini_vigencia\", data_ini_vigencia);",
									"    ",
									"    var data_ini_vigencia_edicao = DataVigenciaInicioEdicao();",
									"    pm.environment.set(\"data_ini_vigencia_edicao\", data_ini_vigencia_edicao);",
									"});",
									"",
									"pm.test(\"Gerar dados\", function () {",
									"    //Alerta de vencimento antecedente",
									"    var dia_alert_email = 10;",
									"    pm.environment.set(\"dia_alert_email\", dia_alert_email);",
									"    ",
									"    var dia_alert_email_edicao = 3;",
									"    pm.environment.set(\"dia_alert_email_edicao\", dia_alert_email_edicao);",
									"    ",
									"});",
									"",
									"//Request body",
									"var request = {",
									"    \"module\": \"M220\",",
									"    \"operation\": \"insTabelaFrete\",",
									"    \"parameters\": {",
									"        \"operation\": \"INSERT\",",
									"        \"tabela_frete_id\": null,",
									"        \"tabela_frete_id_pai\": null,",
									"        \"grupo_id\": \"{{id_grupo}}\",",
									"        \"descricao\": \"{{desc_tabela_frete}}\",",
									"        \"cif\": 1,",
									"        \"fob\": 1,",
									"        \"fob_expedido\": 1,",
									"        \"tipo_servico_id\": \"{{tipo_servico_frete_edicao}}\",",
									"        \"tipo\": \"{{frete_viagem}}\",",
									"        \"dias_alerta_email\": \"{{dia_alert_email}}\",",
									"        \"email_alerta\": \"{{email}}\",",
									"        \"vigencia\": [",
									"            {",
									"                \"operation\": \"INSERT\",",
									"                \"tabela_frete_vigencia_id\": null,",
									"                \"data_inicio\": \"{{data_ini_vigencia}}\",",
									"                \"data_termino\": \"{{data_futura}}\",",
									"                \"modelo_id\": \"{{modelo_vigencia}}\",",
									"                \"tipo_negociacao_id\": \"{{tipo_neg_frete}}\",",
									"                \"aprovado\": 0,",
									"                \"rota\": [",
									"                    {",
									"                        \"operation\": \"INSERT\",",
									"                        \"tabela_frete_rota_id\": null,",
									"                        \"rota_id\": \"{{rota_tb}}\",",
									"                        \"classificacao_natureza_id\": null,",
									"                        \"classificacao_comercial_id\": null,",
									"                        \"variavel_rota\": []",
									"                    }",
									"                ],",
									"            }",
									"        ],",
									"        \"pessoa\": [",
									"            {",
									"                \"operation\": \"INSERT\",",
									"                \"cod_pessoa\": \"{{cod_participante_pj}}\",",
									"                \"tabela_frete_pessoa_id\": null",
									"            }",
									"        ],",
									"        \"arquivo\": [],",
									"        \"generalidade\": []",
									"    }",
									"};",
									"",
									"var variaveis = JSON.parse(pm.environment.get(\"tf_vigencia_variaveis\"));",
									"",
									"for(var i = 0; i < variaveis.length; i++) {",
									"    variaveis[i].operation = \"INSERT\";",
									"    variaveis[i].tabela_frete_variavel_id = null;",
									"    ",
									"    if (variaveis[i].cod_variavel == \"ADEME\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"VALORUNITARIOPEDAGIO\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"OUTROS\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    //valor frete",
									"    else if (variaveis[i].cod_variavel == \"FRETEUNITARIO\"){",
									"        variaveis[i].tipo = 3;",
									"        variaveis[i].exibir_emissao = 1;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"VALORUNITARIOFRETE\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"DESPACHO\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"GRIS\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"SECCAT\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"TAXA_COLETA\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"ALIQUOTAICMS\"){",
									"        variaveis[i].tipo = 2;",
									"        variaveis[i].formula = \"\";",
									"        variaveis[i].valor = 0;",
									"    }",
									"}",
									"",
									"request.parameters.vigencia[0].variavel = variaveis;",
									"",
									"var body = JSON.stringify(request);",
									"",
									"pm.environment.set(\"request_body\", body);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "799b314d-ff85-4103-bad9-53e786f2e1d8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Tabela Frete\", function () {",
									"    var tabela_frete_id = jsonData.result.tabela_frete_id;",
									"    pm.environment.set(\"tabela_frete_id\", tabela_frete_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{request_body}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteDados",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c22f8d2-3928-4b05-bdf8-c335195d65c4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Tabela Frete Vigência\", function () {",
									"    var tabela_frete_vigencia_id = jsonData.result.tabela_frete[0].vigencia[0].tabela_frete_vigencia_id;",
									"    pm.environment.set(\"tabela_frete_vigencia_id\", tabela_frete_vigencia_id);",
									"});",
									"",
									"pm.test(\"Obter Código Tabela Frete Rota\", function () {",
									"    var tabela_frete_rota_id = jsonData.result.tabela_frete[0].vigencia[0].rota[0].tabela_frete_rota_id;",
									"    pm.environment.set(\"tabela_frete_rota_id\", tabela_frete_rota_id);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.tabela_frete[0].grupo_id;",
									"    var cod_grupo_request = pm.environment.get(\"id_grupo\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição Tabela Frete\", function () {",
									"    var descricao_response = jsonData.result.tabela_frete[0].descricao;",
									"    var descricao_request = pm.environment.get(\"desc_tabela_frete\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo CIF\", function () {",
									"    var cif_response = jsonData.result.tabela_frete[0].cif;",
									"    var cif_request = 1;",
									"",
									"    pm.expect(cif_response).eql(cif_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo FOB\", function () {",
									"    var fob_response = jsonData.result.tabela_frete[0].fob;",
									"    var fob_request = 1;",
									"",
									"    pm.expect(fob_response).eql(fob_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo FOB\", function () {",
									"    var fob_expedido_response = jsonData.result.tabela_frete[0].fob_expedido;",
									"    var fob_expedido_request = 1;",
									"",
									"    pm.expect(fob_expedido_response).eql(fob_expedido_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Serviço\", function () {",
									"    var tipo_servico_response = jsonData.result.tabela_frete[0].tipo_servico_id;",
									"    var tipo_servico_request = pm.environment.get(\"tipo_servico_frete_edicao\");",
									"",
									"    pm.expect(tipo_servico_response).eql(tipo_servico_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Viagem\", function () { //Nacional / Internacional",
									"    var tipo_viagem_response = jsonData.result.tabela_frete[0].tipo;",
									"    var tipo_viagem_request = pm.environment.get(\"frete_viagem\");",
									"    tipo_viagem_request = ''+tipo_viagem_request;",
									"",
									"    pm.expect(tipo_viagem_response).eql(tipo_viagem_request);",
									"});",
									"",
									"pm.test(\"Insere Dias de Alerta de Email\", function () {",
									"    var alerta_email_response = jsonData.result.tabela_frete[0].dias_alerta_email;",
									"    var alerta_email_request = pm.environment.get(\"dia_alert_email\");",
									"",
									"    pm.expect(alerta_email_response).eql(alerta_email_request);",
									"});",
									"",
									"pm.test(\"Insere Email para Alerta\", function () {",
									"    var email_alerta_response = jsonData.result.tabela_frete[0].email_alerta;",
									"    var email_alerta_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_alerta_response).eql(email_alerta_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início Vigência\", function () {",
									"    var inicio_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_inicio;",
									"    var inicio_vigencia_request = pm.environment.get(\"data_ini_vigencia\");",
									"",
									"    pm.expect(inicio_vigencia_response).eql(inicio_vigencia_request);",
									"});",
									"",
									"pm.test(\"Insere Data Término Vigência\", function () {",
									"    var termino_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_termino;",
									"    var termino_vigencia_request = pm.environment.get(\"data_futura\");",
									"",
									"    pm.expect(termino_vigencia_response).eql(termino_vigencia_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo Vigência\", function () {",
									"    var modelo_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].modelo_id;",
									"    var modelo_vigencia_request = pm.environment.get(\"modelo_vigencia\");",
									"",
									"    pm.expect(modelo_vigencia_response).eql(modelo_vigencia_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Negociação Frete\", function () {",
									"    var tipo_negociacao_response = jsonData.result.tabela_frete[0].vigencia[0].tipo_negociacao_id;",
									"    var tipo_negociacao_request = pm.environment.get(\"tipo_neg_frete\");",
									"",
									"    pm.expect(tipo_negociacao_response).eql(tipo_negociacao_request);",
									"});",
									"",
									"/*",
									"pm.test(\"Insere Classificação de Natureza\", function () {",
									"    var class_natureza_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_natureza_id;",
									"    var class_natureza_request = pm.environment.get(\"class_nat_id\");",
									"",
									"    pm.expect(class_natureza_response).eql(class_natureza_request);",
									"});",
									"",
									"pm.test(\"Insere Classificação Comercial\", function () {",
									"    var class_comercial_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_comercial_id;",
									"    var class_comercial_request = pm.environment.get(\"class_comercial_id\");",
									"",
									"    pm.expect(class_comercial_response).eql(class_comercial_request);",
									"});",
									"*/",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_origem_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].rota_id;",
									"    var rota_origem_request = pm.environment.get(\"rota_tb\");",
									"",
									"    pm.expect(rota_origem_response).eql(rota_origem_request);",
									"});",
									"",
									"pm.test(\"Insere Cliente\", function () {",
									"    var cliente_response = jsonData.result.tabela_frete[0].pessoas[0].cod_pessoa;",
									"    var cliente_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(cliente_response).eql(cliente_request);",
									"});",
									"",
									"//Obter variáveis edição",
									"pm.test(\"Obter variáveis\", function () {",
									"    pm.environment.set(\"tf_vigencia_variaveis_edicao\", \"\");",
									"    ",
									"    var result = jsonData.result.tabela_frete[0].vigencia[0].variavel;",
									"    result = {\"variavel\": result};",
									"    ",
									"    pm.environment.set(\"tf_vigencia_variaveis_edicao\", JSON.stringify(result.variavel));",
									"});",
									"",
									"pm.test(\"Count variáveis\" , function () {",
									"    var count_response = jsonData.result.tabela_frete[0].vigencia[0].variavel.length;",
									"    pm.environment.set(\"count_variaveis_edicao\", count_response); ",
									"    var count_request = pm.environment.get(\"count_variaveis\");",
									"    pm.expect(count_response).eql(count_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteDados\",\n    \"parameters\": {\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altTabelaFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2f40afe-f6a2-4f0d-9c50-28cc8b7bb0b3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4f8b4e40-5eb8-49b0-94a2-c23791a0cd45",
								"exec": [
									"var request_edicao = {",
									"    \"module\": \"M220\",",
									"    \"operation\": \"altTabelaFrete\",",
									"    \"parameters\": {",
									"        \"operation\": \"UPDATE\",",
									"        \"tabela_frete_id\": \"{{tabela_frete_id}}\",",
									"        \"tabela_frete_id_pai\": null,",
									"        \"grupo_id\": \"{{id_grupo}}\",",
									"        \"descricao\": \"{{desc_tabela_frete_edicao}}\",",
									"        \"cif\": 0,",
									"        \"fob\": 0,",
									"        \"fob_expedido\": 0,",
									"        \"tipo_servico_id\": \"{{tipo_servico_frete_edicao}}\",",
									"        \"tipo\": \"{{frete_viagem}}\",",
									"        \"dias_alerta_email\": \"{{dia_alert_email_edicao}}\",",
									"        \"email_alerta\": \"{{email_edicao}}\",",
									"        \"vigencia\": [",
									"            {",
									"                \"operation\": \"UPDATE\",",
									"                \"tabela_frete_vigencia_id\": \"{{tabela_frete_vigencia_id}}\",",
									"                \"data_inicio\": \"{{data_ini_vigencia}}\",",
									"                \"data_termino\": \"{{data_futura_edicao}}\",",
									"                \"modelo_id\": \"{{modelo_vigencia}}\",",
									"                \"tipo_negociacao_id\": \"{{tipo_neg_frete}}\",",
									"                \"aprovado\": 1,",
									"                \"rota\": [",
									"                    {",
									"                        \"operation\": \"DELETE\",",
									"                        \"rota_id\": \"{{rota_tb}}\",",
									"                        \"tabela_frete_rota_id\": \"{{tabela_frete_rota_id}}\",",
									"                        \"classificacao_natureza_id\": null,",
									"                        \"classificacao_comercial_id\": null,",
									"                        \"variavel_rota\": []",
									"                    },",
									"                    {",
									"                        \"operation\": \"INSERT\",",
									"                        \"tabela_frete_rota_id\": null,",
									"                        \"rota_id\": \"{{rota_tb}}\",",
									"                        \"classificacao_natureza_id\": null,",
									"                        \"classificacao_comercial_id\": null,",
									"                    }",
									"                ],",
									"            }",
									"        ],",
									"        \"pessoa\": [",
									"            {",
									"                \"operation\": \"UPDATE\",",
									"                \"cod_pessoa\": \"{{cod_participante_pj}}\",",
									"                \"tabela_frete_pessoa_id\": null",
									"            }",
									"        ],",
									"        \"arquivo\": [],",
									"        \"generalidade\": []",
									"    }",
									"}",
									"",
									"var variaveis = JSON.parse(pm.environment.get(\"tf_vigencia_variaveis_edicao\"));",
									"",
									"request_edicao.parameters.vigencia[0].variavel = variaveis;",
									"",
									"var body_edicao = JSON.stringify(request_edicao);",
									"",
									"pm.environment.set(\"request_body_edicao\", body_edicao);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{request_body_edicao}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteDadosUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e8fa677-057b-47b5-af7d-acb74552552d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das edições",
									"pm.test(\"Editar Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.tabela_frete[0].grupo_id;",
									"    var cod_grupo_request = pm.environment.get(\"id_grupo\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									"",
									"pm.test(\"Editar Descrição Tabela Frete\", function () {",
									"    var descricao_response = jsonData.result.tabela_frete[0].descricao;",
									"    var descricao_request = pm.environment.get(\"desc_tabela_frete_edicao\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo CIF\", function () {",
									"    var cif_response = jsonData.result.tabela_frete[0].cif;",
									"    var cif_request = 0;",
									"",
									"    pm.expect(cif_response).eql(cif_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo FOB\", function () {",
									"    var fob_response = jsonData.result.tabela_frete[0].fob;",
									"    var fob_request = 0;",
									"",
									"    pm.expect(fob_response).eql(fob_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo FOB Expedido\", function () {",
									"    var fob_expedido_response = jsonData.result.tabela_frete[0].fob_expedido;",
									"    var fob_expedido_request = 0;",
									"",
									"    pm.expect(fob_expedido_response).eql(fob_expedido_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Serviço\", function () {",
									"    var tipo_servico_response = jsonData.result.tabela_frete[0].tipo_servico_id;",
									"    var tipo_servico_request = pm.environment.get(\"tipo_servico_frete_edicao\");",
									"",
									"    pm.expect(tipo_servico_response).eql(tipo_servico_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Viagem\", function () { //Nacional / Internacional",
									"    var tipo_viagem_response = jsonData.result.tabela_frete[0].tipo;",
									"    var tipo_viagem_request = pm.environment.get(\"frete_viagem\");",
									"    tipo_viagem_request = ''+tipo_viagem_request;",
									"",
									"    pm.expect(tipo_viagem_response).eql(tipo_viagem_request);",
									"});",
									"",
									"pm.test(\"Editar Dias de Alerta de Email\", function () {",
									"    var alerta_email_response = jsonData.result.tabela_frete[0].dias_alerta_email;",
									"    var alerta_email_request = pm.environment.get(\"dia_alert_email_edicao\");",
									"",
									"    pm.expect(alerta_email_response).eql(alerta_email_request);",
									"});",
									"",
									"pm.test(\"Editar Email para Alerta\", function () {",
									"    var email_alerta_response = jsonData.result.tabela_frete[0].email_alerta;",
									"    var email_alerta_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_alerta_response).eql(email_alerta_request);",
									"});",
									"",
									"pm.test(\"Editar Data Início Vigência\", function () {",
									"    var inicio_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_inicio;",
									"    var inicio_vigencia_request = pm.environment.get(\"data_ini_vigencia\");",
									"",
									"    pm.expect(inicio_vigencia_response).eql(inicio_vigencia_request);",
									"});",
									"",
									"pm.test(\"Editar Data Término Vigência\", function () {",
									"    var termino_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_termino;",
									"    var termino_vigencia_request = pm.environment.get(\"data_futura_edicao\");",
									"",
									"    pm.expect(termino_vigencia_response).eql(termino_vigencia_request);",
									"});",
									"",
									"pm.test(\"Editar Modelo Vigência\", function () {",
									"    var modelo_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].modelo_id;",
									"    var modelo_vigencia_request = pm.environment.get(\"modelo_vigencia\");",
									"",
									"    pm.expect(modelo_vigencia_response).eql(modelo_vigencia_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Negociação Frete\", function () {",
									"    var tipo_negociacao_response = jsonData.result.tabela_frete[0].vigencia[0].tipo_negociacao_id;",
									"    var tipo_negociacao_request = pm.environment.get(\"tipo_neg_frete\");",
									"",
									"    pm.expect(tipo_negociacao_response).eql(tipo_negociacao_request);",
									"});",
									"",
									"/*",
									"pm.test(\"Editar Classificação de Natureza\", function () {",
									"    var class_natureza_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_natureza_id;",
									"    var class_natureza_request = pm.environment.get(\"class_nat_id\");",
									"",
									"    pm.expect(class_natureza_response).eql(class_natureza_request);",
									"});",
									"",
									"pm.test(\"Editar Classificação Comercial\", function () {",
									"    var class_comercial_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_comercial_id;",
									"    var class_comercial_request = pm.environment.get(\"class_comercial_id\");",
									"",
									"    pm.expect(class_comercial_response).eql(class_comercial_request);",
									"});",
									"*/",
									"",
									"pm.test(\"Editar Rota\", function () {",
									"    var rota_origem_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].rota_id;",
									"    var rota_origem_request = pm.environment.get(\"rota_tb\");",
									"",
									"    pm.expect(rota_origem_response).eql(rota_origem_request);",
									"});",
									"",
									"pm.test(\"Editar Cliente\", function () {",
									"    var cliente_response = jsonData.result.tabela_frete[0].pessoas[0].cod_pessoa;",
									"    var cliente_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(cliente_response).eql(cliente_request);",
									"});",
									"",
									"pm.test(\"Count variáveis\" , function () {",
									"    var count_response = jsonData.result.tabela_frete[0].vigencia[0].variavel.length;",
									"    var count_request = pm.environment.get(\"count_variaveis_edicao\");",
									"    pm.expect(count_response).eql(count_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteDados\",\n    \"parameters\": {\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "grupo_id: {{id_grupo}} //grupo negociador",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bbe21121-00ed-4a58-a180-a10489796081",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f93a63dc-2b18-4d1e-b607-f54be3066daa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OPERACAO",
			"item": [
				{
					"name": "M220 - getProdutoFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3423e4f2-7fb1-475f-bfb3-83b9dbc6e407",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Frete\", function () {",
									"    var tipo_frete = jsonData.result.items[0].tipo_frete;",
									"    pm.environment.set(\"tipo_frete\", tipo_frete);",
									"    ",
									"    var tipo_frete_edicao = jsonData.result.items[0].tipo_frete;",
									"    /*var tipo_frete_edicao = jsonData.result.items.find(x => x.descricao == \"FRETE PROPRIO INTERESTADUAL\").produto_id;*/",
									"    pm.environment.set(\"tipo_frete_edicao\", tipo_frete_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"API_TEST\",\n    \"operation\": \"executaQuery\",\n    \"parameters\": {\n        \"query\": {\n            \"sql_query\": \"select fiscal.pkg_conhecimento.fnc_produto_frete(p_municipio_origem_id => 20290, p_municipio_destino_id => 57355, p_frete_proprio => 1) as tipo_frete from dual\"\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRegraFiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4dd7f7f8-e949-4f9c-b4dc-deb11da8eca1",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Regra Fiscal\", function () {",
									"    var regra_fiscal = jsonData.result.items[0].regra_fiscal_id;",
									"    pm.environment.set(\"regra_fiscal\", regra_fiscal);",
									"    ",
									"    var regra_fiscal_edicao = jsonData.result.items[1].regra_fiscal_id;",
									"    pm.environment.set(\"regra_fiscal_edicao\", regra_fiscal_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRegraFiscal\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTipoServicoComercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ef76476-e6f2-46e5-a6b0-6111cff2dcc4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo de Serviço\", function () {",
									"    var tipo_servico_id = jsonData.result.items[0].tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_id\", tipo_servico_id);",
									"    ",
									"    var tipo_servico_id_edicao = jsonData.result.items.find(x => x.descricao == \"Conhecimento Normal\").tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_id_edicao\", tipo_servico_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTipoServicoComercial\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOrganograma",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e15b2685-eb33-4601-8814-f7011000d1d7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Organograma\", function () {",
									"    var cod_organograma = jsonData.result.items[0].cod_organograma;",
									"    pm.environment.set(\"cod_organograma\", cod_organograma);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOrganograma\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"cod_organograma\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"unidade_negocio\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCentroCustoGerencial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7daed7e9-1b50-418f-91b7-8e1e74790c65",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Centro Custo\", function () {",
									"    var id_centro_custo = jsonData.result.items[0].organizacional_id;",
									"    pm.environment.set(\"id_centro_custo\", id_centro_custo);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCentroCustoGerencial\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_completa\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_completa\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getEspecie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48427058-d554-492e-b743-386d6f029486",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Espécie\", function () {",
									"    var cod_especie = jsonData.result.items[0].num_especie;",
									"    pm.environment.set(\"cod_especie\", cod_especie);",
									"    ",
									"    var cod_especie_edicao = jsonData.result.items[1].num_especie;",
									"    pm.environment.set(\"cod_especie_edicao\", cod_especie_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getEspecie\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getApolice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c8e7bc0-2617-42c4-9c37-196a3f5e89ca",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Seguradora\", function () {",
									"    var id_seguradora = jsonData.result.items[0].id_seguradora;",
									"    pm.environment.set(\"id_seguradora\", id_seguradora);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getApolice\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"razao_social\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"razao_social\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "798da2f1-cf82-4f98-8754-bdec62cbf944",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFrete\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogistica XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb8e32b5-32c4-4348-80cc-aca3d082363a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count === 1){",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - getLoteLista XML\");",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - getClienteLista Remetente1 XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"value\": \"Operação de Teste\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"equal\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Remetente1 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30541e15-efaa-4dc4-91c7-7589dcc03fce",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.environment.set(\"remetente1XML\",jsonData.result.items[0].cod_pessoa);",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - getClienteLista Remetente2 XML\");",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - manipulaClientePJ Remetente1 XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"11325194000111\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ Remetente1 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5328c61-35ce-4ba0-8815-42c82f33b464",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter código remetente1\", function(){",
									"    pm.environment.set(\"remetente1XML\",jsonData.result.cod_pessoa);",
									"});",
									"",
									"pm.test(\"Validar cnpj do remetente1\", function(){",
									"    pm.expect(jsonData.result.cnpj_cpf).eql('11325194000111')",
									"});",
									"",
									"pm.test(\"Validar a razão social do remetente1\", function(){",
									"    pm.expect(jsonData.result.razao_social).eql('POSTO BELA VISTA LTDA')",
									"});",
									"",
									"pm.test(\"Validar a nome fantasia do remetente1\", function(){",
									"    pm.expect(jsonData.result.nome_fantasia).eql('POSTO TABOCAO XI - BELA VISTA GO')",
									"});",
									"",
									"pm.test(\"Validar a inscrição estadual do remetente1\", function(){",
									"    pm.expect(jsonData.result.inscricao_estadual).eql('104599367')",
									"});",
									"",
									"pm.test(\"Validar o cnae do remetente1\", function(){",
									"    pm.expect(jsonData.result.cnae).eql('4731800')",
									"});",
									"",
									"pm.test(\"Validar o cep do remetente1\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].cep).eql('75240000')",
									"});",
									"",
									"pm.test(\"Validar o id do municipio do remetente1\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].municipio_id).eql(90395)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d7ebf692-948d-4ea4-a9ab-8ba0eb6d8536",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"11325194000111\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"POSTO BELA VISTA LTDA\",\n        \"nome_fantasia\": \"POSTO TABOCAO XI - BELA VISTA GO\",\n        \"data_nascimento\": null,\n        \"cnae\": \"4731800\",\n        \"cod_atividade_fiscal\": \"1\",\n        \"cod_regime_tributario\": \"3\",\n        \"tipo_lucro\": \"1\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"75240000\",\n                \"uf\": \"GO\",\n                \"logradouro\": \"RUA JOSE ALVES DE ASSIS\",\n                \"numero\": \"83\",\n                \"complemento\": \"\",\n                \"bairro\": \"SETOR OESTE\",\n                \"municipio_id\": \"90395\",\n                \"cod_endereco_tipo\": \"1\",\n                \"endereco_padrao\": \"1\",\n                \"cod_atividade_fiscal\": \"1\",\n                \"inscricao_estadual\": \"104599367\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"42999615525\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"2\",\n                \"telefone_padrao\": \"1\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"1\",\n                \"email\": \"teste@testekmm.com.br\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"1\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Remetente2 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "634626db-46e1-4f12-8d1a-6fa74ad4a8c5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.environment.set(\"remetente2XML\",jsonData.result.items[0].cod_pessoa);",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - getClienteLista Destinatário XML\");",
									"        ",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - manipulaClientePJ Remetente2 XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"07031916000158\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ Remetente2 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd572922-ba61-4cea-a677-bf2672f15e51",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter código remetente2\", function(){",
									"    pm.environment.set(\"remetente2XML\",jsonData.result.cod_pessoa);",
									"});",
									"",
									"pm.test(\"Validar cnpj do remetente2\", function(){",
									"    pm.expect(jsonData.result.cnpj_cpf).eql('07031916000158')",
									"});",
									"",
									"pm.test(\"Validar a razão social do remetente2\", function(){",
									"    pm.expect(jsonData.result.razao_social).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a nome fantasia do remetente2\", function(){",
									"    pm.expect(jsonData.result.nome_fantasia).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a inscrição estadual do remetente2\", function(){",
									"    pm.expect(jsonData.result.inscricao_estadual).eql('9032087245')",
									"});",
									"",
									"pm.test(\"Validar o cnae do remetente2\", function(){",
									"    pm.expect(jsonData.result.cnae).eql('4930202')",
									"});",
									"",
									"pm.test(\"Validar o cep do remetente2\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].cep).eql('85887000')",
									"});",
									"",
									"pm.test(\"Validar o id do municipio do remetente2\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].municipio_id).eql(57398)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9be038c5-67f8-4c6a-8e66-f48c54b0323e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"07031916000158\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"nome_fantasia\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"data_nascimento\": null,\n        \"cnae\": \"4930202\",\n        \"cod_atividade_fiscal\": \"1\",\n        \"cod_regime_tributario\": \"3\",\n        \"tipo_lucro\": \"1\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"85887000\",\n                \"uf\": \"PR\",\n                \"logradouro\": \"AV BORGES DE MEDEIROS\",\n                \"numero\": \"1257\",\n                \"complemento\": \"\",\n                \"bairro\": \"CENTRO\",\n                \"municipio_id\": \"57398\",\n                \"cod_endereco_tipo\": \"1\",\n                \"endereco_padrao\": \"1\",\n                \"cod_atividade_fiscal\": \"1\",\n                \"inscricao_estadual\": \"9032087245\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"42999615525\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"2\",\n                \"telefone_padrao\": \"1\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"1\",\n                \"email\": \"teste@testekmm.com.br\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"1\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Destinatário XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "add46783-69d8-42e8-a7af-c820a5ec880c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.environment.set(\"destinatarioXML\",jsonData.result.items[0].cod_pessoa);",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - insOperacao XML\");",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - manipulaClientePJ Destinatário XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"07031916001200\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ Destinatário XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3f14e6b-73b0-4523-a293-24cac5298333",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter código destinatário\", function(){",
									"    pm.environment.set(\"destinatarioXML\",jsonData.result.cod_pessoa);",
									"});",
									"",
									"pm.test(\"Validar cnpj do destinatário\", function(){",
									"    pm.expect(jsonData.result.cnpj_cpf).eql('07031916001200')",
									"});",
									"",
									"pm.test(\"Validar a razão social do destinatário\", function(){",
									"    pm.expect(jsonData.result.razao_social).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a nome fantasia do destinatário\", function(){",
									"    pm.expect(jsonData.result.nome_fantasia).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a inscrição estadual do destinatário\", function(){",
									"    pm.expect(jsonData.result.inscricao_estadual).eql('105256005')",
									"});",
									"",
									"pm.test(\"Validar o cnae do destinatário\", function(){",
									"    pm.expect(jsonData.result.cnae).eql('4930202')",
									"});",
									"",
									"pm.test(\"Validar o cep do destinatário\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].cep).eql('74703130')",
									"});",
									"",
									"pm.test(\"Validar o id do municipio do destinatário\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].municipio_id).eql(19887)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "65241a1a-adfd-41a2-ace5-8662e7714c6f",
								"exec": [
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCnpj() {",
									"\tvar n = 9;",
									"\tvar n1  = gera_random(n);",
									"\tvar n2  = gera_random(n);",
									" \tvar n3  = gera_random(n);",
									" \tvar n4  = gera_random(n);",
									" \tvar n5  = gera_random(n);",
									"\tvar n6  = gera_random(n);",
									" \tvar n7  = gera_random(n);",
									" \tvar n8  = gera_random(n);",
									" \tvar n9  = 0;//gera_random(n);",
									" \tvar n10 = 0;//gera_random(n);",
									" \tvar n11 = 0;//gera_random(n);\t",
									" \tvar n12 = 1;//gera_random(n);\t\t",
									"\tvar d1 = n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;",
									"\td1 = 11 - (mod(d1,11) );",
									"\t\t \t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t\t \t",
									" \tvar d2 = d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;",
									" \td2 = 11 - (mod(d2,11) );",
									"\t\t \t",
									" \tif (d2 >= 10) d2 = 0;",
									"\t\t \t",
									"\tvar gera_cnpj = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+d1+d2;",
									"\t\t\t",
									"\treturn gera_cnpj;",
									"}",
									"",
									"pm.test(\"Gerar CNPJ\", function () {//Participante",
									"    var cnpj_participante = geraCnpj();",
									"    pm.environment.set(\"cnpj_participante\", cnpj_participante);",
									"});",
									"function geraTipoLucro() {",
									"    var lucro = Math.floor((Math.random() * 2) + 1);",
									"    return lucro;",
									"} ",
									"",
									"pm.test(\"Gerar Tipo de Lucro\", function () {",
									"    var tipo_lucro = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro\", tipo_lucro);",
									"    ",
									"    var tipo_lucro_edicao = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro_edicao\", tipo_lucro_edicao);",
									"});",
									"",
									"",
									"//Gerar Nome Fantasia",
									"function geraNomeFantasia() {",
									"    var array_nome = [\"TRANS\", \"LOG\", \"TRANSPORTES\", \"EXPRESS\", \"EXPRESSO\", \"HORTIFRUTI\", \"LOGISTICA\", \"RAPIDO\", \"FAZENDA\", \"IRMAOS\", \"COMERCIO\", \"BANALORI\", \"IGARASHI\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\"];",
									"    var position = Math.round(Math.random() * 11);",
									"    ",
									"    var fantasia = array_nome[position] + ' ' + comp_nome[position];",
									"    ",
									"    return fantasia;",
									"}",
									"",
									"pm.test(\"Gerar Nome Fantasia\", function () {",
									"    //Participante",
									"    var nome_fant_participante = geraNomeFantasia();",
									"    var nome_fant_participante_edicao = geraNomeFantasia();",
									"    ",
									"    pm.environment.set(\"nome_fant_participante\", nome_fant_participante);",
									"    pm.environment.set(\"nome_fant_participante_edicao\", nome_fant_participante_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"07031916001200\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"nome_fantasia\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"data_nascimento\": null,\n        \"cnae\": \"4930202\",\n        \"cod_atividade_fiscal\": \"1\",\n        \"cod_regime_tributario\": \"3\",\n        \"tipo_lucro\": \"1\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"74703130\",\n                \"uf\": \"GO\",\n                \"logradouro\": \"Avenida Monlevad\",\n                \"numero\": \"99\",\n                \"complemento\": \"\",\n                \"bairro\": \"JD NOVO MUNDO\",\n                \"municipio_id\": \"19887\",\n                \"cod_endereco_tipo\": \"1\",\n                \"endereco_padrao\": \"1\",\n                \"cod_atividade_fiscal\": \"1\",\n                \"inscricao_estadual\": \"105256005\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"42999615525\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"2\",\n                \"telefone_padrao\": \"1\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"1\",\n                \"email\": \"teste@testekmm.com.br\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"1\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insOperacao XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61677d82-d0bf-43a0-b58c-81841d2f80d6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Operação\", function () {",
									"    var operacao_id = jsonData.result.operacao_id;",
									"    pm.environment.set(\"operacao_idXML\", operacao_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7a3ca2b3-e7c4-4e64-a4a6-389e1f0c416d",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Informação Opcional\", function () {",
									"    var info_opcional = \"Teste Operação\"",
									"    pm.environment.set(\"info_opcional\", info_opcional);",
									"    ",
									"    var info_opcional_edicao = \"Teste Operação Editar\";",
									"    pm.environment.set(\"info_opcional_edicao\", info_opcional_edicao);",
									"});",
									"",
									"//Gerar tipo de frete",
									"//Próprio/subcontratado",
									"pm.test(\"Gerar tipo de frete\", function () {",
									"    var tipo_frete_contrato = 1; //próprio",
									"    var tipo_frete_contrato_edicao = 0; //subcontratado",
									"    ",
									"    pm.environment.set(\"tipo_frete_contrato\", tipo_frete_contrato);",
									"    pm.environment.set(\"tipo_frete_contrato_edicao\", tipo_frete_contrato_edicao);",
									"});",
									"",
									"pm.test(\"Gerar limite de CTE\", function () {",
									"    var limite_num_cte = 5;",
									"    var limite_num_cte_edicao = 20;",
									"    pm.environment.set(\"limite_num_cte\", limite_num_cte);",
									"    pm.environment.set(\"limite_num_cte_edicao\", limite_num_cte_edicao);",
									"});",
									"",
									"//Tipo Documento",
									"pm.test(\"Gerar Tipo de Documento\", function () {",
									"    var tipo_documento = 1; //Cte individual",
									"    pm.environment.set(\"tipo_documento\", tipo_documento);",
									"});",
									"",
									"//Tipo Quitação",
									"pm.test(\"Gerar Quitação\", function () {",
									"    var quitacao_liberada = Math.floor(Math.random() * 3);",
									"    pm.environment.set(\"quitacao_liberada\", quitacao_liberada);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insOperacao\",\n    \"parameters\": {\n        \"operacao_id\": null,\n        \"descricao\": \"Operação de Teste\",\n        \"cod_negociador\": \"{{id_cliente}}\",\n        \"operacao_id_repom\": null,\n        \"filial_emissao\": [\n            {\n                \"cod_organograma\": \"{{cod_organograma}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"centro_custo\": [\n            {\n                \"organizacional_id\": \"{{id_centro_custo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"num_especie\": \"{{cod_especie}}\",\n        \"tipo_frete\": \"{{tipo_frete}}\",\n        \"id_seguradora\": \"{{id_seguradora}}\",\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"frete_proprio\": \"{{tipo_frete_contrato_edicao}}\",\n        \"regra_fiscal_id\": \"{{regra_fiscal}}\",\n        \"percentual_maximo_adto\": null,\n        \"exige_aprovacao_adiantamento\": 0,\n        \"emite_multimodal\": null,\n        \"indicador_negociavel\": null,\n        \"tipo_pagamento_id\": null,\n        \"informacoes_adicionais\": \"{{info_opcional}}\",\n        \"reutiliza_doc_fiscal\": 0,\n        \"quitacao_liberada\": \"{{quitacao_liberada}}\",\n        \"tipo_servico_id\": \"{{tipo_servico_id}}\",\n        \"operacao_vinculada_otm\": 0,\n        \"tipo_documento\": \"{{tipo_documento}}\",\n        \"cte_globalizado_rem_dest\": null,\n        \"quitacao_quebra_peso\": 0,\n        \"limite_cte_romaneio\": \"{{limite_num_cte}}\",\n        \"participantes\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente1XML}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente2XML}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",   \n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatarioXML}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{tomador_serv_1}}\",\n                \"tipo_cliente\": 4\n            }\n        ],\n        \"municipio\": [\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_origem}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"90395\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"57398\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_destino}}\",\n                \"origem_destino\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"90395\",\n                \"origem_destino\": 1\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						},
						"description": "Executar getPessoa(GRUPO NEGOCIADOR) antes do insOperacao, para teste unitário."
					},
					"response": []
				},
				{
					"name": "M220 - getLoteLista XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f8819d0-4855-43be-b2bd-9e62c29703f8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.expect(count).above(0);",
									"    } else{",
									"        pm.expect(count).eql(0);",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Obter lote_id\", function () {",
									"    /*var loteIdXML = jsonData.result.items.find(x => x.operacao === \"Muvly Interestadual\").lote_id;*/",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        var loteIdXML = jsonData.result.items.find(x => x.operacao === \"Operação de Teste\").lote_id;",
									"        pm.environment.set(\"loteIdXML\", loteIdXML);",
									"        postman.setNextRequest(\"M220 - getXMLDadosNFE1 XML\");",
									"    } else{",
									"        postman.setNextRequest(\"M220 - insLote XML\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"localizar_cadastro\": 1,\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"operacao\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"Operação de Teste\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote XML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ff4b5c92-c2e5-4a62-80ee-4193894037f9",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500);",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minino = Math.round(Math.random() * 1000) + 15000;",
									"    return val_minino;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c971fa54-af1b-42ec-b356-5ddfb3fc2d74",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"loteIdXML\", lote_id);",
									"    postman.setNextRequest(\"M220 - getXMLDadosNFE1 XML\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"Lote de Teste\",\n\t\t\"operacao_id\":\"{{operacao_idXML}}\",\n\t\t\"operacao\":\"\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE1 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adb1aeb3-bac1-46f0-ac93-83d00a19a7bf",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var numero_nfe_xml = jsonData.result.params.numero;",
									"    pm.environment.set(\"numero_nfe_xml\", numero_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var serie_nfe_xml = jsonData.result.params.serie;",
									"    pm.environment.set(\"serie_nfe_xml\", serie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Data Emissão NFe\", function () {",
									"    var data_emissao_nfe_xml = jsonData.result.params.data_emissao;",
									"    pm.environment.set(\"data_emissao_nfe_xml\", data_emissao_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml\", cod_end_remetente_xml);",
									"    ",
									"    var municipio_origem_xml = jsonData.result.params.endereco_remetente[0].municipio;",
									"    pm.environment.set(\"municipio_origem_xml\", municipio_origem_xml);",
									"});",
									"",
									"pm.test(\"Obter Destinatário NFe\", function () {",
									"    var cod_destinatario_xml = jsonData.result.params.cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario_xml\", cod_destinatario_xml);",
									"    ",
									"    var cod_end_destinatario_xml = jsonData.result.params.endereco_destinatario[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_destinatario_xml\", cod_end_destinatario_xml);",
									"    ",
									"     var municipio_destino_xml = jsonData.result.params.endereco_destinatario[0].municipio;",
									"    pm.environment.set(\"municipio_destino_xml\", municipio_destino_xml);",
									"});",
									"",
									"pm.test(\"Obter Modelo NFe\", function () {",
									"    var modelo_xml = jsonData.result.params.modelo;",
									"    pm.environment.set(\"modelo_xml\", modelo_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor NFe\", function () {",
									"    var valor_nfe_xml = jsonData.result.params.valor;",
									"    pm.environment.set(\"valor_nfe_xml\", valor_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor Segurado NFe\", function () {",
									"    var valor_seg_nfe_xml = jsonData.result.params.valor_segurado;",
									"    pm.environment.set(\"valor_seg_nfe_xml\", valor_seg_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número Espécie NFe\", function () {",
									"    var num_especie_nfe_xml = jsonData.result.params.num_especie;",
									"    pm.environment.set(\"num_especie_nfe_xml\", num_especie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter CFOP NFe\", function () {",
									"    var cfop_nfe_xml = jsonData.result.params.cfop;",
									"    pm.environment.set(\"cfop_nfe_xml\", cfop_nfe_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "455667e5-8254-49e9-a57a-f46c89404d41",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xml\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xml}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE2 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5566de2-f0ef-4b87-a3ae-07a31e5ecf4e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml_nf2\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml_nf2\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml_nf2\", cod_end_remetente_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a58ccedd-3d2c-405f-96db-8fd6f965289f",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xmlNF2\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xmlNF2}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio Origem XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ebe853a-1e81-4ec9-8fdc-f6f05c39953a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Município, UF e CEP",
									"pm.test(\"Obter Municipio\", function () {",
									"    var municipio_id = jsonData.result.items[0].municipio_id;",
									"    ",
									"    pm.environment.set(\"id_municipio_origem_xml\", municipio_id);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "62dc2f84-8dc7-45ea-a728-f69a3edfc55e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"{{municipio_origem_xml}}\"\n                }\n            ]\n        }\n    }\n}\n\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio Destino XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e2ab606-e6ad-4636-9a38-3e25dd4b36f8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Município, UF e CEP",
									"pm.test(\"Obter Municipio\", function () {",
									"    var municipio_id = jsonData.result.items[0].municipio_id;",
									"    ",
									"    pm.environment.set(\"id_municipio_destino_xml\", municipio_id);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "80ce99d4-b9f6-4943-b01e-4eb7f6ff9297",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"{{municipio_destino_xml}}\"\n                }\n            ]\n        }\n    }\n}\n\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogisticaLista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f554791-8a9a-4f12-b5ca-adbf4cc1e64d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//=============================================================",
									"",
									"pm.test(\"Gerar Descricao Operação\", function () {",
									"    var count = jsonData.result.count;",
									"    count++;",
									"    var descricao_operacao = \"Qa - Operação\"+\" \"+count; ",
									"    pm.environment.set(\"descricao_oper\", descricao_operacao);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"operacao_id\",\n                    \"title\": \"ID Operação\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"descricao_completa\",\n                    \"title\": \"Descrição Total\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Data inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"Data atualização\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"Usuário atualização\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insOperacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95a8dd63-0e9d-4dec-bec3-1e19034cda0b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Operação\", function () {",
									"    var operacao_id = jsonData.result.operacao_id;",
									"    pm.environment.set(\"oper_log\", operacao_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6678d952-4929-4a23-a9e2-33218b029b69",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Informação Opcional\", function () {",
									"    var info_opcional = \"Teste Operação\"",
									"    pm.environment.set(\"info_opcional\", info_opcional);",
									"    ",
									"    var info_opcional_edicao = \"Teste Operação Editar\";",
									"    pm.environment.set(\"info_opcional_edicao\", info_opcional_edicao);",
									"});",
									"",
									"//Gerar tipo de frete",
									"//Próprio/subcontratado",
									"pm.test(\"Gerar tipo de frete\", function () {",
									"    var tipo_frete_contrato = 1; //próprio",
									"    var tipo_frete_contrato_edicao = 0; //subcontratado",
									"    ",
									"    pm.environment.set(\"tipo_frete_contrato\", tipo_frete_contrato);",
									"    pm.environment.set(\"tipo_frete_contrato_edicao\", tipo_frete_contrato_edicao);",
									"});",
									"",
									"pm.test(\"Gerar limite de CTE\", function () {",
									"    var limite_num_cte = 5;",
									"    var limite_num_cte_edicao = 20;",
									"    pm.environment.set(\"limite_num_cte\", limite_num_cte);",
									"    pm.environment.set(\"limite_num_cte_edicao\", limite_num_cte_edicao);",
									"});",
									"",
									"//Tipo Documento",
									"pm.test(\"Gerar Tipo de Documento\", function () {",
									"    var tipo_documento = 1; //Cte individual",
									"    pm.environment.set(\"tipo_documento\", tipo_documento);",
									"});",
									"",
									"//Tipo Quitação",
									"pm.test(\"Gerar Quitação\", function () {",
									"    var quitacao_liberada = Math.floor(Math.random() * 3);",
									"    pm.environment.set(\"quitacao_liberada\", quitacao_liberada);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insOperacao\",\n    \"parameters\": {\n        \"operacao_id\": null,\n        \"descricao\": \"{{descricao_oper}}\",\n        \"cod_negociador\": \"{{id_cliente}}\",\n        \"operacao_id_repom\": null,\n        \"filial_emissao\": [\n            {\n                \"cod_organograma\": \"{{cod_organograma}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"centro_custo\": [\n            {\n                \"organizacional_id\": \"{{id_centro_custo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"num_especie\": \"{{cod_especie}}\",\n        \"tipo_frete\": \"{{tipo_frete}}\",\n        \"id_seguradora\": \"{{id_seguradora}}\",\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"frete_proprio\": \"{{tipo_frete_contrato_edicao}}\",\n        \"regra_fiscal_id\": \"{{regra_fiscal}}\",\n        \"percentual_maximo_adto\": null,\n        \"exige_aprovacao_adiantamento\": 0,\n        \"emite_multimodal\": null,\n        \"indicador_negociavel\": null,\n        \"tipo_pagamento_id\": null,\n        \"informacoes_adicionais\": \"{{info_opcional}}\",\n        \"reutiliza_doc_fiscal\": 0,\n        \"quitacao_liberada\": \"{{quitacao_liberada}}\",\n        \"tipo_servico_id\": \"{{tipo_servico_id}}\",\n        \"operacao_vinculada_otm\": 0,\n        \"tipo_documento\": \"{{tipo_documento}}\",\n        \"cte_globalizado_rem_dest\": null,\n        \"quitacao_quebra_peso\": 0,\n        \"limite_cte_romaneio\": \"{{limite_num_cte}}\",\n        \"participantes\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",   \n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{tomador_serv_1}}\",\n                \"tipo_cliente\": 4\n            }\n        ],\n        \"municipio\": [\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_origem}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_destino}}\",\n                \"origem_destino\": 1\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						},
						"description": "Executar getPessoa(GRUPO NEGOCIADOR) antes do insOperacao, para teste unitário."
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogistica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b09bc36-471f-4414-94ea-4c37ae6d0cca",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_oper\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"    pm.environment.set(\"desc_oper_log\", desc_request);",
									"});",
									"",
									"pm.test(\"Insere Cliente\", function () {",
									"    var neg_response = jsonData.result.items[0].cod_negociador;",
									"    var neg_request = pm.environment.get(\"id_cliente\");",
									"    ",
									"    pm.expect(neg_response).eql(neg_request);",
									"});",
									"",
									"pm.test(\"Insere Organograma\", function () {",
									"    var organograma_response = jsonData.result.items[0].filial[0].cod_organograma;",
									"    var organograma_request = pm.environment.get(\"cod_organograma\");",
									"    ",
									"    pm.expect(organograma_response).eql(organograma_request);",
									"});",
									"",
									"pm.test(\"Insere Centro de Custo\", function () {",
									"    var centro_custo_response = jsonData.result.items[0].centro_custo[0].organizacional_id;",
									"    var centro_custo_request = pm.environment.get(\"id_centro_custo\");",
									"    centro_custo_request = ''+centro_custo_request;",
									"    pm.expect(centro_custo_response).eql(centro_custo_request);",
									"});",
									"",
									"pm.test(\"Insere Número de Espécie\", function () {",
									"    var num_especie_response = jsonData.result.items[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie\");",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Frete\", function () {",
									"    var tipo_frete_response = jsonData.result.items[0].tipo_frete;",
									"    var tipo_frete_request = pm.environment.get(\"tipo_frete\");",
									"    pm.expect(''+tipo_frete_response).eql(tipo_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Seguradora\", function () {",
									"    var seguradora_response = jsonData.result.items[0].seguradora.id_seguradora;",
									"    var seguradora_request = pm.environment.get(\"id_seguradora\");",
									"    seguradora_request = ''+seguradora_request;",
									"    pm.expect(seguradora_response).eql(seguradora_request);",
									"});",
									"",
									"pm.test(\"Insere Tabela Frete \", function () {",
									"    var tab_frete_response = jsonData.result.items[0].tabela_frete_id;",
									"    tab_frete_response = ''+tab_frete_response;",
									"    var tab_frete_request = pm.environment.get(\"tabela_frete_id\");",
									"    pm.expect(tab_frete_response).eql(tab_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Contrato \", function () {",
									"    var contrato_response = jsonData.result.items[0].frete_proprio; ",
									"    var contrato_request = pm.environment.get(\"tipo_frete_contrato_edicao\");",
									"    pm.expect(contrato_response).eql(contrato_request);",
									"});",
									"",
									"pm.test(\"Insere regra Fiscal\", function () {",
									"    var r_fiscal_response = jsonData.result.items[0].regra_fiscal_id;",
									"    var r_fiscal_request = pm.environment.get(\"regra_fiscal\");",
									"    pm.expect(r_fiscal_response).eql(r_fiscal_request);",
									"});",
									"",
									"pm.test(\"Insere Informações Adicionais\", function () {",
									"    var info_response = jsonData.result.items[0].informacoes_adicionais;",
									"    var info_request = pm.environment.get(\"info_opcional\");",
									"    pm.expect(info_response).eql(info_request);",
									"});",
									"",
									"pm.test(\"Insere Quitação\", function () {",
									"    var quitacao_response = jsonData.result.items[0].quitacao_liberada;",
									"    var quitacao_request = pm.environment.get(\"quitacao_liberada\");",
									"    pm.expect(quitacao_response).eql(quitacao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Serviço\", function () {",
									"    var servico_response = jsonData.result.items[0].tipo_servico_id;",
									"    var servico_request = pm.environment.get(\"tipo_servico_id\");",
									"    pm.expect(servico_response).eql(servico_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Documento\", function () {",
									"    var documento_response = jsonData.result.items[0].tipo_documento;",
									"    var documento_request = pm.environment.get(\"tipo_documento\");",
									"    pm.expect(documento_response).eql(documento_request);",
									"});",
									"",
									"pm.test(\"Insere Limite CTE\", function () {",
									"    var limite_cte_response = jsonData.result.items[0].limite_cte_romaneio;",
									"    var limite_cte_request = pm.environment.get(\"limite_num_cte\");",
									"    pm.expect(limite_cte_response).eql(limite_cte_request);",
									"});",
									"",
									"pm.test(\"Insere Remetente\", function () {",
									"    var remetente_response = jsonData.result.items[0].remetente[0].cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"remetente_1\");",
									"    remetente_request = ''+remetente_request;",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.items[0].destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"destinatario_1\");",
									"    destinatario_request = ''+destinatario_request;",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Coleta\", function () {",
									"    var coleta_response = jsonData.result.items[0].coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"remetente_1\");",
									"    coleta_request = ''+coleta_request;",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Entrega\", function () {",
									"    var entrega_response = jsonData.result.items[0].entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"destinatario_1\");",
									"    entrega_request = ''+entrega_request;",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Tomador de Serviços\", function () {",
									"    var tomador_response = jsonData.result.items[0].cobranca[0].cod_pessoa;",
									"    var tomador_request = pm.environment.get(\"tomador_serv_1\");",
									"    tomador_request = ''+tomador_request;",
									"    pm.expect(tomador_response).eql(tomador_request);",
									"});",
									"",
									"pm.test(\"Insere Município Origem\", function () {",
									"    var origem_response = jsonData.result.items[0].municipio_origem[0].municipio_id;",
									"    var origem_request = pm.environment.get(\"mun_origem\");",
									"    ",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Município Destino\", function () {",
									"    var destino_response = jsonData.result.items[0].municipio_destino[0].municipio_id;",
									"    var destino_request = pm.environment.get(\"mun_destino\");",
									"    ",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"operacao_id\": \"{{oper_log}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altOperacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dc5025b-540a-487d-b1d4-7f6cdc64089f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"}); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d445faf9-8cfd-456b-b0e0-bc94544bbbbf",
								"exec": [
									"//Rota REPOM",
									"pm.environment.set(\"mun_origem_repom\", 39055);",
									"pm.environment.set(\"mun_destino_repom\", 83151);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altOperacao\",\n    \"parameters\": {\n        \"operacao_id\": \"{{oper_log}}\",\n        \"descricao\": \"{{desc_oper_log}}\",\n        \"cod_negociador\": \"{{cod_participante_pj}}\",\n        \"filial_emissao\": [\n            {\n                \"cod_organograma\": \"{{cod_organograma}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"centro_custo\": [\n            {\n                \"organizacional_id\": \"{{id_centro_custo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"num_especie\": \"{{cod_especie_edicao}}\",\n        \"tipo_frete\": \"{{tipo_frete_edicao}}\",\n        \"id_seguradora\": null,\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"frete_proprio\": \"{{tipo_frete_contrato}}\",\n        \"regra_fiscal_id\": \"{{regra_fiscal_edicao}}\",\n        \"percentual_maximo_adto\": null,\n        \"exige_aprovacao_adiantamento\": 0,\n        \"emite_multimodal\": null,\n        \"indicador_negociavel\": null,\n        \"tipo_pagamento_id\": null,\n        \"informacoes_adicionais\": \"{{info_opcional_edicao}}\",\n        \"reutiliza_doc_fiscal\": 1,\n        \"quitacao_liberada\": \"{{quitacao_liberada}}\",\n        \"tipo_servico_id\": \"{{tipo_servico_id_edicao}}\",\n        \"operacao_vinculada_otm\": 0,\n        \"tipo_documento\": \"{{tipo_documento}}\",\n        \"cte_globalizado_rem_dest\": null,\n        \"quitacao_quebra_peso\": 0,\n        \"limite_cte_romaneio\": \"{{limite_num_cte_edicao}}\",\n        \"participantes\": [\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_remetente_xml}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_remetente_xml_nf2}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_expedidor_repom}}\",\n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_recebedor_repom}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{tomador_serv_1}}\",\n                \"tipo_cliente\": 4\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_recebedor_repom}}\",\n                \"tipo_cliente\": 4\n            }\n        ],\n        \"municipio\": [\n            {\n                \"operation\": \"DELETE\",\n                \"municipio_id\": \"{{mun_origem}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"municipio_id\": \"{{mun_destino}}\",\n                \"origem_destino\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_origem_repom}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"origem_destino\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_destino_repom}}\",\n                \"origem_destino\": 1\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogisticaUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d937ddb-a567-481c-8d44-99e2394445d2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Operação para lote",
									"pm.test(\"Obter Operação\", function () {",
									"    var oper_log = jsonData.result.items[0].operacao_id;",
									"    var desc_oper_log = jsonData.result.items[0].descricao_completa;",
									"    ",
									"    pm.environment.set(\"oper_log\", oper_log);",
									"    pm.environment.set(\"desc_oper_log\", desc_oper_log); ",
									"});",
									"",
									"//Veriificação das Edições",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_oper\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar Cliente\", function () {",
									"    var cliente_response = jsonData.result.items[0].cod_negociador;",
									"    var cliente_request = pm.environment.get(\"cod_participante_pj\");",
									"    ",
									"    pm.expect(cliente_response).eql(cliente_request);",
									"});",
									"",
									"pm.test(\"Editar Organograma\", function () {",
									"    var organograma_response = jsonData.result.items[0].filial[0].cod_organograma;",
									"    var organograma_request = pm.environment.get(\"cod_organograma\");",
									"    ",
									"    pm.expect(organograma_response).eql(organograma_request);",
									"});",
									"",
									"pm.test(\"Editar Centro de Custo\", function () {",
									"    var centro_custo_response = jsonData.result.items[0].centro_custo[0].organizacional_id;",
									"    var centro_custo_request = pm.environment.get(\"id_centro_custo\");",
									"    centro_custo_request = ''+centro_custo_request;",
									"    pm.expect(centro_custo_response).eql(centro_custo_request);",
									"});",
									"",
									"pm.test(\"Editar Número de Espécie\", function () {",
									"    var num_especie_response = jsonData.result.items[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Frete\", function () {",
									"    var tipo_frete_response = jsonData.result.items[0].tipo_frete;",
									"    var tipo_frete_request = pm.environment.get(\"tipo_frete_edicao\");",
									"    pm.expect(''+tipo_frete_response).eql(tipo_frete_request);",
									"});",
									"",
									"pm.test(\"Editar Seguradora\", function () {",
									"    var seguradora_response = jsonData.result.items[0].seguradora.id_seguradora;",
									"    var seguradora_request = pm.environment.get(\"id_seguradora\");",
									"    seguradora_request = ''+seguradora_request;",
									"    pm.expect(seguradora_response).eql(seguradora_request);",
									"});",
									"",
									"pm.test(\"Editar Tabela Frete \", function () {",
									"    var tab_frete_response = jsonData.result.items[0].tabela_frete_id;",
									"    tab_frete_response = ''+tab_frete_response;",
									"    var tab_frete_request = pm.environment.get(\"tabela_frete_id\");",
									"    pm.expect(tab_frete_response).eql(tab_frete_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Contrato \", function () {",
									"    var contrato_response = jsonData.result.items[0].frete_proprio;",
									"    var contrato_request = pm.environment.get(\"tipo_frete_contrato\");",
									"    pm.expect(contrato_response).eql(contrato_request);",
									"});",
									"",
									"pm.test(\"Editar regra Fiscal\", function () {",
									"    var r_fiscal_response = jsonData.result.items[0].regra_fiscal_id;",
									"    var r_fiscal_request = pm.environment.get(\"regra_fiscal_edicao\");",
									"    pm.expect(r_fiscal_response).eql(r_fiscal_request);",
									"});",
									"",
									"pm.test(\"Editar Informações Adicionais\", function () {",
									"    var info_response = jsonData.result.items[0].informacoes_adicionais;",
									"    var info_request = pm.environment.get(\"info_opcional_edicao\");",
									"    pm.expect(info_response).eql(info_request);",
									"});",
									"",
									"pm.test(\"Editar Quitação\", function () {",
									"    var quitacao_response = jsonData.result.items[0].quitacao_liberada;",
									"    var quitacao_request = pm.environment.get(\"quitacao_liberada\");",
									"    pm.expect(quitacao_response).eql(quitacao_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Serviço\", function () {",
									"    var servico_response = jsonData.result.items[0].tipo_servico_id;",
									"    var servico_request = pm.environment.get(\"tipo_servico_id_edicao\");",
									"    pm.expect(servico_response).eql(servico_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Documento\", function () {",
									"    var documento_response = jsonData.result.items[0].tipo_documento;",
									"    var documento_request = pm.environment.get(\"tipo_documento\");",
									"    pm.expect(documento_response).eql(documento_request);",
									"});",
									"",
									"pm.test(\"Editar Limite CTE\", function () {",
									"    var limite_cte_response = jsonData.result.items[0].limite_cte_romaneio;",
									"    var limite_cte_request = pm.environment.get(\"limite_num_cte_edicao\");",
									"    pm.expect(limite_cte_response).eql(limite_cte_request);",
									"});",
									"",
									"pm.test(\"Editar Remetente\", function () {",
									"    var remetente_response = jsonData.result.items[0].remetente.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pf\")).cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"cod_participante_pf\");",
									"    remetente_request = ''+remetente_request;",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Editar Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.items[0].destinatario.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pj\")).cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"    destinatario_request = ''+destinatario_request;",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Editar Coleta\", function () {",
									"    var coleta_response = jsonData.result.items[0].coleta.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pf\")).cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"    coleta_request = ''+coleta_request;",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Editar Entrega\", function () {",
									"    var entrega_response = jsonData.result.items[0].entrega.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pj\")).cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"    entrega_request = ''+entrega_request;",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Editar Tomador de Serviços\", function () {",
									"    var tomador_response = jsonData.result.items[0].cobranca[0].cod_pessoa;",
									"    var tomador_request = pm.environment.get(\"cod_recebedor_repom\");",
									"    tomador_request = ''+tomador_request;",
									"    pm.expect(tomador_response).eql(tomador_request);",
									"});",
									"",
									"pm.test(\"Editar Município Origem\", function () {",
									"    var origem_response = jsonData.result.items[0].municipio_origem[0].municipio_id;",
									"    var origem_request = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Editar Município Destino\", function () {",
									"    var destino_response = jsonData.result.items[0].municipio_destino[0].municipio_id;",
									"    var destino_request = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(destino_response).eql(destino_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"operacao_id\": \"{{oper_log}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "aef44015-f443-4f23-ba9c-68018d76d919",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0efe0adb-c2b0-486a-b0ad-ebb94878adde",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LOTE",
			"item": [
				{
					"name": "M220 - insLote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "367c62bd-ae3c-4a6c-bc1b-fe2b122f49fa",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500);",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minino = Math.round(Math.random() * 1000) + 15000;",
									"    return val_minino;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5deacf04-e2fb-4161-b8e1-e5cc35dbf45b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0732c8fb-d926-4304-881b-85422afe7e67",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4240ad4c-ffc9-4ec0-82a1-13d885f8bf5c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"limite_viagem\": \"{{limite_edicao}}\",\n        \"limite_peso\": \"\",\n        \"descricao\": \"{{descricao_prod_edicao}}\",\n        \"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n        \"data_inicio\": \"{{data_ini_lote_edicao}}\",\n        \"data_termino\": \"{{data_futura_edicao}}\",\n        \"valor_custo_minimo\": \"{{valor_min_edicao}}\",\n        \"valor_custo_maximo\": \"{{valor_max_edicao}}\",\n        \"cadencia_ton_dia\": \"{{cadencia_edicao}}\",\n        \"observacao\": \"{{descricao_prod_edicao}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLoteUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b747447d-03b8-410f-a603-9ab4471b7ed6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Veriificação das Edições",
									"pm.test(\"Editar Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite_edicao\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod_edicao\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Editar Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Editar Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote_edicao\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Editar Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura_edicao\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Editar Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min_edicao\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Editar Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max_edicao\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Editar Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia_edicao\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Editar Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod_edicao\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e26cbb71-f475-4821-8443-551f9d866282",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - delLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "910f7cae-583d-4264-9488-c456338907fb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Excluir Lote\", function () {",
									"    var mensagem_sucesso = \"Lote excluído com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"delLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Enviar requisição \"getOperacaoLogisticaLista\" na pasta 'OPERACAO' para inserção de lote. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7d3a467d-6fc7-4ca6-b5f7-7058d6d3273a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f7c52992-e90c-4e6a-a633-73eb883fb781",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GERENCIAMENTO DE FILIAIS",
			"item": [
				{
					"name": "M220 - manipulaFilial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0d0e63a2-fbdc-4801-b5d8-91793f7f7675",
								"exec": [
									"function geraCodigoGrupo() {",
									"    var cod = Math.round(Math.random() * 100);",
									"    return cod;",
									"}",
									"pm.test(\"Gerar Código Grupo\", function () {",
									"    var codigo_grupo = geraCodigoGrupo();",
									"    pm.environment.set(\"codigo_grupo\", codigo_grupo);",
									"    ",
									"    var codigo_grupo_edicao = geraCodigoGrupo();",
									"    pm.environment.set(\"codigo_grupo_edicao\", codigo_grupo_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1a0db3f7-b8a2-4e7a-879b-6a502725d329",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"//Verificação das inserções",
									"",
									"pm.test(\"Insere Código Unidade Negócio\", function () {",
									"    var cod_unidade_response = jsonData.result.items[0].cod_unidade_negocio;",
									"    var cod_unidade_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(cod_unidade_response).eql(cod_unidade_request);",
									"});",
									"",
									"pm.test(\"Insere Código Pessoa\", function () {",
									"    var cod_pessoa_response = jsonData.result.items[0].cod_pessoa;",
									"    var cod_pessoa_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(cod_pessoa_response).eql(cod_pessoa_request);",
									"});",
									"",
									"pm.test(\"Insere Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.items[0].cod_pessoa_grupo;",
									"    var cod_grupo_request = pm.environment.get(\"codigo_grupo\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código da Unidade de Negócio\", function () {",
									"    var cod_unidade_neg = jsonData.result.items[0].cod_unidade_negocio;",
									"    pm.environment.set(\"cod_unidade_neg\", cod_unidade_neg);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaFilial\",\n    \"parameters\": {\n        \"cod_unidade_negocio\": \"{{cod_participante_pf}}\",\n        \"cod_pessoa\": \"{{cod_participante_pf}}\",\n        \"cod_grupo\": \"{{codigo_grupo}}\",\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getFilial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9e9ecd5b-a163-4e0f-8056-f4caad08316d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5a933c17-ec7c-40f2-ae1b-5d384fbb5d30",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"var cod_p_user_filial = jsonData.result.items.find(x => x.lotado == 1).cod_pessoa;",
									"pm.environment.set(\"cod_p_user_filial\", cod_p_user_filial);",
									"",
									"var usuario_logado = pm.environment.get(\"cod_participante_pf\");",
									"",
									"if (usuario_logado != cod_p_user_filial) postman.setNextRequest(\"M220 - getCenarioImpostoTipo Config\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getFilialLotacao\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaFilialSelect",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2921198d-cb4e-455e-a276-1bdc918315f5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ef74df1d-033f-4110-96c6-7b78a1fdffd5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaFilial\",\n    \"parameters\": {\n        \"operation\": \"SELECT\",\n        \"cod_unidade_negocio\": \"{{cod_unidade_neg}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaFilialUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8063900a-3c91-470a-841e-c0637798127d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Editar Código Pessoa\", function () {",
									"    var cod_pessoa_response = jsonData.result.items[0].cod_pessoa;",
									"    var cod_pessoa_request = pm.environment.get(\"cod_p_user_filial\");",
									"",
									"    pm.expect(cod_pessoa_response).eql(cod_pessoa_request);",
									"});",
									"",
									"pm.test(\"Editar Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.items[0].cod_pessoa_grupo;",
									"    var cod_grupo_request = pm.environment.get(\"codigo_grupo_edicao\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaFilial\",\n    \"parameters\": {\n        \"cod_unidade_negocio\": \"{{cod_unidade_neg}}\",\n        \"cod_pessoa\": \"{{cod_participante_pf}}\",\n        \"cod_grupo\": \"{{codigo_grupo_edicao}}\",\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Necessário executar pasta \"PARTICIPANTE\" para teste unitário.\n- Para obter o código da pessoa.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3de43776-d3eb-4c8b-912f-302e4f6955ea",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77ef42b4-24e5-4b7c-befd-6fe4a0704cac",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CONFIGURACOES DE IMPOSTOS",
			"item": [
				{
					"name": "M220 - getCenarioImpostoTipo Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9003cf1-6f3c-4798-8a7e-0d1ab1889c1e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Imposto\", function () {",
									"    var imposto_tipo_id = jsonData.result.items.find(x => x.descricao == \"COFINS Retido\").imposto_tipo_id;",
									"    pm.environment.set(\"imposto_tipo_id\", imposto_tipo_id);",
									"});",
									"",
									"pm.test(\"Obter Tipo Imposto ICMS\", function () {",
									"    var imposto_id = jsonData.result.items.find(x => x.descricao == \"ICMS\").imposto_tipo_id;",
									"    pm.environment.set(\"imposto_tipo_id_icms\", imposto_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoTipo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoConfiguracaoFlag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d02d4c6-7a8b-4d84-8cb3-84ab191fe29d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f47b045f-95eb-4b21-90e2-c742e787cca6",
								"exec": [
									"pm.environment.set(\"tipo_documento_imposto\", \"CTRC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoConfiguracaoFlag\",\n    \"parameters\": {\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoRetencao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5306e08-eb50-4e96-9f33-3506e1ac9097",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Imposto Retenção\", function () {",
									"    var imposto_cod_retencao = jsonData.result.items[0].imposto_cod_retencao_id;",
									"    pm.environment.set(\"imposto_cod_retencao\", imposto_cod_retencao);",
									"    ",
									"    var imposto_cod_retencao_edicao = jsonData.result.items[1].imposto_cod_retencao_id;",
									"    pm.environment.set(\"imposto_cod_retencao_edicao\", imposto_cod_retencao_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoRetencao\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_retencao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_retencao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCondicao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d44eebd0-b1f3-4510-95d3-ffa5b9d8bf8c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Imposto Condição\", function () {",
									"    var id_imposto_condicao = jsonData.result.items.find(x => x.descricao == \"Coleta: UF\").imposto_condicao_id;",
									"    pm.environment.set(\"id_imposto_condicao\", id_imposto_condicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCondicao\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoIndicadorNatRetencao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06baa13e-910c-419e-a857-61a4b2fe6557",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Indicador Nat Retenção\", function () {",
									"    var cod_nat_retencao = jsonData.result.items[0].ind_nat_ret;",
									"    pm.environment.set(\"cod_nat_retencao\", cod_nat_retencao);",
									"    ",
									"    var cod_nat_retencao_edicao = jsonData.result.items[1].ind_nat_ret;",
									"    pm.environment.set(\"cod_nat_retencao_edicao\", cod_nat_retencao_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoIndicadorNatRetencao\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCodigoReceita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f36f23f2-67c6-49f7-9b3e-d78dbbf54d69",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Receita\", function () {",
									"    var cod_receita = jsonData.result.items[0].cod_receita;",
									"    pm.environment.set(\"cod_receita\", cod_receita);",
									"    ",
									"    var cod_receita_edicao = jsonData.result.items[1].cod_receita;",
									"    pm.environment.set(\"cod_receita_edicao\", cod_receita_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCodigoReceita\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoUF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7e769db-c5bd-4e7f-aeb3-a44b71ed6033",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter UF Imposto\", function () {",
									"    var sort =  Math.round(Math.random() * 27);",
									"    var uf_imposto = jsonData.result.items[sort].id;",
									"    pm.environment.set(\"uf_imposto\", uf_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoUF\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoSituacaoTributaria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b177a90-4199-4006-bab0-645ca9fc4f57",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Imposto Situação Tributária\", function () {",
									"    var cod_situacao_tributaria = jsonData.result.items[0].imposto_situacao_id;",
									"    pm.environment.set(\"cod_situacao_tributaria\", cod_situacao_tributaria);",
									"    ",
									"    var cod_situacao_tributaria_edicao = jsonData.result.items[1].imposto_situacao_id;",
									"    pm.environment.set(\"cod_situacao_tributaria_edicao\", cod_situacao_tributaria_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "82acb786-5bf0-4c7c-a294-6c6973797aee",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoSituacaoTributaria\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_combo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_combo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoOrigemCredito",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c5eacdc-56fe-4a1d-9194-ee9809412ef0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Imposto Origem\", function () {",
									"    var cod_imposto_origem = jsonData.result.items[0].imposto_origem_id;",
									"    pm.environment.set(\"cod_imposto_origem\", cod_imposto_origem);",
									"    ",
									"    var cod_imposto_origem_edicao = jsonData.result.items[1].imposto_origem_id;",
									"    pm.environment.set(\"cod_imposto_origem_edicao\", cod_imposto_origem_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoOrigemCredito\",\n    \"parameters\": {\n        \"imposto_tipo_id\": 1,\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_combo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_combo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoNaturezaBaseCredito",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "108f684b-e781-45d9-971b-1976b5ed7df4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57dcee20-108f-4ded-b4d3-0adf8a4f2858",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoNaturezaBaseCredito\",\n    \"parameters\": {\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a934c47-c42d-44d2-a67d-6fd7d51a8814",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//=======================================================",
									"//Gerar descrição",
									"pm.test(\"Gerar Descrição Inserção\", function (){",
									"    var descricao_imposto = \"QA - Teste Imposto\"+' '+pm.environment.get(\"uf_imposto\");",
									"    pm.environment.set(\"descricao_imposto\", descricao_imposto);",
									"});",
									"",
									"var exist = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto\")) ? true : false;",
									"pm.environment.set(\"exist\", exist);",
									"",
									"if (exist) postman.setNextRequest(\"M220 - manipulaMotorista NF\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"descricao\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"QA - Teste Imposto\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - inserirCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "303bddae-0812-475e-b316-ba8170cb7063",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Imposto\", function () {",
									"    var id_cenario_imposto = jsonData.result.imposto_config_id;",
									"    pm.environment.set(\"id_cenario_imposto\", id_cenario_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "10973c3a-304d-4a0e-9e96-0a27cb03f44d",
								"exec": [
									"//Reservado ao Fisco",
									"pm.environment.set(\"reservado_fisco\", \"Não\");",
									"pm.environment.set(\"reservado_fisco_edicao\", \"Sim\");",
									"",
									"pm.environment.set(\"descricao_doc_imposto\", \"Teste Imposto ICMS\");",
									"pm.environment.set(\"descricao_doc_imposto_edicao\", \"Teste Imposto ICMS Edicao\");",
									"",
									"pm.environment.set(\"valor_aliquota\", 10);",
									"pm.environment.set(\"valor_aliquota_edicao\", 12);",
									"",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio\", 1);",
									"",
									"pm.environment.set(\"rec_periodo_1_final\", 25);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia\", 10);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_2_final\", 27);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia\", 15);",
									"",
									"//EDIÇÃO",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio_edicao\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_1_final_edicao\", 26);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia_edicao\", 11);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio_edicao\", 3);",
									"",
									"pm.environment.set(\"rec_periodo_2_final_edicao\", 28);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia_edicao\", 20);",
									"",
									"//======================================================",
									"",
									"//data base",
									"pm.environment.set(\"data_base\", 0);",
									"pm.environment.set(\"data_base_edicao\", 1);",
									"",
									"//Redução Base de Cálculo",
									"pm.environment.set(\"red_base_calculo\", 0);",
									"pm.environment.set(\"red_base_calculo_edicao\", 1);",
									"",
									"//Código Tributação Município",
									"pm.environment.set(\"tributacao_municipio\", 1);",
									"pm.environment.set(\"tributacao_municipio_edicao\", 2);",
									"",
									"//periodo de recolhimento",
									"pm.environment.set(\"periodo_recebimento\", 0);",
									"pm.environment.set(\"periodo_recebimento_edicao\", 1);",
									"",
									"//em caso de dia não útil",
									"pm.environment.set(\"dia_nao_util\", 0);",
									"pm.environment.set(\"dia_nao_util_edicao\", 1);",
									"",
									"// True or False Checkbox",
									"pm.environment.set(\"value_checkbox\", 0);",
									"pm.environment.set(\"value_checkbox_edicao\", 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"inserirCenarioImposto\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"descricao\": \"{{descricao_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"imposto_situacao_id\": \"{{cod_situacao_tributaria}}\",\n        \"aliquota\": \"{{valor_aliquota}}\",\n        \"reducao_base_calculo\": \"{{red_base_calculo}}\",\n        \"fundamentacao_legal\": \"{{descricao_doc_imposto}}\",\n        \"reservado_fisco\": \"{{reservado_fisco}}\",\n        \"regime_cumulativo\": \"{{value_checkbox}}\",\n        \"imposto_cod_retencao_id\": \"{{imposto_cod_retencao}}\",\n        \"imposto_origem_id\": \"{{cod_imposto_origem}}\",\n        \"rec_util_formula_venc\": \"{{value_checkbox}}\",\n        \"rec_data_base_venc\": \"{{data_base}}\",\n        \"rec_periodo\": \"{{periodo_recebimento}}\",\n        \"rec_periodo_1_inicio\": \"{{rec_periodo_1_inicio}}\",\n        \"rec_periodo_1_final\": \"{{rec_periodo_1_final}}\",\n        \"rec_periodo_1_dia\": \"{{rec_periodo_1_dia}}\",\n        \"rec_periodo_2_inicio\": \"{{rec_periodo_2_inicio}}\",\n        \"rec_periodo_2_final\": \"{{rec_periodo_2_final}}\",\n        \"rec_periodo_2_dia\": \"{{rec_periodo_2_dia}}\",\n        \"rec_caso_dia_nao_util\": \"{{dia_nao_util}}\",\n        \"considera_pedagio_base_calc\": \"{{value_checkbox}}\",\n        \"codigo_tributacao_municipio\": \"{{tributacao_municipio}}\",\n        \"aplica_reducao_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_st_base_calc\": \"{{value_checkbox}}\",\n        \"ind_nat_ret\": \"{{cod_nat_retencao}}\",\n        \"cod_receita\": \"{{cod_receita}}\",\n        \"altera_cst\": \"{{value_checkbox}}\",\n        \"condicao\": {\n            \"cole_uf\": [\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"{{uf_imposto}}\",\n                    \"tag\": \"cole_uf\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoInsert",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6543b688-9c36-46d6-ac22-477ffde1cdf8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4c0d729a-19bf-43a4-8223-3d283247b788",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.items[0].tipo_documento;",
									"    var tipo_doc_request = pm.environment.get(\"tipo_documento_imposto\");",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Descricão\", function () {",
									"    var descricao_response = jsonData.result.items[0].descricao;",
									"    var descricao_request = pm.environment.get(\"descricao_imposto\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Imposto\", function () {",
									"    var imposto_tipo_response = jsonData.result.items[0].imposto_tipo_id;",
									"    var imposto_tipo_request = pm.environment.get(\"imposto_tipo_id\");",
									"",
									"    pm.expect(imposto_tipo_response).eql(imposto_tipo_request);",
									"});",
									"",
									"pm.test(\"Insere Imposto Situação\", function () {",
									"    var imposto_situacao_response = jsonData.result.items[0].imposto_situacao_id;",
									"    var imposto_situacao_request = pm.environment.get(\"cod_situacao_tributaria\");",
									"",
									"    pm.expect(imposto_situacao_response).eql(imposto_situacao_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Alíquota\", function () {",
									"    var aliquota_imposto_response = jsonData.result.items[0].aliquota;",
									"    var aliquota_imposto_request = pm.environment.get(\"valor_aliquota\");",
									"",
									"    pm.expect(aliquota_imposto_response).eql(aliquota_imposto_request);",
									"});",
									"",
									"pm.test(\"Insere Redução da Base de Cálculo\", function () {",
									"    var red_base_calculo_response = jsonData.result.items[0].reducao_base_calculo;",
									"    var red_base_calculo_request = pm.environment.get(\"red_base_calculo\");",
									"",
									"    pm.expect(red_base_calculo_response).eql(red_base_calculo_request);",
									"});",
									"",
									"pm.test(\"Insere Fundamentação Legal\", function () {",
									"    var fundamentacao_legal_response = jsonData.result.items[0].fundamentacao_legal;",
									"    var fundamentacao_legal_request = pm.environment.get(\"descricao_doc_imposto\");",
									"",
									"    pm.expect(fundamentacao_legal_response).eql(fundamentacao_legal_request);",
									"});",
									"",
									"pm.test(\"Insere Reservado ao Fisco\", function () {",
									"    var reservado_fisco_response = jsonData.result.items[0].reservado_fisco;",
									"    var reservado_fisco_request = pm.environment.get(\"reservado_fisco\");",
									"",
									"    pm.expect(reservado_fisco_response).eql(reservado_fisco_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Cumulativo\", function () {",
									"    var regime_cumulativo_response = jsonData.result.items[0].regime_cumulativo;",
									"    var regime_cumulativo_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(regime_cumulativo_response).eql(regime_cumulativo_request);",
									"});",
									"",
									"pm.test(\"Insere Imposto Retenção\", function () {",
									"    var imposto_retencao_response = jsonData.result.items[0].imposto_cod_retencao_id;",
									"    var imposto_retencao_request = pm.environment.get(\"imposto_cod_retencao\");",
									"",
									"    pm.expect(imposto_retencao_response).eql(imposto_retencao_request);",
									"});",
									"",
									"pm.test(\"Insere Origem Imposto\", function () {",
									"    var imposto_origem_response = jsonData.result.items[0].imposto_origem_id;",
									"    var imposto_origem_request = pm.environment.get(\"cod_imposto_origem\");",
									"",
									"    pm.expect(imposto_origem_response).eql(imposto_origem_request);",
									"});",
									"",
									"pm.test(\"Insere Fórmula Vencimento\", function () {",
									"    var formula_venc_response = jsonData.result.items[0].rec_util_formula_venc;",
									"    var formula_venc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(formula_venc_response).eql(formula_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Base Vencimento\", function () {",
									"    var data_base_venc_response = jsonData.result.items[0].rec_data_base_venc;",
									"    var data_base_venc_request = pm.environment.get(\"data_base\");",
									"",
									"    pm.expect(data_base_venc_response).eql(data_base_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Período de Recolhimento\", function () {",
									"    var periodo_rec_response = jsonData.result.items[0].rec_periodo;",
									"    var periodo_rec_request = pm.environment.get(\"periodo_recebimento\");",
									"",
									"    pm.expect(periodo_rec_response).eql(periodo_rec_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Início\", function () {",
									"    var periodo_1_inicio_response = jsonData.result.items[0].rec_periodo_1_inicio;",
									"    var periodo_1_inicio_request = pm.environment.get(\"rec_periodo_1_inicio\");",
									"",
									"    pm.expect(periodo_1_inicio_response).eql(periodo_1_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Final\", function () {",
									"    var periodo_1_final_response = jsonData.result.items[0].rec_periodo_1_final;",
									"    var periodo_1_final_request = pm.environment.get(\"rec_periodo_1_final\");",
									"",
									"    pm.expect(periodo_1_final_response).eql(periodo_1_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Dia de Recolhimento \", function () {",
									"    var periodo_1_recolhimento_response = jsonData.result.items[0].rec_periodo_1_dia;",
									"    var periodo_1_recolhimento_request = pm.environment.get(\"rec_periodo_1_dia\");",
									"",
									"    pm.expect(periodo_1_recolhimento_response).eql(periodo_1_recolhimento_request);",
									"});",
									"",
									"//Período 2 -------------------------------------------------------------------------",
									"",
									"pm.test(\"Insere Período 2 Início\", function () {",
									"    var periodo_2_inicio_response = jsonData.result.items[0].rec_periodo_2_inicio;",
									"    var periodo_2_inicio_request = pm.environment.get(\"rec_periodo_2_inicio\");",
									"",
									"    pm.expect(periodo_2_inicio_response).eql(periodo_2_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Final\", function () {",
									"    var periodo_2_final_response = jsonData.result.items[0].rec_periodo_2_final;",
									"    var periodo_2_final_request = pm.environment.get(\"rec_periodo_2_final\");",
									"",
									"    pm.expect(periodo_2_final_response).eql(periodo_2_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Dia de Recolhimento \", function () {",
									"    var periodo_2_recolhimento_response = jsonData.result.items[0].rec_periodo_2_dia;",
									"    var periodo_2_recolhimento_request = pm.environment.get(\"rec_periodo_2_dia\");",
									"",
									"    pm.expect(periodo_2_recolhimento_response).eql(periodo_2_recolhimento_request);",
									"});",
									"",
									"// ===================================================================================",
									"",
									"pm.test(\"Insere Dia de Recolhimento em caso de dia não útil\", function () {",
									"    var recolhimento_dia_nao_util_response = jsonData.result.items[0].rec_caso_dia_nao_util;",
									"    var recolhimento_dia_nao_util_request = pm.environment.get(\"dia_nao_util\");",
									"",
									"    pm.expect(recolhimento_dia_nao_util_response).eql(recolhimento_dia_nao_util_request);",
									"});",
									"",
									"pm.test(\"Insere Código tributação Município\", function () {",
									"    var cod_trib_municipio_response = jsonData.result.items[0].codigo_tributacao_municipio;",
									"    var cod_trib_municipio_request = pm.environment.get(\"tributacao_municipio\");",
									"    cod_trib_municipio_request = ''+cod_trib_municipio_request;",
									"",
									"    pm.expect(cod_trib_municipio_response).eql(cod_trib_municipio_request);",
									"});",
									"",
									"//Checkbox",
									"pm.test(\"Insere Consideração de Pedágio Base Cálculo\", function () {",
									"    var pedagio_base_calc_response = jsonData.result.items[0].considera_pedagio_base_calc;",
									"    var pedagio_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(pedagio_base_calc_response).eql(pedagio_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Redução Base Cálculo\", function () {",
									"    var reducao_base_calc_response = jsonData.result.items[0].aplica_reducao_base_calc;",
									"    var reducao_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(reducao_base_calc_response).eql(reducao_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Base Cálculo\", function () {",
									"    var icms_base_calc_response = jsonData.result.items[0].considera_icms_base_calc;",
									"    var icms_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_base_calc_response).eql(icms_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Substituto Base Cálculo\", function () {",
									"    var icms_sbst_base_calc_response = jsonData.result.items[0].considera_icms_st_base_calc;",
									"    var icms_sbst_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_sbst_base_calc_response).eql(icms_sbst_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere CST\", function () {",
									"    var cst_response = jsonData.result.items[0].altera_cst;",
									"    var cst_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(cst_response).eql(cst_request);",
									"});",
									"",
									"//===============================================================================================",
									"",
									"pm.test(\"Insere Indicador da natureza da retenção\", function () {",
									"    var ind_nat_ret_response = jsonData.result.items[0].ind_nat_ret;",
									"    var ind_nat_ret_request = pm.environment.get(\"cod_nat_retencao\");",
									"",
									"    pm.expect(ind_nat_ret_response).eql(ind_nat_ret_request);",
									"});",
									"",
									"pm.test(\"Insere Código Receita\", function () {",
									"    var cod_receita_response = jsonData.result.items[0].cod_receita;",
									"    var cod_receita_request = pm.environment.get(\"cod_receita\");",
									"",
									"    pm.expect(cod_receita_response).eql(cod_receita_request);",
									"});",
									"",
									"pm.test(\"Insere UF de Coleta\", function () {",
									"    var coleta_uf_response = jsonData.result.items[0].condicao.cole_uf[0].id;",
									"    var coleta_uf_request = pm.environment.get(\"uf_imposto\");",
									"",
									"    pm.expect(coleta_uf_response).eql(coleta_uf_request);",
									"});",
									"",
									"pm.test(\"Obter ID Vínculo de Coleta\", function () {",
									"    var vinculo_id_uf = jsonData.result.items[0].condicao.cole_uf[0].id_vinculo;",
									"    pm.environment.set(\"vinculo_id_uf\", vinculo_id_uf);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - alterarCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a307422-2295-494a-b598-de4f535a9fdb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Imposto\", function () {",
									"    var id_cenario_imposto = jsonData.result.imposto_config_id;",
									"    pm.environment.set(\"id_cenario_imposto\", id_cenario_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6d7aa1f5-4d53-42f4-a4d9-66882f9759b9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"alterarCenarioImposto\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"descricao\": \"{{descricao_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"imposto_situacao_id\": \"{{cod_situacao_tributaria_edicao}}\",\n        \"aliquota\": \"{{valor_aliquota_edicao}}\",\n        \"reducao_base_calculo\": \"{{red_base_calculo_edicao}}\",\n        \"fundamentacao_legal\": \"{{descricao_doc_imposto_edicao}}\",\n        \"reservado_fisco\": \"{{reservado_fisco_edicao}}\",\n        \"regime_cumulativo\": \"{{value_checkbox_edicao}}\",\n        \"imposto_cod_retencao_id\": \"{{imposto_cod_retencao_edicao}}\",\n        \"imposto_origem_id\": \"{{cod_imposto_origem_edicao}}\",\n        \"imposto_natureza_bc_id\": null,\n        \"rec_util_formula_venc\": \"{{value_checkbox_edicao}}\",\n        \"rec_data_base_venc\": \"{{data_base_edicao}}\",\n        \"rec_periodo\": \"{{periodo_recebimento_edicao}}\",\n        \"rec_periodo_1_inicio\": \"{{rec_periodo_1_inicio_edicao}}\",\n        \"rec_periodo_1_final\": \"{{rec_periodo_1_final_edicao}}\",\n        \"rec_periodo_1_dia\": \"{{rec_periodo_1_dia_edicao}}\",\n        \"rec_periodo_2_inicio\": \"{{rec_periodo_2_inicio_edicao}}\",\n        \"rec_periodo_2_final\": \"{{rec_periodo_2_final_edicao}}\",\n        \"rec_periodo_2_dia\": \"{{rec_periodo_2_dia_edicao}}\",\n        \"rec_caso_dia_nao_util\": \"{{dia_nao_util_edicao}}\",\n        \"considera_pedagio_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"codigo_tributacao_municipio\": \"{{tributacao_municipio_edicao}}\",\n        \"aplica_reducao_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"considera_icms_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"considera_icms_st_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"ind_nat_ret\": \"{{cod_nat_retencao_edicao}}\",\n        \"cod_receita\": \"{{cod_receita_edicao}}\",\n        \"altera_cst\": \"{{value_checkbox_edicao}}\",\n        \"gera_cpg_icms_antecipado\": 0,\n        \"cod_pessoa_favorecido\": null,\n        \"condicao\": {\n            \"cole_uf\": [\n                {\n                    \"operation\": \"\",\n                    \"id\": \"{{uf_imposto}}\",\n                    \"id_vinculo\": \"{{vinculo_id_uf}}\",\n                    \"tag\": \"cole_uf\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c82bbe57-fb9f-4311-8813-1bcfc97a34e5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Editar Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.items[0].tipo_documento;",
									"    var tipo_doc_request = pm.environment.get(\"tipo_documento_imposto\");",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Editar Descricão\", function () {",
									"    var descricao_response = jsonData.result.items[0].descricao;",
									"    var descricao_request = pm.environment.get(\"descricao_imposto\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Imposto\", function () {",
									"    var imposto_tipo_response = jsonData.result.items[0].imposto_tipo_id;",
									"    var imposto_tipo_request = pm.environment.get(\"imposto_tipo_id\");",
									"",
									"    pm.expect(imposto_tipo_response).eql(imposto_tipo_request);",
									"});",
									"",
									"pm.test(\"Editar Imposto Situação\", function () {",
									"    var imposto_situacao_response = jsonData.result.items[0].imposto_situacao_id;",
									"    var imposto_situacao_request = pm.environment.get(\"cod_situacao_tributaria_edicao\");",
									"",
									"    pm.expect(imposto_situacao_response).eql(imposto_situacao_request);",
									"});",
									"",
									"pm.test(\"Editar Valor Alíquota\", function () {",
									"    var aliquota_imposto_response = jsonData.result.items[0].aliquota;",
									"    var aliquota_imposto_request = pm.environment.get(\"valor_aliquota_edicao\");",
									"",
									"    pm.expect(aliquota_imposto_response).eql(aliquota_imposto_request);",
									"});",
									"",
									"pm.test(\"Editar Redução da Base de Cálculo\", function () {",
									"    var red_base_calculo_response = jsonData.result.items[0].reducao_base_calculo;",
									"    var red_base_calculo_request = pm.environment.get(\"red_base_calculo_edicao\");",
									"",
									"    pm.expect(red_base_calculo_response).eql(red_base_calculo_request);",
									"});",
									"",
									"pm.test(\"Editar Fundamentação Legal\", function () {",
									"    var fundamentacao_legal_response = jsonData.result.items[0].fundamentacao_legal;",
									"    var fundamentacao_legal_request = pm.environment.get(\"descricao_doc_imposto_edicao\");",
									"",
									"    pm.expect(fundamentacao_legal_response).eql(fundamentacao_legal_request);",
									"});",
									"",
									"pm.test(\"Editar Reservado ao Fisco\", function () {",
									"    var reservado_fisco_response = jsonData.result.items[0].reservado_fisco;",
									"    var reservado_fisco_request = pm.environment.get(\"reservado_fisco_edicao\");",
									"",
									"    pm.expect(reservado_fisco_response).eql(reservado_fisco_request);",
									"});",
									"",
									"pm.test(\"Editar Regime Cumulativo\", function () {",
									"    var regime_cumulativo_response = jsonData.result.items[0].regime_cumulativo;",
									"    var regime_cumulativo_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(regime_cumulativo_response).eql(regime_cumulativo_request);",
									"});",
									"",
									"pm.test(\"Editar Imposto Retenção\", function () {",
									"    var imposto_retencao_response = jsonData.result.items[0].imposto_cod_retencao_id;",
									"    var imposto_retencao_request = pm.environment.get(\"imposto_cod_retencao_edicao\");",
									"",
									"    pm.expect(imposto_retencao_response).eql(imposto_retencao_request);",
									"});",
									"",
									"pm.test(\"Editar Origem Imposto\", function () {",
									"    var imposto_origem_response = jsonData.result.items[0].imposto_origem_id;",
									"    var imposto_origem_request = pm.environment.get(\"cod_imposto_origem_edicao\");",
									"",
									"    pm.expect(imposto_origem_response).eql(imposto_origem_request);",
									"});",
									"",
									"pm.test(\"Editar Fórmula Vencimento\", function () {",
									"    var formula_venc_response = jsonData.result.items[0].rec_util_formula_venc;",
									"    var formula_venc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(formula_venc_response).eql(formula_venc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Base Vencimento\", function () {",
									"    var data_base_venc_response = jsonData.result.items[0].rec_data_base_venc;",
									"    var data_base_venc_request = pm.environment.get(\"data_base_edicao\");",
									"",
									"    pm.expect(data_base_venc_response).eql(data_base_venc_request);",
									"});",
									"",
									"pm.test(\"Editar Período de Recolhimento\", function () {",
									"    var periodo_rec_response = jsonData.result.items[0].rec_periodo;",
									"    var periodo_rec_request = pm.environment.get(\"periodo_recebimento_edicao\");",
									"",
									"    pm.expect(periodo_rec_response).eql(periodo_rec_request);",
									"});",
									"",
									"pm.test(\"Editar Período 1 Início\", function () {",
									"    var periodo_1_inicio_response = jsonData.result.items[0].rec_periodo_1_inicio;",
									"    var periodo_1_inicio_request = pm.environment.get(\"rec_periodo_1_inicio_edicao\");",
									"",
									"    pm.expect(periodo_1_inicio_response).eql(periodo_1_inicio_request);",
									"});",
									"",
									"pm.test(\"Editar Período 1 Final\", function () {",
									"    var periodo_1_final_response = jsonData.result.items[0].rec_periodo_1_final;",
									"    var periodo_1_final_request = pm.environment.get(\"rec_periodo_1_final_edicao\");",
									"",
									"    pm.expect(periodo_1_final_response).eql(periodo_1_final_request);",
									"});",
									"",
									"pm.test(\"Editar Período 1 Dia de Recolhimento \", function () {",
									"    var periodo_1_recolhimento_response = jsonData.result.items[0].rec_periodo_1_dia;",
									"    var periodo_1_recolhimento_request = pm.environment.get(\"rec_periodo_1_dia_edicao\");",
									"",
									"    pm.expect(periodo_1_recolhimento_response).eql(periodo_1_recolhimento_request);",
									"});",
									"",
									"//Período 2 -------------------------------------------------------------------------",
									"",
									"pm.test(\"Editar Período 2 Início\", function () {",
									"    var periodo_2_inicio_response = jsonData.result.items[0].rec_periodo_2_inicio;",
									"    var periodo_2_inicio_request = pm.environment.get(\"rec_periodo_2_inicio_edicao\");",
									"",
									"    pm.expect(periodo_2_inicio_response).eql(periodo_2_inicio_request);",
									"});",
									"",
									"pm.test(\"Editar Período 2 Final\", function () {",
									"    var periodo_2_final_response = jsonData.result.items[0].rec_periodo_2_final;",
									"    var periodo_2_final_request = pm.environment.get(\"rec_periodo_2_final_edicao\");",
									"",
									"    pm.expect(periodo_2_final_response).eql(periodo_2_final_request);",
									"});",
									"",
									"pm.test(\"Editar Período 2 Dia de Recolhimento \", function () {",
									"    var periodo_2_recolhimento_response = jsonData.result.items[0].rec_periodo_2_dia;",
									"    var periodo_2_recolhimento_request = pm.environment.get(\"rec_periodo_2_dia_edicao\");",
									"",
									"    pm.expect(periodo_2_recolhimento_response).eql(periodo_2_recolhimento_request);",
									"});",
									"",
									"// ===================================================================================",
									"",
									"pm.test(\"Editar Dia de Recolhimento em caso de dia não útil\", function () {",
									"    var recolhimento_dia_nao_util_response = jsonData.result.items[0].rec_caso_dia_nao_util;",
									"    var recolhimento_dia_nao_util_request = pm.environment.get(\"dia_nao_util_edicao\");",
									"",
									"    pm.expect(recolhimento_dia_nao_util_response).eql(recolhimento_dia_nao_util_request);",
									"});",
									"",
									"pm.test(\"Editar Código tributação Município\", function () {",
									"    var cod_trib_municipio_response = jsonData.result.items[0].codigo_tributacao_municipio;",
									"    var cod_trib_municipio_request = pm.environment.get(\"tributacao_municipio_edicao\");",
									"    cod_trib_municipio_request = ''+cod_trib_municipio_request;",
									"",
									"    pm.expect(cod_trib_municipio_response).eql(cod_trib_municipio_request);",
									"});",
									"",
									"//Checkbox",
									"pm.test(\"Editar Consideração de Pedágio Base Cálculo\", function () {",
									"    var pedagio_base_calc_response = jsonData.result.items[0].considera_pedagio_base_calc;",
									"    var pedagio_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(pedagio_base_calc_response).eql(pedagio_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar Redução Base Cálculo\", function () {",
									"    var reducao_base_calc_response = jsonData.result.items[0].aplica_reducao_base_calc;",
									"    var reducao_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(reducao_base_calc_response).eql(reducao_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar Consideração ICMS Base Cálculo\", function () {",
									"    var icms_base_calc_response = jsonData.result.items[0].considera_icms_base_calc;",
									"    var icms_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(icms_base_calc_response).eql(icms_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar Consideração ICMS Substituto Base Cálculo\", function () {",
									"    var icms_sbst_base_calc_response = jsonData.result.items[0].considera_icms_st_base_calc;",
									"    var icms_sbst_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(icms_sbst_base_calc_response).eql(icms_sbst_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar CST\", function () {",
									"    var cst_response = jsonData.result.items[0].altera_cst;",
									"    var cst_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(cst_response).eql(cst_request);",
									"});",
									"",
									"//===============================================================================================",
									"",
									"pm.test(\"Editar Indicador da natureza da retenção\", function () {",
									"    var ind_nat_ret_response = jsonData.result.items[0].ind_nat_ret;",
									"    var ind_nat_ret_request = pm.environment.get(\"cod_nat_retencao_edicao\");",
									"",
									"    pm.expect(ind_nat_ret_response).eql(ind_nat_ret_request);",
									"});",
									"",
									"pm.test(\"Editar Código Receita\", function () {",
									"    var cod_receita_response = jsonData.result.items[0].cod_receita;",
									"    var cod_receita_request = pm.environment.get(\"cod_receita_edicao\");",
									"",
									"    pm.expect(cod_receita_response).eql(cod_receita_request);",
									"});",
									"",
									"pm.test(\"Editar UF de Coleta\", function () {",
									"    var coleta_uf_response = jsonData.result.items[0].condicao.cole_uf[0].id;",
									"    var coleta_uf_request = pm.environment.get(\"uf_imposto\");",
									"",
									"    pm.expect(coleta_uf_response).eql(coleta_uf_request);",
									"});",
									"",
									"pm.test(\"Editar ID Vínculo de Coleta\", function () {",
									"    var vinculo_id_uf_response = jsonData.result.items[0].condicao.cole_uf[0].id_vinculo;",
									"    var vinculo_id_uf_request = pm.environment.get(\"vinculo_id_uf\");",
									"",
									"    pm.expect(vinculo_id_uf_response).eql(vinculo_id_uf_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "db4dd0d3-da34-4235-9419-30cbbf1bb569",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoSituacaoTributaria Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61b765c8-bb09-419d-b12b-cf8d6e9ea070",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Imposto Situação Tributária\", function () {",
									"    var cod_situacao_tributaria = jsonData.result.items[0].imposto_situacao_id;",
									"    pm.environment.set(\"cod_situacao_tributaria_icms\", cod_situacao_tributaria);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoSituacaoTributaria\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": 1,\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_combo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_combo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - inserirCenarioImposto ICMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08e0891a-11d1-414f-a7a9-aa614f67f53d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Imposto\", function () {",
									"    var id_cenario_imposto = jsonData.result.imposto_config_id;",
									"    pm.environment.set(\"id_cenario_imposto\", id_cenario_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "be68c5bb-0f64-400e-a528-7062be69b47d",
								"exec": [
									"//Reservado ao Fisco",
									"pm.environment.set(\"reservado_fisco\", \"Não\");",
									"pm.environment.set(\"reservado_fisco_edicao\", \"Sim\");",
									"",
									"pm.environment.set(\"descricao_doc_imposto\", \"Teste Imposto ICMS\");",
									"pm.environment.set(\"descricao_doc_imposto_edicao\", \"Teste Imposto ICMS Edicao\");",
									"",
									"pm.environment.set(\"valor_aliquota\", 10);",
									"pm.environment.set(\"valor_aliquota_edicao\", 12);",
									"",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio\", 1);",
									"",
									"pm.environment.set(\"rec_periodo_1_final\", 25);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia\", 10);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_2_final\", 27);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia\", 15);",
									"",
									"//EDIÇÃO",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio_edicao\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_1_final_edicao\", 26);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia_edicao\", 11);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio_edicao\", 3);",
									"",
									"pm.environment.set(\"rec_periodo_2_final_edicao\", 28);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia_edicao\", 20);",
									"",
									"//======================================================",
									"",
									"//data base",
									"pm.environment.set(\"data_base\", 0);",
									"pm.environment.set(\"data_base_edicao\", 1);",
									"",
									"//Redução Base de Cálculo",
									"pm.environment.set(\"red_base_calculo\", 0);",
									"pm.environment.set(\"red_base_calculo_edicao\", 1);",
									"",
									"//Código Tributação Município",
									"pm.environment.set(\"tributacao_municipio\", 1);",
									"pm.environment.set(\"tributacao_municipio_edicao\", 2);",
									"",
									"//periodo de recolhimento",
									"pm.environment.set(\"periodo_recebimento\", 0);",
									"pm.environment.set(\"periodo_recebimento_edicao\", 1);",
									"",
									"//em caso de dia não útil",
									"pm.environment.set(\"dia_nao_util\", 0);",
									"pm.environment.set(\"dia_nao_util_edicao\", 1);",
									"",
									"// True or False Checkbox",
									"pm.environment.set(\"value_checkbox\", 0);",
									"pm.environment.set(\"value_checkbox_edicao\", 1);",
									"",
									"//Gerar descrição",
									"pm.test(\"Inserir Gerar Descrição Inserção\", function (){",
									"    var descricao_imposto = \"QA - ICMS GERAL\";",
									"    pm.environment.set(\"descricao_imposto_icms\", descricao_imposto);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"inserirCenarioImposto\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"descricao\": \"{{descricao_imposto_icms}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id_icms}}\",\n        \"imposto_situacao_id\": \"{{cod_situacao_tributaria_icms}}\",\n        \"aliquota\": \"{{valor_aliquota_edicao}}\",\n        \"reducao_base_calculo\": \"{{red_base_calculo}}\",\n        \"fundamentacao_legal\": \"{{descricao_doc_imposto}}\",\n        \"reservado_fisco\": \"{{reservado_fisco}}\",\n        \"regime_cumulativo\": \"{{value_checkbox}}\",\n        \"imposto_cod_retencao_id\": null,\n        \"imposto_origem_id\": \"{{cod_imposto_origem}}\",\n        \"rec_util_formula_venc\": \"{{value_checkbox_edicao}}\",\n        \"rec_data_base_venc\": \"{{data_base}}\",\n        \"rec_periodo\": \"{{periodo_recebimento}}\",\n        \"rec_periodo_1_inicio\": \"{{rec_periodo_1_inicio}}\",\n        \"rec_periodo_1_final\": \"{{rec_periodo_1_final}}\",\n        \"rec_periodo_1_dia\": \"{{rec_periodo_1_dia}}\",\n        \"rec_periodo_2_inicio\": \"{{rec_periodo_2_inicio}}\",\n        \"rec_periodo_2_final\": \"{{rec_periodo_2_final}}\",\n        \"rec_periodo_2_dia\": \"{{rec_periodo_2_dia}}\",\n        \"rec_caso_dia_nao_util\": \"{{dia_nao_util}}\",\n        \"considera_pedagio_base_calc\": \"{{value_checkbox}}\",\n        \"codigo_tributacao_municipio\": null,\n        \"aplica_reducao_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_st_base_calc\": \"{{value_checkbox}}\",\n        \"ind_nat_ret\": null,\n        \"cod_receita\": null,\n        \"altera_cst\": \"{{value_checkbox}}\",\n        \"condicao\": {\n            \"cole_uf\": [\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AC\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AL\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AP\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AM\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"BA\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"CE\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"DF\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"ES\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"GO\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MA\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MT\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MS\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MG\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PA\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PB\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PR\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PE\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PI\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RJ\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RN\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RS\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RO\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RR\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"SC\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"SP\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"SE\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"TO\",\n                    \"tag\": \"cole_uf\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto ICMS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0a4ef508-e83f-450b-9b81-8e6b345643a1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "43abad19-b498-4120-b9f7-e2df4624f5ff",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.items[0].tipo_documento;",
									"    var tipo_doc_request = pm.environment.get(\"tipo_documento_imposto\");",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Descricão\", function () {",
									"    var descricao_response = jsonData.result.items[0].descricao;",
									"    var descricao_request = pm.environment.get(\"descricao_imposto_icms\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Imposto\", function () {",
									"    var imposto_tipo_response = jsonData.result.items[0].imposto_tipo_id;",
									"    var imposto_tipo_request = pm.environment.get(\"imposto_tipo_id_icms\");",
									"",
									"    pm.expect(imposto_tipo_response).eql(imposto_tipo_request);",
									"});",
									"",
									"pm.test(\"Insere Imposto Situação\", function () {",
									"    var imposto_situacao_response = jsonData.result.items[0].imposto_situacao_id;",
									"    var imposto_situacao_request = pm.environment.get(\"cod_situacao_tributaria_icms\");",
									"",
									"    pm.expect(imposto_situacao_response).eql(imposto_situacao_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Alíquota\", function () {",
									"    var aliquota_imposto_response = jsonData.result.items[0].aliquota;",
									"    var aliquota_imposto_request = pm.environment.get(\"valor_aliquota_edicao\");",
									"",
									"    pm.expect(aliquota_imposto_response).eql(aliquota_imposto_request);",
									"});",
									"",
									"pm.test(\"Insere Redução da Base de Cálculo\", function () {",
									"    var red_base_calculo_response = jsonData.result.items[0].reducao_base_calculo;",
									"    var red_base_calculo_request = pm.environment.get(\"red_base_calculo\");",
									"",
									"    pm.expect(red_base_calculo_response).eql(red_base_calculo_request);",
									"});",
									"",
									"pm.test(\"Insere Fundamentação Legal\", function () {",
									"    var fundamentacao_legal_response = jsonData.result.items[0].fundamentacao_legal;",
									"    var fundamentacao_legal_request = pm.environment.get(\"descricao_doc_imposto\");",
									"",
									"    pm.expect(fundamentacao_legal_response).eql(fundamentacao_legal_request);",
									"});",
									"",
									"pm.test(\"Insere Reservado ao Fisco\", function () {",
									"    var reservado_fisco_response = jsonData.result.items[0].reservado_fisco;",
									"    var reservado_fisco_request = pm.environment.get(\"reservado_fisco\");",
									"",
									"    pm.expect(reservado_fisco_response).eql(reservado_fisco_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Cumulativo\", function () {",
									"    var regime_cumulativo_response = jsonData.result.items[0].regime_cumulativo;",
									"    var regime_cumulativo_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(regime_cumulativo_response).eql(regime_cumulativo_request);",
									"});",
									"",
									"pm.test(\"Insere Origem Imposto\", function () {",
									"    var imposto_origem_response = jsonData.result.items[0].imposto_origem_id;",
									"    var imposto_origem_request = pm.environment.get(\"cod_imposto_origem\");",
									"",
									"    pm.expect(imposto_origem_response).eql(imposto_origem_request);",
									"});",
									"",
									"pm.test(\"Insere Fórmula Vencimento\", function () {",
									"    var formula_venc_response = jsonData.result.items[0].rec_util_formula_venc;",
									"    var formula_venc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(formula_venc_response).eql(formula_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Base Vencimento\", function () {",
									"    var data_base_venc_response = jsonData.result.items[0].rec_data_base_venc;",
									"    var data_base_venc_request = pm.environment.get(\"data_base\");",
									"",
									"    pm.expect(data_base_venc_response).eql(data_base_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Período de Recolhimento\", function () {",
									"    var periodo_rec_response = jsonData.result.items[0].rec_periodo;",
									"    var periodo_rec_request = pm.environment.get(\"periodo_recebimento\");",
									"",
									"    pm.expect(periodo_rec_response).eql(periodo_rec_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Início\", function () {",
									"    var periodo_1_inicio_response = jsonData.result.items[0].rec_periodo_1_inicio;",
									"    var periodo_1_inicio_request = pm.environment.get(\"rec_periodo_1_inicio\");",
									"",
									"    pm.expect(periodo_1_inicio_response).eql(periodo_1_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Final\", function () {",
									"    var periodo_1_final_response = jsonData.result.items[0].rec_periodo_1_final;",
									"    var periodo_1_final_request = pm.environment.get(\"rec_periodo_1_final\");",
									"",
									"    pm.expect(periodo_1_final_response).eql(periodo_1_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Dia de Recolhimento \", function () {",
									"    var periodo_1_recolhimento_response = jsonData.result.items[0].rec_periodo_1_dia;",
									"    var periodo_1_recolhimento_request = pm.environment.get(\"rec_periodo_1_dia\");",
									"",
									"    pm.expect(periodo_1_recolhimento_response).eql(periodo_1_recolhimento_request);",
									"});",
									"",
									"//Período 2 -------------------------------------------------------------------------",
									"",
									"pm.test(\"Insere Período 2 Início\", function () {",
									"    var periodo_2_inicio_response = jsonData.result.items[0].rec_periodo_2_inicio;",
									"    var periodo_2_inicio_request = pm.environment.get(\"rec_periodo_2_inicio\");",
									"",
									"    pm.expect(periodo_2_inicio_response).eql(periodo_2_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Final\", function () {",
									"    var periodo_2_final_response = jsonData.result.items[0].rec_periodo_2_final;",
									"    var periodo_2_final_request = pm.environment.get(\"rec_periodo_2_final\");",
									"",
									"    pm.expect(periodo_2_final_response).eql(periodo_2_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Dia de Recolhimento \", function () {",
									"    var periodo_2_recolhimento_response = jsonData.result.items[0].rec_periodo_2_dia;",
									"    var periodo_2_recolhimento_request = pm.environment.get(\"rec_periodo_2_dia\");",
									"",
									"    pm.expect(periodo_2_recolhimento_response).eql(periodo_2_recolhimento_request);",
									"});",
									"",
									"// ===================================================================================",
									"",
									"pm.test(\"Insere Dia de Recolhimento em caso de dia não útil\", function () {",
									"    var recolhimento_dia_nao_util_response = jsonData.result.items[0].rec_caso_dia_nao_util;",
									"    var recolhimento_dia_nao_util_request = pm.environment.get(\"dia_nao_util\");",
									"",
									"    pm.expect(recolhimento_dia_nao_util_response).eql(recolhimento_dia_nao_util_request);",
									"});",
									"",
									"",
									"//Checkbox",
									"pm.test(\"Insere Consideração de Pedágio Base Cálculo\", function () {",
									"    var pedagio_base_calc_response = jsonData.result.items[0].considera_pedagio_base_calc;",
									"    var pedagio_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(pedagio_base_calc_response).eql(pedagio_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Redução Base Cálculo\", function () {",
									"    var reducao_base_calc_response = jsonData.result.items[0].aplica_reducao_base_calc;",
									"    var reducao_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(reducao_base_calc_response).eql(reducao_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Base Cálculo\", function () {",
									"    var icms_base_calc_response = jsonData.result.items[0].considera_icms_base_calc;",
									"    var icms_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_base_calc_response).eql(icms_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Substituto Base Cálculo\", function () {",
									"    var icms_sbst_base_calc_response = jsonData.result.items[0].considera_icms_st_base_calc;",
									"    var icms_sbst_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_sbst_base_calc_response).eql(icms_sbst_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere CST\", function () {",
									"    var cst_response = jsonData.result.items[0].altera_cst;",
									"    var cst_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(cst_response).eql(cst_request);",
									"});",
									"",
									"//==============================================================================================="
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM A - NF",
			"item": [
				{
					"name": "M220 - manipulaMotorista NF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3c0c2c7-83e6-443c-a325-b4023228188a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a81d510a-ac41-4714-9f99-dee020267fac",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "533ae0f4-5274-4839-abfe-c13fad637303",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "915f2ecc-cd9e-4fad-8c79-012c3279e19c",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    pm.environment.set(\"alt_modalidade\", modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee103f30-1096-494d-8b36-cba99be274ea",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cf5c555-593c-46e8-a28a-ce7db03221f8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "723f1747-4700-48c8-be33-4b309f74b4e1",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cee19eb2-15ea-4db2-90b8-600f7db28439",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d225060-b8f9-431a-908d-0ac47eecd9ae",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "80e8dd5e-1f9a-4657-9aa4-ea6a57bcbc79",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 5;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\", \n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ef6d4a6-6773-4463-bced-365a5e0e31bb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2facaca3-141b-437a-bea3-7602f80b47cf",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f586303-394e-403c-a35b-c13452d24686",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1d8b1b69-8568-4093-8cc5-6aa4a5ee64e6",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94b5ce68-065c-49eb-b88e-10feceb05c44",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6964f23-124f-4f4a-a292-48632db5fbdf",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "362d17c9-9ca5-4d3c-902d-1136745b1542",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6d403c4-98ca-4f35-8f42-4d29d029f256",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "293738bc-1df2-4eb9-9ed6-9a11c7c700a3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48578ce5-2da8-46b2-99b6-4d47c0af27fb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "310b9e02-e892-4f61-9b01-66b1f802e1e1",
								"exec": [
									"pm.test(\"Gerar cartão frete\", function (){",
									"    var num_cartao = Math.round(Math.random() * 35) + 15645;",
									"    var num_cartao_aux = Math.round(Math.random() * 10) + 365484;",
									"    var num_cartao_frete = num_cartao+num_cartao_aux;",
									"    pm.environment.set(\"num_cartao_frete\", num_cartao_frete);",
									"});",
									"",
									"pm.test(\"Gerar cartão pedágio\", function (){",
									"    var num_cartao = Math.round(Math.random() * 55) + 15645;",
									"    var num_cartao_aux = Math.round(Math.random() * 22) + 321564;",
									"    var num_cartao_pedagio = num_cartao+num_cartao_aux;",
									"    pm.environment.set(\"num_cartao_pedagio\", num_cartao_pedagio);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30589652-e547-4f64-a055-e336e489fcbc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8d12def-f033-4b87-bf51-d0338ff67998",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9c496fd8-9512-4d6d-9d7c-a7311d91a95a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c2ffb30-6355-476a-84c0-a281bf67f6ad",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6dc32ef-97fc-44a1-a189-1f09d43ede90",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "598529d9-8ea9-4d8b-8801-37e84b1802b2",
								"exec": [
									"pm.test(\"Gerar Informações Fiscais\", function() {",
									"    var modelo = '01';",
									"    var serie = 1;",
									"    var sub_serie = 1;",
									"    pm.environment.set(\"modelo\", modelo);",
									"    pm.environment.set(\"serie\", serie);",
									"    pm.environment.set(\"sub_serie\", sub_serie);",
									"});",
									"",
									"pm.test(\"Gerar Peso\", function() {",
									"    var peso;",
									"    pm.environment.set(\"peso\", 8000);",
									"});",
									"",
									"pm.test(\"Gerar Informações Dimensões\", function() {",
									"    pm.environment.set(\"altura\", 2.4);",
									"    pm.environment.set(\"largura\", 2.4);",
									"    pm.environment.set(\"comprimento\", 14.4);",
									"    pm.environment.set(\"cubagem\", 30);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "10f027a2-2211-4ac9-93d9-0c6961a43bdb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nf\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{pedido_id}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": \"\",\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 0\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ea6cfd8-04db-426e-9da3-f5c63380d01f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].solicitacoes[0].data_carregamento_fim;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].solicitacoes[0].data_entrega_inicio;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Verificação das inserções Nota Fiscal",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"pedido_id\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere CFOP\", function () {",
									"    var cfop_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cfop;",
									"    var cfop_request = pm.environment.get(\"cfop_id\");",
									"    cfop_request = ''+cfop_request;",
									"",
									"    pm.expect(cfop_response).eql(cfop_request);",
									"});",
									"",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 0;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"    ",
									"    var uf_imposto = jsonData.result.viagem[0].uf;",
									"    pm.environment.set(\"uf_imposto\", uf_imposto);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5e030486-9be8-4375-b1ff-fc821cd12391",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc13cc1b-4b8f-473c-b6fc-17e579494e61",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a13fcab5-e772-4a46-a5d8-6a6551640b3c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95386249-f82e-4c8a-aa94-23a38dca3d0a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Obter Id Organizacional\", function (){",
									"    var organizacional_id = jsonData.result.gerais.ccustogerencial.itens[0].organizacional_id;",
									"    pm.environment.set(\"organizacional_id\", organizacional_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6b93cd21-cee5-4d62-8220-a3bba3c3d73f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5ca05d78-635b-43a2-b5aa-2bd5243548f8",
								"exec": [
									"//Valores emissão de CTE",
									"pm.environment.set(\"valor_frete\", 5000);",
									"",
									"pm.environment.set(\"valor_pedagio\", 1000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f77f9bf2-8284-49d6-9e4e-200198cf5f00",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71c28239-0490-4208-94c8-3394ef1be4ce",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "17a017f3-baf5-48b1-a8c7-c49576078eca",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fae40517-3446-4a69-8a7e-eee18b541ccd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "56fe1909-8602-49d5-aa81-71a3fbc17646",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d000f425-87b3-4832-b829-c7c117d3662c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fe41d77e-992d-4d35-b6c6-0be8dba93642",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM B - NF OUTROS",
			"item": [
				{
					"name": "M220 - manipulaMotorista Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b865a0bf-5816-425b-9ddc-3719b5cd8c3e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bb0b6f0f-ab4a-4657-9896-6b6814692202",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41c6be12-d71e-4f91-893d-88bc90d0fa22",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1af674da-9a15-48da-bb9c-b09f779c1587",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "013cfaa9-44c9-45f0-ada6-00f7a6023a0f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc627545-ae5e-4125-930b-3f0302a501bd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "32efe5d6-f246-4292-ae51-9d42aab7de7e",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "917a263e-6173-4735-8b6b-ac50f1f8d2d2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f699e65a-b245-4b26-9f15-8047f30751b7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d11d0808-4cd0-48fd-b9b9-3535fd90c7a0",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67450939-7fc8-4e0e-8807-23eceb3ff4f2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d844d627-8e5c-4cc0-a662-ce1f6da0646c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b24a386a-3c37-4f12-a83b-01c41bd8b8ca",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ae5bf854-e5db-415b-88cd-86035c6cfef6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81446533-2191-4e22-af9f-9b64b22f8846",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2b6efca5-94a8-48e7-a5dd-d5826988fcbb",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed5c270f-e6a4-4e73-97d2-cfcda15c150b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fea875ac-e89c-45cf-b7bd-f14250462756",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "105db0ca-9592-4cfa-b648-3f35bafeff04",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3472880-a273-4f8d-b830-4971daf9b51a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7430ab48-b4c5-4a43-adfb-1a51932c234c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de7190ff-a637-4d9c-8eb1-ccc2f99ce664",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "821fe5e5-ec79-4a37-ab67-823751fcf0e2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88801bb5-425c-4276-b160-49a758ada118",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5dd0536-cb56-456d-9c50-16624768d1c2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0bfafee-2c2f-496e-ac1c-3f53cd76f18f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalOutros",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "751500b7-5d35-4b77-a400-f8e279bd177a",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //Descrição",
									"    var desc_viagem = \"Teste NF\";",
									"    pm.environment.set(\"desc_viagem\", desc_viagem);",
									"    ",
									"    //número NF",
									"    var num_nf_outro = pm.environment.get(\"pedido_id\");",
									"    num_nf_outro += 1;",
									"    pm.environment.set(\"num_nf_outro\", num_nf_outro);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2dc13289-a75c-4c6a-8be7-76973b60731d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nf_outros\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nf_outro}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"valor_total\": \"{{valor_min}}\", \n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"descricao\": \"{{desc_viagem}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 2\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalOutros",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdded3d2-4ca2-4246-a30d-d47970344c71",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Outros                                   |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nf_outro\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = \"U\";",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 2;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6fbba824-2940-430b-8abe-46b49faa69b5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "065c88c4-4873-457b-893e-36b8e1449d16",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b9610d73-9b14-45ab-aaff-0bcd8f7854cf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NF - Outros",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ecbe72d-ef82-4568-9962-6e4a14a1227f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf_outros}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a103d0d-9e95-4e00-b0c9-7c9944ebb851",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67cacd81-5500-437a-a8b3-86d15eeb4387",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf_outros}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab2898d1-f481-4c12-a38f-110033308648",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "79d5750e-4665-4035-829a-accecbfeb317",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf_outros}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8050d883-8ee3-4727-829b-0abd0409b920",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6d36fa80-3a09-423a-88c8-ef67f93cd183",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "db5fb2e0-f390-4668-a9cd-a6c7153cb2f4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ec49c7e7-2465-4985-b8dc-0329bd6dfd29",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM C - NF XML",
			"item": [
				{
					"name": "M220 - manipulaMotorista Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63285c99-28a0-447b-83b3-648d66a7729e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4a12d50-d29e-4895-b3db-4a604d8b4888",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cf24fcd-3a28-41c2-988b-ddf7a89695ac",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cb350d40-9f78-47f6-bbd0-e4f127c9303e",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28b7c7b0-9513-42b2-815d-4c9f9df5e08b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d675479-dde3-485a-b9ef-27775873789c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "94e3898b-8dc5-4dd3-a803-9f17ea3918f0",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "469aa3de-1f3b-4921-b2ae-4f0604132ca7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78315b9-245b-4e99-b01e-b2d9ce978c0d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "72356b9a-4fd8-45f8-bf3b-003cf76cde3c",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48924f3a-1a9c-4e40-bcc3-bebe08ad2f7d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3eb9bed3-e03b-433b-901f-cd891d75895b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "68ccf55c-3464-4636-ae83-2ab8c158e871",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0260d9e1-1a7a-4420-ae93-98a95386a6db",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3295475d-616c-4af6-bd5d-ee6d6e211095",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c706692f-d69a-41b6-8274-7c78cf7a7850",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1cf4373-16a2-4767-8ad6-6aeb7b85910e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4d4458d-bbab-4146-8330-3684b54b906d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d61c34a5-54d5-4d8b-ab3c-0dc9cc8d5e92",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45fb4506-4924-4eac-bcaf-2b0937bde33a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e89cf8d-cfc3-401f-8de5-12cd92b089a8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7347bc2e-ad1e-4132-9a7e-6754e7837c7c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1f12522-e489-48aa-b645-fb2cfdda57cb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76a40721-c5d9-487f-8805-c0973d8453a0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c8d9c02-e0d3-464d-8894-2515c0d83776",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89a43ecf-20cb-4ad5-99e1-72ec91de0980",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f47cc3c9-8ffd-438f-8765-7c42aa3116ea",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var numero_nfe_xml = jsonData.result.params.numero;",
									"    pm.environment.set(\"numero_nfe_xml\", numero_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var serie_nfe_xml = jsonData.result.params.serie;",
									"    pm.environment.set(\"serie_nfe_xml\", serie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Data Emissão NFe\", function () {",
									"    var data_emissao_nfe_xml = jsonData.result.params.data_emissao;",
									"    pm.environment.set(\"data_emissao_nfe_xml\", data_emissao_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml\", cod_end_remetente_xml);",
									"});",
									"",
									"pm.test(\"Obter Destinatário NFe\", function () {",
									"    var cod_destinatario_xml = jsonData.result.params.cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario_xml\", cod_destinatario_xml);",
									"    ",
									"    var cod_end_destinatario_xml = jsonData.result.params.endereco_destinatario[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_destinatario_xml\", cod_end_destinatario_xml);",
									"});",
									"",
									"pm.test(\"Obter Modelo NFe\", function () {",
									"    var modelo_xml = jsonData.result.params.modelo;",
									"    pm.environment.set(\"modelo_xml\", modelo_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor NFe\", function () {",
									"    var valor_nfe_xml = jsonData.result.params.valor;",
									"    pm.environment.set(\"valor_nfe_xml\", valor_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor Segurado NFe\", function () {",
									"    var valor_seg_nfe_xml = jsonData.result.params.valor_segurado;",
									"    pm.environment.set(\"valor_seg_nfe_xml\", valor_seg_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número Espécie NFe\", function () {",
									"    var num_especie_nfe_xml = jsonData.result.params.num_especie;",
									"    pm.environment.set(\"num_especie_nfe_xml\", num_especie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter CFOP NFe\", function () {",
									"    var cfop_nfe_xml = jsonData.result.params.cfop;",
									"    pm.environment.set(\"cfop_nfe_xml\", cfop_nfe_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "357ae345-0cdb-4704-998c-6ca8fbd1854d",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xml\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xml}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNFeXML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0782c764-8319-47fa-a2dc-e0bc5a073436",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 2;",
									"    pm.environment.set(\"num_nfe\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"52191011325194000111550010000512201703935134\";",
									"    pm.environment.set(\"chave\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cfd4deea-cab3-45d9-ae8a-6101560fabeb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nf_xml\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{numero_nfe_xml}}\",\n                \"data_emissao\": \"{{data_emissao_nfe_xml}}\",\n                \"modelo\": \"{{modelo_xml}}\",\n                \"serie\": \"{{serie_nfe_xml}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_nfe_xml}}\", \n                \"valor_segurado\": \"{{valor_seg_nfe_xml}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_nfe_xml}}\",\n                \"chave_acesso_nfe\": \"{{chave_xml}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNFeXML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d282ca4-b575-43e5-94c8-9e1ecfb313b6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"// ============================================================================================================",
									"// |                         Verificação das inserções Nota Fiscal Eletrônica XML                             |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"numero_nfe_xml\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Chave Acesso NFe\", function () {",
									"    var chave_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_request = pm.environment.get(\"chave_xml\");",
									"",
									"    pm.expect(chave_response).eql(chave_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão\", function () {",
									"    var data_emissao_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].data_emissao;",
									"    var data_emissao_request = pm.environment.get(\"data_emissao_nfe_xml\");",
									"",
									"    pm.expect(data_emissao_response).eql(data_emissao_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_xml\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie_nfe_xml\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_nfe_xml\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_seg_nfe_xml\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere CFOP\", function () {",
									"    var cfop_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cfop;",
									"    var cfop_request = pm.environment.get(\"cfop_nfe_xml\");",
									"    cfop_request = ''+cfop_request;",
									"",
									"    pm.expect(cfop_response).eql(cfop_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1f5f5d1-0ac1-46a9-bbd2-8195a3fafb84",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "de2931c8-b0b0-42c1-b6aa-8ce3217a80cd",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NF - XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07182d29-6a49-4253-81df-634353315e47",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6e689007-4ec8-4a9f-bf75-62b489b244e9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf_xml}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5dec29b-c119-4885-8e0a-2a3777bfda37",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bdd61727-0cde-4051-996e-ef7ca04bc4d8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf_xml}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": \"{{id_centro_custo}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ec501a2-552e-4df7-9051-44563c0c36d7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0f4aebea-61ee-41b1-86e7-762119320db5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf_xml}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": \"{{id_centro_custo}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37c9d8c4-ca52-42aa-87f8-da3b220cee24",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "51f6aa24-b2a5-4e14-94e4-ff5b7f9de300",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3f7ad789-dfda-4a4f-8173-5394a49835a8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c55e4928-c88b-4909-9f63-6e8b165f873b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM D - NFE AGRUPADA",
			"item": [
				{
					"name": "M220 - manipulaMotorista NFe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d9c84a0-e231-418d-84d6-73ac000ae5e5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "56213c5f-0193-47cf-9297-ec2e55f3edf3",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad6a0b48-9baa-4434-b3dc-9043c8501e9b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "18bad01f-b1c1-47e3-95ea-7066cc189fab",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8935e14e-b1b4-4730-abce-430414bb4b4c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c1f6b13-ab55-4ee1-865e-325668cd9f7e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b514fd7-d86a-45e3-8ac2-ef8f4fc09a3c",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd2793ac-d82b-4a38-9215-0768976951c4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "761599d1-d1ed-4706-a49c-5c0746cf5ae8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ec59e8d8-19e0-4806-90c6-809b8fe6f41c",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37ec8da5-c21b-4df4-b2b8-82cec7568ccc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bca2dce-b736-45ac-8197-852fc4d95344",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ef7cd3a8-8371-49c5-a863-f7dc2f2d4e06",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "81c9a29b-66e7-4fbe-822d-369553942197",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7a71d98-8d5b-432e-a770-66f549876ca3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id_nfe\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ec80b29d-397a-4423-96e6-8ccc8b52a7db",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a88f327-8385-4810-aebc-76e889dbd734",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7e6c551-32da-4a42-93e9-60988a5295ba",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b0d64f1-02fa-4a0c-9772-24aecfd01415",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc0d660c-8f2b-4255-9488-84b9f501c81a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f2fdae8-13c1-44fa-b533-4d5f57e43baf",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9047389d-a75a-4f4c-86b3-bf9fc4f5f915",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "062dd43d-25e9-4e5d-a2a5-e5a8d8245318",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f36c256-eb92-444a-99b9-b3c2f91d5377",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daead618-fbd6-4d6a-afce-2b76d0e50065",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff23dec8-6253-40b6-8e49-dea93406bb19",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "be8a5896-df39-425f-aefa-fd01e2a4224a",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    ",
									"    pm.environment.set(\"cubagem\", 45);",
									"    ",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 2;",
									"    pm.environment.set(\"num_nfe\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"52191011325194000111550010000512201703935134\";",
									"    pm.environment.set(\"chave\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a077e254-d38f-4297-96ca-63684f4bebcd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nfe\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99987859-bafc-4290-820e-18ad9d59d84b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie; ",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5c55f749-2ddc-4162-bb54-e3903e38d8a5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ac4e77d-f134-425c-be96-c04ce2c854d5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml_nf2\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml_nf2\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml_nf2\", cod_end_remetente_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "493c8226-9dc3-49c2-97d0-66a0ce796a12",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xmlNF2\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xmlNF2}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7bbf735f-9e3a-4fe5-9880-21a964f01c85",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 4;",
									"    pm.environment.set(\"num_nfe2\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"41200207031916000158550010000009111009331856\";",
									"    pm.environment.set(\"chave_2\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2f85ebb8-646f-4dd0-91dc-396bd1a78f96",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe2}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave_xml_nf2}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml_nf2}}\", \n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml_nf2}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb83f921-0fd7-447a-ad89-c878999a1da7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3634b138-53fe-4938-9a5f-2d7536ec05dc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f025137d-8154-43d2-bc8f-1cf4382e1d2b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "493fac8b-73d2-4367-8329-ae76c106d999",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NFe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2220f3c-be46-4a3a-bfe8-50e564f5586d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nfe}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8c9d7fd-110a-433d-add5-c5c34d2a79e5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7f3412da-e559-448f-a60a-f882f9d7a115",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "acba2efc-32b1-4550-a3c4-7818abae0159",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d508dc29-5033-405f-aba0-2ad0a7cc31c9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2ca822e-c596-4069-ab22-66776987a5cc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27e9be14-3c76-4018-a8dd-eb99c4d7fb3b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dae2404d-de55-48d6-9647-bc4c527c875c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4d9c426d-76c3-450f-9a09-8f4aad57a480",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM E - NFE NAO-AGRUPADA",
			"item": [
				{
					"name": "M220 - manipulaMotorista E",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "529338c3-67ab-41d0-ab17-36c6c45a28cb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e25153e0-71f2-4064-8cd8-500b226c52e8",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e76bdfa2-32bd-4d31-b38e-897f98a188b8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5cd59d16-b879-4bce-9498-5b670c1a5633",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cf0a674-6d54-4de7-a768-9a1d723c2cbb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e9a7254-d3eb-4e72-9840-82f1405c7d0b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2e9fb019-2c60-4e13-bf86-b8d3c3aa9357",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bcd99ef-fc55-40f2-ac82-f5026a178524",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36b48bdd-10a3-458d-8883-37709bdae8cb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e421a175-7faa-450b-81c7-748e762f0a25",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30cdf087-102c-43c4-85d3-1df375a1850f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a24315cf-06fe-489f-8ca4-45ac19a849ac",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9d5757f6-5a89-4e95-a7a6-24fd5898e025",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "73b5adb0-1ff3-40d9-91c4-8fb5295474f4",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5612eebb-cb63-4652-a969-0d2ff6f12e04",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ee1d5263-b7a6-4429-9d4b-bffcef9497e6",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f3c178d-67ff-4b0b-b836-9c9914f8c868",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b0160c3-e627-40be-b891-9b3db7ec8b2e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0bba85ba-7d5b-427e-b593-e7de21fe4f7e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36e67333-5b8f-4f34-899f-fc4eb0aaecef",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd46f8b4-b5e0-4b82-a9e2-e2922923cf4c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3fd1449-c15c-4a9b-ac8e-d31810f2f80e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbf5ef01-af36-4f91-809f-53f652be39de",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a4b80af-1df3-4109-b63e-4536748e2d00",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "528a1beb-4967-4542-a666-546f3904c0be",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62da48d3-8cd3-44df-ab56-ad72c6d6aa94",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "97a9c76a-ae04-427b-9edb-62d57174c518",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 2;",
									"    pm.environment.set(\"num_nfe\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"52191011325194000111550010000512201703935134\";",
									"    pm.environment.set(\"chave\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e6d79c63-5a30-48c3-827a-47ac6feea673",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nfe_nao_agrupada\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7eab6b6-afb4-4490-aedd-ad27ff3cfdd6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fddc298-cc29-4fc7-8718-42469e857548",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b888edef-c77d-468d-93f5-5a2600d32bad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NFe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70674371-2482-49e0-891b-c25bd8ffa5f0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nfe_nao_agrupada}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb6704f8-6fab-4b77-b360-1cef365ccd48",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "901b023e-53b9-4ce3-a0a3-cec04b25c693",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": 336\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10c693f5-35c3-4332-9931-3c130bc50071",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a81f7701-588c-4e4b-b5c6-2e9399133370",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb14bf11-45ae-40a7-a23d-3ef65efe04b8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "decbe85b-8a55-40d3-adcb-c839ff9428cb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "889cc362-d4c8-4d25-a4d1-6919653490d8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5f7f800-feab-4a0e-901a-e27e3836d862",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml_nf2\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml_nf2\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml_nf2\", cod_end_remetente_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d263ddcf-a280-4ad3-a233-400a5de4e129",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xmlNF2\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xmlNF2}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica - 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2a193346-2acc-4858-9f35-3789047f1ff6",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 6;",
									"    pm.environment.set(\"num_nfe_2\", num_nfe);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a9751b2d-9693-4edb-8268-eb1b39800a45",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[1].solicitacao_carga_id;",
									"    if (pm.environment.get(\"sol_carga_nfe_nao_agrupada\") === sol_carga){",
									"        var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"        pm.environment.set(\"sol_carga_nfe_nao_agrupada_2\", sol_carga);",
									"    } else {",
									"        pm.environment.set(\"sol_carga_nfe_nao_agrupada_2\", sol_carga);",
									"    }",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe_2}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave_xml_nf2}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml_nf2}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml_nf2}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica - 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebd84ee4-0841-444f-9dbd-955a195d72d5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"var solicitacoes = jsonData.result.viagem[0].solicitacoes;",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    /*var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"    ",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"    */",
									"    var cod_remetente = [];",
									"    for(let i in solicitacoes){",
									"        cod_remetente.push(solicitacoes[i].participantes.remetente[0].cod_pessoa);",
									"    }",
									"",
									"    pm.expect(pm.environment.get(\"cod_remetente_xml\")).eql(cod_remetente.find(element => element === pm.environment.get(\"cod_remetente_xml\")));",
									"    pm.expect(pm.environment.get(\"cod_remetente_xml_nf2\")).eql(cod_remetente.find(element => element === pm.environment.get(\"cod_remetente_xml_nf2\")));",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    /*var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);*/",
									"",
									"    var cod_end_remetente = [];",
									"    for(let i in solicitacoes){",
									"        cod_end_remetente.push(solicitacoes[i].participantes.remetente[0].endereco[0].cod_endereco);",
									"    }",
									"",
									"    pm.expect(pm.environment.get(\"cod_end_remetente_xml\")).eql(cod_end_remetente.find(element => element === pm.environment.get(\"cod_end_remetente_xml\")));",
									"    pm.expect(pm.environment.get(\"cod_end_remetente_xml_nf2\")).eql(cod_end_remetente.find(element => element === pm.environment.get(\"cod_end_remetente_xml_nf2\")));",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"var numeroNF = [];",
									"for(let i in solicitacoes){",
									"    numeroNF.push(solicitacoes[i].nota_fiscal[0].numero);",
									"}",
									"",
									"var chaveNF = [];",
									"for(let i in solicitacoes){",
									"    chaveNF.push(solicitacoes[i].nota_fiscal[0].chave);",
									"}",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    /*var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);*/",
									"",
									"    pm.expect(pm.environment.get(\"num_nfe\")).eql(numeroNF.find(element => element === pm.environment.get(\"num_nfe\")));",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    /*var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);*/",
									"",
									"    pm.expect(pm.environment.get(\"chave\")).eql(chaveNF.find(element => element === pm.environment.get(\"chave\")));",
									"});",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica 2                             |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    /*var num_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe_2\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);*/",
									"        pm.expect(pm.environment.get(\"num_nfe_2\")).eql(numeroNF.find(element => element === pm.environment.get(\"num_nfe_2\")));",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    /*var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave_xml_nf2\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);*/",
									"    pm.expect(pm.environment.get(\"chave_xml_nf2\")).eql(chaveNF.find(element => element === pm.environment.get(\"chave_xml_nf2\")));",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NFe - 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be64969f-8ddd-4ec1-8a41-152f96ea807e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nfe_nao_agrupada_2}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac1230b1-18c8-486c-8a26-c57a879626d9",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c3a1643-2b6b-46ee-bd48-59570383725f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada_2}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": 336\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "015bf8ad-8700-4e39-8c79-4825d71b45aa",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1ad36321-6117-40c9-a612-8310deb48599",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada_2}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "282b8dab-8119-449c-afe1-561eeff5327d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cf52ae39-f392-4626-b99b-7660776eb7be",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "55fdaaa3-9e93-4f79-be69-2dd8f9158f43",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "22400b60-3cff-4404-87c1-ef84f4b08b2a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "45c3b38c-c308-49ce-a753-4e7825f23dcc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a0fe5947-224b-442b-8a8b-fd3e86c6ae72",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}