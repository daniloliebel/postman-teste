{
	"info": {
		"_postman_id": "38b0c90c-f8fa-4218-82b1-a2178ae92f46",
		"name": "Panorama (o04b28) Copy",
		"description": "Padrões:\n- Aba Authorization: \n\tType -> \"No Auth\".\n- Aba Headers: \n\t- Key: Content-Type / Value: application/json\n\t- Key: Authorization / Value: token\n- Observação: Validação de token será necessário apenas para requisições posteriores ao Logon.\n- Para todas as requisições, verificar com testes se o código de resposta é [200], se há retorno de informações e tempo de performance.\n\nLOGON:\n- Setar URL em uma variável de ambiente, para ser usada nas outras requisições.\n- Logar com usuário e senha previamente cadastrados.\n- Verificar se ocorreu logon com sucesso.\n- Setar valor do token gerado em uma variável de ambiente para servir de autorização para outras requisições.\n\nVEICULO:\n- Testes de métodos auxiliares. \n- Para o teste será realizada a inserção e edição completa.\n\n\t- getMunicipio\n\t- getMarca\n\t- getModelo\n\t- getAgrupamentoVeiculo\n\t- getTipoCarroceriaVeiculo\n\n- Testes:\n- Inserção completa: \n\t- Com renavam correto.\n\t- Com renavam incorreto.\n\t- Verificar após a inserção se realmente os dados foram inseridos e gravados para todos os campos.\n\n- Edição completa:\n\t- Alterar todos os campos.\n\t- Verificar após a edição se realmente os dados foram editados e gravados para todos os campos.\n\nEntidade [PESSOAS]\n\nMOTORISTA/PRESTADOR DE SERVIÇOS/PARTICIPANTE/PESSOA ESTRANGEIRA\n- Testes de métodos auxiliares(necessário apenas um teste). \n- Para o teste será realizada a inserção e edição completa.\n- Motorista:\n\t- getNacionalidade\n\t- getTelefoneTipo\n\t- getEmailTipo\n\t- loadDadosPessoas\n\t- getBanco\n\t- getAgencia\n- Prestador de serviços:\n\t- getProprietarioLista\n\t- getAtividadeFiscal\n\t- getCNAE\n- Participante:\n\t- getClienteLista\n\t- getRegimeTributario\n\t- getTipoLucro\n\t- getPessoaDados\n\t- getCEP\n\nTestes:\n- Inserção completa:\n- Verificar após a inserção se realmente os dados foram inseridos e gravados para todos os campos.\n- Contato\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n- Email\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n- Endereço\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n- Conta Bancária\n\t- Mais de um\n\t- Verificar se ambos foram inseridos\n\n- Para todos os itens acima:\n\t- Criar casos de teste que se tente inserir registros duplicados para verificar se o sistema bloqueia.\n\t- 2 contatos iguais\n\t- 2 emails iguais\n\t- 2 endereços iguais\n\t- 2 contas bancárias iguais\n\n- Edição completa:\n\t- Alterar todos os campos, inclusive para os que foram inseridos dois registros.\n\t- Verificar após a edição se realmente os dados foram editados e gravados para todos os campos.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "LOGON",
			"item": [
				{
					"name": "LOGON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "627a44a5-4b58-45e6-a4cb-0b5fff1011ac",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "00daa971-1a7c-4739-a3c4-553d47680d50",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Obter Token\", function() {",
									"    var jsonData = pm.response.json();",
									"    var token = jsonData.result.token;",
									"    pm.expect(token).not.eql(null);",
									"",
									"    pm.environment.set(\"token\", token);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"if (pm.response.code !== 200) pm.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"LOGON\",\r\n    \"operation\": \"LOGON\",\r\n    \"parameters\": {\r\n        \"username\": \"kmm_desenv\",\r\n        \"password\": \"Kmm$$2020\",\r\n        \"cod_gestao\": 90480\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2849104d-144e-4d58-9bbd-776ffc6d9486",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "316f0e8f-8f15-4cdb-a2a4-7c714c1f1cad",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VEICULO",
			"item": [
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ae7007e7-bdb3-45cd-a3d0-b28b1da89ebe",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "52fae963-774c-4d7f-ac4e-af6a04e5377e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fab5819d-33ac-4a9f-a973-92570659e51c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Município, UF e CEP",
									"pm.test(\"Obter Municipio\", function () {",
									"    var municipio_id = jsonData.result.items[0].municipio_id;",
									"    var alt_municipio_id = jsonData.result.items[8].municipio_id;",
									"    var uf = jsonData.result.items[0].uf;",
									"    var alt_uf = jsonData.result.items[8].uf;",
									"    var cep = jsonData.result.items[0].cep;",
									"    var cep_1 = jsonData.result.items[8].cep;",
									"    var alt_cep = jsonData.result.items[9].cep;",
									"    ",
									"    pm.environment.set(\"municipio_id\", municipio_id);",
									"    pm.environment.set(\"uf\", uf);",
									"    ",
									"    pm.environment.set(\"alt_municipio_id\", alt_municipio_id);",
									"    pm.environment.set(\"alt_uf\", alt_uf);",
									"    ",
									"    pm.environment.set(\"cep\", cep);",
									"    pm.environment.set(\"cep_1\", cep_1);",
									"    pm.environment.set(\"alt_cep\", alt_cep);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b78f9166-d8d8-4448-8810-7234e94fa987",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"a%f\"\n                }\n            ]\n        },\n        \"paging\": {\n            \"page\": 0,\n            \"size\": 10\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getModeloVeiculo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a369e8d-55da-439c-aab2-a689e2205b99",
								"exec": [
									"//variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Obter Marca\", function () {",
									"    var marca_id = jsonData.result.items[0].marca_id;",
									"    var alt_marca_id = jsonData.result.items[1].marca_id;",
									"    ",
									"    pm.environment.set(\"marca_id\", marca_id);",
									"    pm.environment.set(\"alt_marca_id\", alt_marca_id);",
									"});",
									"",
									"pm.test(\"Obter Modelo\", function () {",
									"    var modelo_id = jsonData.result.items[0].modelo_id;",
									"    var alt_modelo_id = jsonData.result.items[1].modelo_id;",
									"    ",
									"    pm.environment.set(\"modelo_id\", modelo_id);",
									"    pm.environment.set(\"alt_modelo_id\", alt_modelo_id);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "52bdfa2e-52fa-4f55-b9e6-e9cbba30c39d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getModeloVeiculo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"modelo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"modelo\",\n                    \"operator\": \"contains\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getAgrupamentoVeiculo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50c32835-768d-4b47-9bb5-a887725a3692",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Obter Agrupamento\", function () {",
									"    var agrupamento_id = jsonData.result.items.find(x => x.agrupamento == \"Cavalo Mecânico Terceiro\").agrupamento_id;",
									"    var alt_agrupamento_id = jsonData.result.items.find(x => x.agrupamento == \"Cavalo Mecânico Terceiro\").agrupamento_id;",
									"    ",
									"    pm.environment.set(\"agrupamento_id\", agrupamento_id);",
									"    pm.environment.set(\"alt_agrupamento_id\", alt_agrupamento_id);",
									"});",
									"",
									"pm.test(\"Obter Agrupamento Reboque\", function () {",
									"    var agrupamento_id_reboque = jsonData.result.items.find(x => x.agrupamento == \"Semi-Reboque Terceiro\").agrupamento_id;",
									"    ",
									"    pm.environment.set(\"agrupamento_id_reboque\", agrupamento_id_reboque);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getAgrupamentoVeiculo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"agrupamento\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"agrupamento\",\n                    \"operator\": \"contains\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTipoCarroceriaVeiculo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "884af334-4b37-4a61-9505-ee4ae4039211",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Obter Carroceria\", function () {",
									"    var carroceria_id = jsonData.result.items.find(x => x.carroceria == \"Qa - Cavalo Mecânico Terceiro\").tipo_carroceria_id;",
									"    var alt_carroceria_id = jsonData.result.items.find(x => x.carroceria == \"Qa - Cavalo Mecânico Terceiro\").tipo_carroceria_id;",
									"    ",
									"    pm.environment.set(\"carroceria_id\", carroceria_id);",
									"    pm.environment.set(\"alt_carroceria_id\", alt_carroceria_id);",
									"});",
									"",
									"pm.test(\"Obter Carroceria Reboque\", function () {",
									"    var carroceria_id_reboque = jsonData.result.items.find(x => x.carroceria == \"Qa - Semi Reboque - 3 Eixos (Terceiro)\").tipo_carroceria_id;",
									"    pm.environment.set(\"carroceria_id_reboque\", carroceria_id_reboque);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eb7c3eb1-bfd0-4036-a23a-a491f1b2db18",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTipoCarroceriaVeiculo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"carroceria\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"carroceria\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dd9619e4-350c-4687-9110-e2ba3dd4a5a1",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d3bd81f9-0abf-4998-855c-20cff0d90c1f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220\",\r\n    \"operation\": \"insVeiculo\",\r\n    \"parameters\": {\r\n        \"veiculo_id\": null,\r\n        \"placa\": \"{{placa}}\",\r\n        \"uf\": \"{{uf}}\",\r\n        \"municipio_id\": \"{{municipio_id}}\",\r\n        \"ano\": \"{{ano_fab}}\",\r\n        \"chassis\": \"{{chassis}}\",\r\n        \"renavam\": \"{{renavam}}\",\r\n        \"modalidade\": \"{{modalidade}}\",\r\n        \"cor\": \"{{cor}}\",\r\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\r\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\r\n        \"marca_id\": \"{{marca_id}}\",\r\n        \"modelo_id\": \"{{modelo_id}}\",\r\n        \"volume\": \"\",\r\n        \"peso\": \"\",\r\n        \"tara\": \"\",\r\n        \"proprietario\": []\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f40a81a-4394-4838-99c6-ec303ec0f0c6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altVeiculo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c56742c1-90b4-4baa-b452-98f581b7a350",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5c516cfc-aa9f-4088-9a93-8b9216c91bfb",
								"exec": [
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id}}\",\n        \"placa\": \"{{placa_id}}\",\n        \"uf\": \"{{alt_uf}}\",\n        \"municipio_id\": \"{{alt_municipio_id}}\",\n        \"ano\": \"{{alt_ano_fab}}\",\n        \"chassis\": \"{{alt_chassis}}\",\n        \"renavam\": \"{{alt_renavam}}\",\n        \"modalidade\": \"{{alt_modalidade}}\",\n        \"cor\": \"{{alt_cor}}\",\n        \"tipo_carroceria_id\": \"{{alt_carroceria_id}}\",\n        \"agrupamento_id\": \"\",\n        \"marca_id\": \"{{alt_marca_id}}\",\n        \"modelo_id\": \"{{alt_modelo_id}}\",\n        \"volume\": \"0\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoAlterado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40a797d5-ebaf-4f4c-95e2-11a6c3c7a034",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Editar Municipio\", function () {",
									"    var municipio_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_request = pm.environment.get(\"alt_municipio_id\"); ",
									"    ",
									"    pm.expect(municipio_response).eql(municipio_request);",
									"});",
									"",
									"pm.test(\"Editar Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"alt_ano_fab\"); ",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"}); ",
									"",
									"pm.test(\"Editar Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"alt_chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Editar Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"alt_cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Editar Carroceria\", function () {",
									"    var carroceria_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_request = pm.environment.get(\"alt_carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_response).eql(carroceria_request);",
									"});",
									"",
									"pm.test(\"Editar Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"alt_renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Editar Marca\", function () {",
									"    var marca_response = jsonData.result.items[0].marca_id;",
									"    var marca_request = pm.environment.get(\"alt_marca_id\");",
									"    ",
									"    pm.expect(marca_response).eql(marca_request);",
									"});",
									"",
									"pm.test(\"Editar Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"alt_modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2502cb90-f2f2-4f88-baee-0095ecc7cd42",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e413c55a-e887-4cd2-9f9a-456a683237c7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "05d740b0-98b8-498e-967d-9ffc6cbc85a4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MOTORISTA",
			"item": [
				{
					"name": "M220 - getNacionalidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f133c3ab-3130-47be-bec7-236958956bae",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Nacionalidade\", function () {",
									"    var nacionalidade_id = jsonData.result.items[0].cod_nacionalidade;",
									"    var nacionalidade_id_edicao = jsonData.result.items[1].cod_nacionalidade;",
									"    ",
									"    pm.environment.set(\"nacionalidade_id\", nacionalidade_id);",
									"    pm.environment.set(\"nacionalidade_id_edicao\", nacionalidade_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getNacionalidade\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"nacionalidade\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"nacionalidade\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220  - getTelefoneTipo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df1f9ce5-5a72-4f6d-9480-5d4488453d43",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Telefone\", function () {",
									"    var tipo_fone = jsonData.result.items[0].telefone_tipo_id;",
									"    var alt_tipo_fone = jsonData.result.items[2].telefone_tipo_id;",
									"    ",
									"    pm.environment.set(\"tipo_fone_id\", tipo_fone); ",
									"    pm.environment.set(\"alt_tipo_fone_id\", alt_tipo_fone);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTelefoneTipo\",\n    \"parameters\": {\n    \t\"telefone_tipo_id\": \"%\"\n    } \n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getEmailTipo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd450b23-712a-451b-81fd-a6f31ed550b5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Email\", function () {",
									"    var email_tipo_id = jsonData.result.items[0].email_tipo_id;",
									"    var alt_email_tipo_id = jsonData.result.items[1].email_tipo_id;",
									"    ",
									"    pm.environment.set(\"email_tipo_id\", email_tipo_id);",
									"    pm.environment.set(\"alt_email_tipo_id\", alt_email_tipo_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getEmailTipo\",\n    \"parameters\": {\n    \t\"email_tipo_id\": \"%\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getAgencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e41fb3dc-6cf6-442c-8c84-b67f7a483387",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Banco/Agência\", function () {",
									"    var banco_id = jsonData.result.items[0].banco_id;",
									"    var agencia_id = jsonData.result.items[0].agencia_id;",
									"    pm.environment.set(\"banco_id\", banco_id);",
									"    pm.environment.set(\"agencia_id\", agencia_id);",
									"    ",
									"    var banco_1_id = jsonData.result.items[1].banco_id;",
									"    var agencia_1_id = jsonData.result.items[1].agencia_id;",
									"    pm.environment.set(\"banco_1_id\", banco_1_id);",
									"    pm.environment.set(\"agencia_1_id\", agencia_1_id);",
									"    ",
									"    //variaveis editar",
									"    var alt_banco_id = jsonData.result.items[2].banco_id;",
									"    var alt_agencia_id = jsonData.result.items[2].agencia_id;",
									"    pm.environment.set(\"alt_banco_id\", alt_banco_id);",
									"    pm.environment.set(\"alt_agencia_id\", alt_agencia_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getAgencia\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"agencia_completa\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"column\": \"%\",\n                    \"operator\": \"equal\"\n                },\n                {\n                    \"value\": \"\",\n                    \"column\": \"agencia_completa\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2686f5b1-c13c-45c1-851d-5f3627045ebd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "14d27c6c-f116-40d3-a379-24779f6c8f85",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 1;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaMotoristaGet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "542a0178-194d-4c88-961d-013dd05d32e6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter CPF Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cnpj_cpf;",
									"    pm.environment.set(\"mantem_cnpj_cpf\", id_pessoa);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_pessoa}}\",\n        \"operation\": \"SELECT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaMotoristaUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "218f187c-400f-4af0-bfc6-bb1fbb2db4e5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"num_pis_edicao\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Editar Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero_edicao\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Editar RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg_edicao\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Editar Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id_edicao\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Naturalidade\", function () {",
									"    var naturalidade_response = jsonData.result.nat_municipio_id;",
									"    var naturalidade_request = pm.environment.get(\"alt_municipio_id\");",
									"    ",
									"    pm.expect(naturalidade_response).eql(naturalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão RG\", function () {",
									"    var data_rg_response = jsonData.result.cart_ident_emissao;",
									"    var data_rg_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_rg_response).eql(data_rg_request);",
									"});",
									"",
									"pm.test(\"Editar Emissor RG\", function () {",
									"    var emissor_rg_response = jsonData.result.cart_ident_orgao;",
									"    var emissor_rg_request = pm.environment.get(\"emissor_rg_edicao\");",
									"    ",
									"    pm.expect(emissor_rg_response).eql(emissor_rg_request);",
									"});",
									"",
									"pm.test(\"Editar UF Emissor RG\", function () {",
									"    var uf_emissao_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_emissao_rg_request = pm.environment.get(\"alt_uf\");",
									"    ",
									"    pm.expect(uf_emissao_rg_response).eql(uf_emissao_rg_request);",
									"});",
									"",
									"//===================================================================",
									"pm.test(\"Editar Número Registro CNH\", function () {",
									"    var cnh_registro_response = jsonData.result.cnh_num_registro;",
									"    var cnh_registro_request = pm.environment.get(\"cnh_registro_edicao\");",
									"",
									"    pm.expect(cnh_registro_response).eql(cnh_registro_request);",
									"});",
									"",
									"pm.test(\"Editar Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh_edicao\");",
									"",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga_edicao\");",
									"",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Data Primeira CNH\", function () {",
									"    var data_primeira_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var data_primeira_cnh_request = pm.environment.get(\"data_antiga_edicao\");",
									"",
									"    pm.expect(data_primeira_cnh_response).eql(data_primeira_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Data Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura_edicao\");",
									"",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Número CNH\", function () {",
									"    var cnh_response = jsonData.result.cnh_numero;",
									"    var cnh_request = pm.environment.get(\"cnh_numero_edicao\");",
									"",
									"    pm.expect(cnh_response).eql(cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Categoria\", function () {",
									"    var categoria_response = jsonData.result.cnh_cod_categoria;",
									"    var categoria_request = pm.environment.get(\"categoria_cnh_edicao\");",
									"",
									"    pm.expect(categoria_response.trim()).eql(categoria_request);",
									"});",
									"",
									"pm.test(\"Editar UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"alt_uf\");",
									"",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Pai CNH\", function () {",
									"    var pai_cnh_response = jsonData.result.nome_pai;",
									"    var pai_cnh_request = pm.environment.get(\"nome_edicao\");",
									"",
									"    pm.expect(pai_cnh_response).eql(pai_cnh_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Mãe CNH\", function () {",
									"    var mae_cnh_response = jsonData.result.nome_mae;",
									"    var mae_cnh_request = pm.environment.get(\"nome_edicao\");",
									"",
									"    pm.expect(mae_cnh_response).eql(mae_cnh_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//======================================================================================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"",
									"//=================================================================================================================================",
									"",
									"pm.test(\"Editar Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).banco_id;",
									"    var banco_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Editar Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).conta;",
									"    pm.environment.set(\"debug_cod\", conta_response);",
									"    var conta_request = pm.environment.get(\"conta_edicao2\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_edicao2\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Editar Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_edicao\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_edicao\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "31e05ed2-3c78-48ce-864a-be51ba631a40",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"cod_pessoa\": \"{{cod_pessoa}}\",\n        \"nat_municipio_id\": \"{{alt_municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id_edicao}}\",\n        \"cnpj_cpf\": \"{{mantem_cnpj_cpf}}\",\n        \"razao_social\": \"{{nome_edicao}}\",\n        \"cod_sexo\": \"{{genero_edicao}}\",\n        \"data_nascimento\": \"{{data_antiga_edicao}}\",\n        \"pis_pasep_nit\": \"{{num_pis_edicao}}\",\n        \"cart_ident_num\": \"{{rg_edicao}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg_edicao}}\",\n        \"cart_ident_uf\": \"{{alt_uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga_edicao}}\",\n        \"cnh_num_registro\": \"{{cnh_registro_edicao}}\",\n        \"cnh_numero\": \"{{cnh_numero_edicao}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh_edicao}}\",\n        \"cnh_uf\": \"{{alt_uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh_edicao}}\",\n        \"cnh_validade\": \"{{data_futura_edicao}}\",\n        \"cnh_data_emissao\": \"{{data_antiga_edicao}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga_edicao}}\",\n        \"nome_mae\": \"{{nome_edicao}}\",\n        \"nome_pai\": \"{{nome_edicao}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_endereco\": \"{{cod_endereco}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_endereco\": \"{{cod_endereco2}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": \"{{cod_telefone}}\",\n                \"operation\": \"UPDATE\",\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": \"\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": \"{{cod_telefone2}}\",\n                \"operation\": \"UPDATE\",\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": \"\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_email\": \"{{cod_email}}\",\n                \"email_id\": \"{{cod_email}}\",\n                \"cod_pessoa\": \"{{cod_pessoa}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"type\": \"\",\n                \"email_proprietario\": \"AGILE\",\n                \"tipo_email\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"cod_email\": \"{{cod_email2}}\",\n                \"email_id\": \"{{cod_email2}}\",\n                \"cod_pessoa\": \"{{cod_pessoa}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"type\": \"\",\n                \"email_proprietario\": \"AGILE\",\n                \"tipo_email\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao2}}\",\n                \"conta_dv\": \"{{dv_edicao2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\",\n                \"cod_conta\": \"{{cod_conta}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao}}\",\n                \"conta_dv\": \"{{dv_edicao}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\",\n                \"cod_conta\": \"{{cod_conta2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PARTICIPANTE",
			"item": [
				{
					"name": "M220 - manipulaClientePF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "763f0119-bdb7-4d1e-b9b5-ed04ccaaa711",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter CPF Participante PF\", function () {",
									"    var cpf_pessoa = jsonData.result.cnpj_cpf;",
									"    pm.environment.set(\"cpf_part_pf\", cpf_pessoa);",
									"});",
									"",
									"",
									"pm.test(\"Obter Código Participante PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pf\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Participante PF\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_participante_pf\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_participante_pf\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone Participante PF\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_participante_pf\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_participante_pf\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço Participante PF\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_participante_pf\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_participante_pf\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf_participante\"); ",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_participante\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var cidade_response = jsonData.result.nat_municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Insere PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_participante\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1486c651-129e-4f22-b206-8248b21b315d",
								"exec": [
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    //Participante",
									"    var cpf_participante = geraCpf();",
									"    var cpf_participante_edicao = geraCpf();",
									"    pm.environment.set(\"cpf_participante\", cpf_participante);",
									"    pm.environment.set(\"cpf_participante_edicao\", cpf_participante_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"ADRIANA\", \"ANA\", \"MARIA\", \"SANDRA\", \"JULIANA\", \"ANTONIO\", \"CARLOS\", \"FRANCISCO\", \"JOAO\", \"JOSE\", \"BRUNA\", \"CAMILA\", \"JESSICA\", \"LETICIA\", \"AMANDA\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\", \"GABRIEL\", \"BERNARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    var aux = Math.round(Math.random() * 13);",
									"    ",
									"    var nome_completo = array_nome[aux] + ' ' + comp_nome[aux] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {//Participante",
									"    var nome_participante = geraNome();",
									"    var nome_participante_edicao = geraNome();",
									"    pm.environment.set(\"nome_participante\", nome_participante);",
									"    pm.environment.set(\"nome_participante_edicao\", nome_participante_edicao);",
									"    ",
									"    var nome_participante_pj = geraNome();",
									"    var nome_participante_pj_edicao = geraNome();",
									"    pm.environment.set(\"nome_participante_pj\", nome_participante_pj);",
									"    pm.environment.set(\"nome_participante_pj_edicao\", nome_participante_pj_edicao);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {//Participante",
									"    var pis_participante = geraPis();",
									"    var pis_participante_edicao = geraPis();",
									"    pm.environment.set(\"pis_participante\", pis_participante);",
									"    pm.environment.set(\"pis_participante_edicao\", pis_participante_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_participante}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"razao_social\": \"{{nome_participante}}\",\n        \"nome_fantasia\": \"\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"pis_pasep_nit\": \"{{pis_participante}}\",\n        \"cod_atividade_fiscal\": \"\",\n        \"cod_regime_tributario\": null,\n        \"tipo_lucro\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClienteUpdatePF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a69361c-0a14-4e61-a8a1-39b62c15a157",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//InsGrupoNegociador",
									"pm.test(\"Obter Código Participante PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pf\", id_pessoa);",
									"});",
									"",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_participante_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero_edicao\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Editar PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_participante_edicao\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Editar Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id_edicao\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Naturalidade\", function () {",
									"    var naturalidade_response = jsonData.result.nat_municipio_id;",
									"    var naturalidade_request = pm.environment.get(\"alt_municipio_id\");",
									"    ",
									"    pm.expect(naturalidade_response).eql(naturalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pf\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pf\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pf\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pf\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//========================================================================================="
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_participante_pf}}\",\n        \"cnpj_cpf\": \"{{cpf_part_pf}}\",\n        \"cod_sexo\": \"{{genero_edicao}}\",\n        \"razao_social\": \"{{nome_participante_edicao}}\",\n        \"data_nascimento\": \"{{data_antiga_edicao}}\",\n        \"nat_municipio_id\": \"{{alt_municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id_edicao}}\",\n        \"pis_pasep_nit\": \"{{pis_participante_edicao}}\",\n        \"cnae\": \"\",\n        \"def_fisica\": 0,\n        \"def_visual\": 0,\n        \"def_reabilitado\": 0,\n\t\t\"def_auditiva\": 0,\n\t\t\"def_mental\": 0,\n\t\t\"def_intelectual\": 0,\n        \"enderecos\": [\n            {\n            \t\"cod_endereco\": \"{{cod_endereco_participante_pf}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_participante_pf}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_participante_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_participante_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_participante_pf}}\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_participante_pf}}\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRegimeTributario",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c736f0c5-3a48-450d-bf60-65c5b4677c57",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);",
									"});",
									"",
									"pm.test(\"Obter Atividade Fiscal\", function () {",
									"    var regime_tribut = jsonData.result.items[0].cod_regime_tributario;",
									"    regime_tribut = jsonData.result.items.find(x => x.regime_tributario == \"Regime Normal\").cod_regime_tributario;",
									"    ",
									"    pm.environment.set(\"regime_tribut\", regime_tribut);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRegimeTributario\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTipoLucro",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0f54f5a-8c1c-4683-a5ae-2e0962423020",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);",
									"});",
									"",
									"pm.test(\"Obter Lucro\", function () {",
									"    var lucro_pj = jsonData.result.items[0].tipo_lucro;",
									"    var lucro_pj_edicao = jsonData.result.items[1].tipo_lucro;",
									"    pm.environment.set(\"lucro_pj\", lucro_pj);",
									"    pm.environment.set(\"lucro_pj_edicao\", lucro_pj_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTipoLucro\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCNAE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "574c366a-5d2a-4a56-b156-40ca9707cf18",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter CNAE\", function () {",
									"    var cnae_pj = jsonData.result.items[0].cnae;",
									"    var cnae_pj_edicao = jsonData.result.items[1].cnae;",
									"    pm.environment.set(\"cnae_pj\", cnae_pj);",
									"    pm.environment.set(\"cnae_pj_edicao\", cnae_pj_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCNAE\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"cnae_completo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"cnae_completo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 50\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getAtividadeFiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38961049-ae5f-4aa4-bfd4-bec55bfc9085",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Atividade Fiscal\", function () {",
									"    var at_fiscal_pj = jsonData.result.items.find(x => x.descricao == \"Contrib.-Transporte\").cod_atividade_fiscal;",
									"    var at_fiscal_pj_edicao = jsonData.result.items.find(x => x.descricao == \"Contrib.-Transporte\").cod_atividade_fiscal;",
									"    pm.environment.set(\"at_fiscal_pj\", at_fiscal_pj);",
									"    pm.environment.set(\"at_fiscal_pj_edicao\", at_fiscal_pj_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getAtividadeFiscal\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9af15704-d331-4186-9720-1d7140c0f30e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter CNPJ Participante PJ\", function () {",
									"    var cnpj_part_pj = jsonData.result.cnpj_cpf;",
									"    pm.environment.set(\"cnpj_part_pj\", cnpj_part_pj);",
									"});",
									"",
									"",
									"pm.test(\"Obter Código Participante PJ\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pj\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Participante PJ\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_participante_pj\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_participante_pj\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone Participante PJ\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_participante_pj\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_participante_pj\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço Participante PJ\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_participante_pj\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_participante_pj\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CNPJ\", function () {",
									"    var cnpj_response = jsonData.result.cnpj_cpf;",
									"    var cnpj_request = pm.environment.get(\"cnpj_participante\"); ",
									"    ",
									"    pm.expect(cnpj_response).eql(cnpj_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_participante_pj\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fant_participante\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"pm.test(\"Insere CNAE\", function () {",
									"    var cnae_response = jsonData.result.cnae;",
									"    var cnae_request = pm.environment.get(\"cnae_pj\"); ",
									"    ",
									"    pm.expect(cnae_response).eql(cnae_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    cod_regime_response = ''+cod_regime_response;",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "59801bc8-4602-4628-b222-e51847bb0981",
								"exec": [
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCnpj() {",
									"\tvar n = 9;",
									"\tvar n1  = gera_random(n);",
									"\tvar n2  = gera_random(n);",
									" \tvar n3  = gera_random(n);",
									" \tvar n4  = gera_random(n);",
									" \tvar n5  = gera_random(n);",
									"\tvar n6  = gera_random(n);",
									" \tvar n7  = gera_random(n);",
									" \tvar n8  = gera_random(n);",
									" \tvar n9  = 0;//gera_random(n);",
									" \tvar n10 = 0;//gera_random(n);",
									" \tvar n11 = 0;//gera_random(n);\t",
									" \tvar n12 = 1;//gera_random(n);\t\t",
									"\tvar d1 = n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;",
									"\td1 = 11 - (mod(d1,11) );",
									"\t\t \t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t\t \t",
									" \tvar d2 = d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;",
									" \td2 = 11 - (mod(d2,11) );",
									"\t\t \t",
									" \tif (d2 >= 10) d2 = 0;",
									"\t\t \t",
									"\tvar gera_cnpj = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+d1+d2;",
									"\t\t\t",
									"\treturn gera_cnpj;",
									"}",
									"",
									"pm.test(\"Gerar CNPJ\", function () {//Participante",
									"    var cnpj_participante = geraCnpj();",
									"    pm.environment.set(\"cnpj_participante\", cnpj_participante);",
									"});",
									"function geraTipoLucro() {",
									"    var lucro = Math.floor((Math.random() * 2) + 1);",
									"    return lucro;",
									"} ",
									"",
									"pm.test(\"Gerar Tipo de Lucro\", function () {",
									"    var tipo_lucro = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro\", tipo_lucro);",
									"    ",
									"    var tipo_lucro_edicao = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro_edicao\", tipo_lucro_edicao);",
									"});",
									"",
									"",
									"//Gerar Nome Fantasia",
									"function geraNomeFantasia() {",
									"    var array_nome = [\"TRANS\", \"LOG\", \"TRANSPORTES\", \"EXPRESS\", \"EXPRESSO\", \"HORTIFRUTI\", \"LOGISTICA\", \"RAPIDO\", \"FAZENDA\", \"IRMAOS\", \"COMERCIO\", \"BANALORI\", \"IGARASHI\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\"];",
									"    var position = Math.round(Math.random() * 11);",
									"    ",
									"    var fantasia = array_nome[position] + ' ' + comp_nome[position];",
									"    ",
									"    return fantasia;",
									"}",
									"",
									"pm.test(\"Gerar Nome Fantasia\", function () {",
									"    //Participante",
									"    var nome_fant_participante = geraNomeFantasia();",
									"    var nome_fant_participante_edicao = geraNomeFantasia();",
									"    ",
									"    pm.environment.set(\"nome_fant_participante\", nome_fant_participante);",
									"    pm.environment.set(\"nome_fant_participante_edicao\", nome_fant_participante_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cnpj_participante}}\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"{{nome_participante_pj}}\",\n        \"nome_fantasia\": \"{{nome_fant_participante}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj}}\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClienteUpdatePJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5eddf26-7915-4a01-8b05-d3464c4181d3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//InsGrupoNegociador",
									"pm.test(\"Obter Código Participante PJ\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_participante_pj\", id_pessoa);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_participante_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Fantasia\", function () {",
									"    var nome_response = jsonData.result.nome_fantasia;",
									"    var nome_request = pm.environment.get(\"nome_fant_participante_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar CNAE\", function () {",
									"    var nome_response = jsonData.result.cnae;",
									"    var nome_request = pm.environment.get(\"cnae_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj_edicao\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Editar Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    cod_regime_response = ''+cod_regime_response;",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro_edicao\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_participante_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_participante_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_participante_pj\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pj\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_participante_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_participante_pj\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pj\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_participante_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_participante_pj}}\",\n        \"cnpj_cpf\": \"{{cnpj_part_pj}}\",\n        \"razao_social\": \"{{nome_participante_pj_edicao}}\",\n        \"nome_fantasia\": \"{{nome_fant_participante_edicao}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj_edicao}}\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj_edicao}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro_edicao}}\",\n        \"enderecos\": [\n            {\n            \t\"cod_endereco\": \"{{cod_endereco_participante_pj}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_participante_pj}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_participante_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_participante_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_participante_pj}}\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_participante_pj}}\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Expedidor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abc2177f-f94b-4258-a16d-0fb186d9bf45",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count === 0){",
									"        pm.expect(count).eql(0);",
									"    }else{",
									"        pm.expect(count).above(0);",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Participantes Cadastrados Repom",
									"//Verifica se já existem participantes cadastrados repom",
									"pm.environment.set(\"cpf_expedidor_repom\", 29438251073); //número cpf",
									"//pm.environment.set(\"cpf_recebedor_repom\", 99588153034); //número cpf",
									"",
									"pm.test('Verifica participantes', () => {",
									"    var exist_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_expedidor\", exist_expedidor);",
									"",
									"    if (exist_expedidor) {",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }",
									"",
									"    /*var exist_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_recebedor\", exist_recebedor);",
									"",
									"    if (exist_expedidor && exist_recebedor) {",
									"        postman.setNextRequest(null);",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        var id_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }",
									"",
									"    else if (exist_expedidor) {",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }*/",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"29438251073\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePF Expedidor Repom",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97c1ba83-0950-4db6-9376-5ce7e01bd45a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter Código Participante Repom\", function () {",
									"    var id_expedidor = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e5793de-ecba-461d-a5e4-6af316e7e130",
								"exec": [
									"//Gerador Tipo Endereço\r",
									"function geraTipoEndereco() {\r",
									"    var sort = Math.floor((Math.random() * 3) + 1);\r",
									"    var tipo_endereco = '';\r",
									"    \r",
									"    switch (sort) {\r",
									"        case 1:\r",
									"            tipo_endereco = 5;\r",
									"            break;\r",
									"        case 2: \r",
									"            tipo_endereco = 2;\r",
									"            break;\r",
									"        case 3:\r",
									"            tipo_endereco = 1;\r",
									"            break;\r",
									"    }\r",
									"    \r",
									"    return tipo_endereco;\r",
									"}\r",
									"\r",
									"pm.test(\"Gerar Tipo Endereço\", function () {\r",
									"    var cod_endereco_tipo = geraTipoEndereco();\r",
									"    pm.environment.set(\"codEnderecoTipo\", cod_endereco_tipo);\r",
									"});\r",
									"\r",
									"//Endereço\r",
									"function geraBairro() {\r",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];\r",
									"    var sort = Math.round(Math.random() * 7);\r",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;\r",
									"    var vila = array_bairro[sort]+\" \"+aux;\r",
									"    return vila;\r",
									"}\r",
									"\r",
									"function geraLogradouro() {\r",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",\r",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];\r",
									"    var sort = Math.round(Math.random() * 11);\r",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;\r",
									"    var rua = array_rua[sort]+\" \"+aux;\r",
									"    return rua;\r",
									"}\r",
									"\r",
									"function geraComplemento() {\r",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];\r",
									"    var sort = Math.round(Math.random() * 4);\r",
									"    var complem = array_complemento[sort];\r",
									"    return complem;\r",
									"}\r",
									"\r",
									"function geraNumeroEndereco() {\r",
									"    var num_end = Math.round((Math.random() * 1000) + 100);\r",
									"    return num_end;\r",
									"}\r",
									"\r",
									"pm.test(\"Gerar Endereço\", function () {\r",
									"    var logradouro = geraLogradouro();\r",
									"    var complemento = geraComplemento();\r",
									"    var num_endereco = geraNumeroEndereco();\r",
									"    num_endereco = ''+num_endereco;\r",
									"    var bairro = geraBairro();\r",
									"    \r",
									"    pm.environment.set(\"logradouro\", logradouro);\r",
									"    pm.environment.set(\"numeroEndereco\", num_endereco);\r",
									"    pm.environment.set(\"bairro\", bairro);\r",
									"    pm.environment.set(\"complemento\", complemento);\r",
									"});\r",
									"\r",
									"//Inscrição Estadual\r",
									"pm.test(\"Gerar Inscrição Estadual\", function () {\r",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". \r",
									"    // 55492(PR)\r",
									"    \r",
									"    var municipio_id_ins_est = 55492;\r",
									"    var ins_estadual = '6182694930';\r",
									"    pm.environment.set(\"municipioId\", municipio_id_ins_est);\r",
									"    pm.environment.set(\"inscricaoEstadual\", ins_estadual);\r",
									"\r",
									"    //CEP\r",
									"    pm.environment.set(\"cepEnderecoEmpresa\", 84100000);\r",
									"});\r",
									"\r",
									"//Endereço padrão\r",
									"pm.environment.set(\"enderecoPadrao\", 1);\r",
									"\r",
									"//UF empresa\r",
									"pm.environment.set(\"ufEmpresa\", \"PR\");\r",
									"\r",
									"//Atividade fiscal\r",
									"pm.environment.set(\"codAtividadeFiscal\", 4);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_expedidor_repom}}\",\n        \"cod_sexo\": \"M\",\n        \"razao_social\": \"JOÃO EXPEDIDOR\",\n        \"data_nascimento\": \"1980-12-22 03:00:00\",\n        \"nat_municipio_id\": 67326,\n        \"cod_nacionalidade\": 10,\n        \"cnae\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"37410000\",\n                \"uf\": \"MG\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{numeroEndereco}}\",\n                \"complemento\": \"\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": 39055,\n                \"cod_endereco_tipo\": \"{{codEnderecoTipo}}\",\n                \"endereco_padrao\": \"{{enderecoPadrao}}\",\n                \"cod_atividade_fiscal\": 4,\n                \"inscricao_estadual\": \"8405394095028\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"54986958789\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": 54,\n                \"telefone_tipo_id\": 3,\n                \"telefone_padrao\": 1,\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": 0,\n                \"email\": \"joao.expedidor@gmail.com\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": 1,\n                \"endereco\": \"joao.expedidor@gmail.com\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"pis_pasep_nit\": \"\",\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaCliente SelectExpedidor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b763c0-31e5-4935-af7e-e799ad711993",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Obter código endereço expedidor Repom\", function () {",
									"    var cod_end_expedidor_repom = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_expedidor_repom\", cod_end_expedidor_repom);",
									"});",
									"",
									"//var exist_recebedor = pm.environment.get(\"exist_recebedor\");",
									"",
									"//if (exist_recebedor) postman.setNextRequest(\"M220 - manipulaCliente SelectRecebedor\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_expedidor_repom}}\",\n        \"operation\": \"SELECT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Recebedor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebd5f934-d854-4309-a259-77fa3a99e921",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count === 0){",
									"        pm.expect(count).eql(0);",
									"    }else{",
									"        pm.expect(count).above(0);",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Participantes Cadastrados Repom",
									"//Verifica se já existem participantes cadastrados repom",
									"//pm.environment.set(\"cpf_expedidor_repom\", 29438251073); //número cpf",
									"pm.environment.set(\"cpf_recebedor_repom\", 99588153034); //número cpf",
									"",
									"pm.test('Verifica participantes', () => {",
									"    /*var exist_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_expedidor\", exist_expedidor);*/",
									"",
									"    var exist_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")) ? true : false;",
									"    pm.environment.set(\"exist_recebedor\", exist_recebedor);",
									"",
									"    if (exist_recebedor) {",
									"        var id_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectRecebedor\");",
									"    }",
									"",
									"    /*if (exist_expedidor && exist_recebedor) {",
									"        postman.setNextRequest(null);",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        var id_recebedor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_recebedor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }",
									"",
									"    else if (exist_expedidor) {",
									"        var id_expedidor = jsonData.result.items.find(x => x.cnpj_cpf == pm.environment.get(\"cpf_expedidor_repom\")).cod_pessoa;",
									"        pm.environment.set(\"cod_expedidor_repom\", id_expedidor);",
									"        ",
									"        postman.setNextRequest(\"M220 - manipulaCliente SelectExpedidor\");",
									"    }*/",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"99588153034\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePF Recebedor Repom",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b6972a6-f810-4d6a-9f0a-a1dbc70eb527",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter Código Participante\", function () {",
									"    var id_recebedor = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_recebedor_repom\", id_recebedor);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "80bf0ebf-954e-4d07-8341-d84c624fb1d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_recebedor_repom}}\",\n        \"cod_sexo\": \"M\",\n        \"razao_social\": \"JOAO RECEBEDOR\",\n        \"data_nascimento\": \"1956-12-26 03:00:00\",\n        \"nat_municipio_id\": 72451,\n        \"cod_nacionalidade\": 10,\n        \"cnae\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"17830000\",\n                \"uf\": \"SP\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{numeroEndereco}}\",\n                \"complemento\": \"\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": 83151,\n                \"cod_endereco_tipo\": 1,\n                \"endereco_padrao\": \"{{enderecoPadrao}}\",\n                \"cod_atividade_fiscal\": \"{{codAtividadeFiscal}}\",\n                \"inscricao_estadual\": \"190579858855\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"54988596358\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": 54,\n                \"telefone_tipo_id\": 2,\n                \"telefone_padrao\": 1,\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": 0,\n                \"email\": \"joao.recebedor@gmail.com\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": 1,\n                \"endereco\": \"joao.recebedor@gmail.com\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"pis_pasep_nit\": \"\",\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaCliente SelectRecebedor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "074ad5bc-e7c8-41cb-a00e-2083d7551e3a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Obter código endereço recebedor Repom\", function () {",
									"    var cod_end_recebedor_repom = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_recebedor_repom\", cod_end_recebedor_repom);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5e7f3dd6-8f5e-49f7-a1d0-21df725a1c13",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_recebedor_repom}}\",\n        \"operation\": \"SELECT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PRESTADOR DE SERVICOS",
			"item": [
				{
					"name": "M220 - manipulaProprietarioPF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cf62bf4-22dc-441b-95dc-8f3bf6f03e61",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Prestador Serviços PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_prest_serv_pf\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_prest_serv_pf\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_prest_serv_pf\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta_prest_serv_pf\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2_prest_serv_pf\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_prest_serv_pf\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_prest_serv_pf\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_prest_serv_pf\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_prest_serv_pf\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf_prest_serv\"); ",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var cidade_response = jsonData.result.nat_municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Insere PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_prest_serv\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1714812f-3de1-46cf-9ae9-aa039a386651",
								"exec": [
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf_prest_serv = geraCpf();",
									"    var cpf_prest_serv_edicao = geraCpf();",
									"    pm.environment.set(\"cpf_prest_serv\", cpf_prest_serv);",
									"    pm.environment.set(\"cpf_prest_serv_edicao\", cpf_prest_serv_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"ADRIANA\", \"ANA\", \"MARIA\", \"SANDRA\", \"JULIANA\", \"ANTONIO\", \"CARLOS\", \"FRANCISCO\", \"JOAO\", \"JOSE\", \"BRUNA\", \"CAMILA\", \"JESSICA\", \"LETICIA\", \"AMANDA\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\", \"GABRIEL\", \"BERNARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    var aux = Math.round(Math.random() * 13);",
									"    ",
									"    var nome_completo = array_nome[aux] + ' ' + comp_nome[aux] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_prest_serv_edicao = geraNome();",
									"    pm.environment.set(\"nome_prest_serv\", nome);",
									"    pm.environment.set(\"nome_prest_serv_edicao\", nome_prest_serv_edicao);",
									"    ",
									"    var nome2 = geraNome();",
									"    pm.environment.set(\"nome_prest_serv_pj\", nome2);",
									"     var nome3 = geraNome();",
									"    pm.environment.set(\"nome_prest_serv_pj_edicao\", nome3);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var pis_prest_serv = geraPis();",
									"    var pis_prest_serv_edicao = geraPis();",
									"    pm.environment.set(\"pis_prest_serv\", pis_prest_serv);",
									"    pm.environment.set(\"pis_prest_serv_edicao\", pis_prest_serv_edicao);",
									"});",
									"",
									"// Gerar RNTRC / TAC",
									"function geraRntrc() {",
									"    var random_num = Math.floor((Math.random() * 1000) + 5000);",
									"    var random_num2 = Math.floor((Math.random() * 1000) + 5000);",
									"    var rntrc = ''+random_num+random_num2;",
									"    return rntrc;",
									"}",
									"",
									"pm.test(\"Gerar RNTRC / TAC\", function () {",
									"    var numero_rntrc = geraRntrc();",
									"    var numero_rntrc_edicao = geraRntrc();",
									"    ",
									"    pm.environment.set(\"numero_rntrc\", numero_rntrc);",
									"    pm.environment.set(\"numero_rntrc_edicao\", numero_rntrc_edicao);",
									"    ",
									"    var numero_rntrc2 = geraRntrc();",
									"    var numero_rntrc_edicao2 = geraRntrc();",
									"    ",
									"    pm.environment.set(\"numero_rntrc2\", numero_rntrc2);",
									"    pm.environment.set(\"numero_rntrc_edicao2\", numero_rntrc_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"//Data RNTRC",
									"function geraDataEmissaoRntrc() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataEmissaoRntrcEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Emissão RNTRC\", function () {",
									"    var data_emissao_rntrc = geraDataEmissaoRntrc();",
									"    pm.environment.set(\"data_emissao_rntrc\", data_emissao_rntrc);",
									"    ",
									"    var data_emissao_rntrc_edicao = geraDataEmissaoRntrcEdicao();",
									"    pm.environment.set(\"data_emissao_rntrc_edicao\", data_emissao_rntrc_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cpf_prest_serv}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"razao_social\": \"{{nome_prest_serv}}\",\n        \"nome_fantasia\": \"\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"pis_pasep_nit\": \"{{pis_prest_serv}}\",\n        \"cod_atividade_fiscal\": \"\",\n        \"cod_regime_tributario\": null,\n        \"tipo_lucro\": null,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\",\n        \"rntrc_tac\": \"{{numero_rntrc}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaProprietarioUpdatePF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bed24d3a-0d3e-4933-86d4-d4c9e22b2b3b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Sexo\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero_edicao\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Editar PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"pis_prest_serv_edicao\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Editar Nacionalidade\", function () {",
									"    var nacionalidade_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalidade_request = pm.environment.get(\"nacionalidade_id_edicao\");",
									"    ",
									"    pm.expect(nacionalidade_response).eql(nacionalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Naturalidade\", function () {",
									"    var naturalidade_response = jsonData.result.nat_municipio_id;",
									"    var naturalidade_request = pm.environment.get(\"alt_municipio_id\");",
									"    ",
									"    pm.expect(naturalidade_response).eql(naturalidade_request);",
									"});",
									"",
									"pm.test(\"Editar Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga_edicao\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"//RNTRC",
									"pm.test(\"Editar RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc_edicao\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc_edicao\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Editar Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura_edicao\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pf\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pf\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pf\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pf\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pf\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pf\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pf\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pf\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pf\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"",
									"//=================================================================================================================================",
									"",
									"pm.test(\"Editar Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).banco_id;",
									"    var banco_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Editar Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).conta;",
									"    pm.environment.set(\"debug_cod\", conta_response);",
									"    var conta_request = pm.environment.get(\"conta_edicao2\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_edicao2\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Editar Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_edicao\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_edicao\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pf\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pf\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n        \"cnpj_cpf\": \"{{cpf_prest_serv}}\",\n        \"cod_sexo\": \"{{genero_edicao}}\",\n        \"razao_social\": \"{{nome_prest_serv_edicao}}\",\n        \"data_nascimento\": \"{{data_antiga_edicao}}\",\n        \"nat_municipio_id\": \"{{alt_municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id_edicao}}\",\n        \"cnae\": \"\",\n        \"pis_pasep_nit\": \"{{pis_prest_serv_edicao}}\",\n        \"def_fisica\": 0,\n        \"def_visual\": 0,\n        \"def_reabilitado\": 0,\n\t\t\"def_auditiva\": 0,\n\t\t\"def_mental\": 0,\n\t\t\"def_intelectual\": 0,\n        \"enderecos\": [\n            {\n                \"cod_endereco\": \"{{cod_endereco_prest_serv_pf}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\":\"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_prest_serv_pf}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_prest_serv_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_prest_serv_pf}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_prest_serv_pf}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_prest_serv_pf}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\",\n        \"rntrc_tac\": \"{{numero_rntrc_edicao}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc_edicao}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura_edicao}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao2}}\",\n                \"cod_conta\": \"{{cod_conta_prest_serv_pf}}\",\n                \"conta_dv\": \"{{dv_edicao2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao}}\",\n                \"cod_conta\": \"{{cod_conta2_prest_serv_pf}}\",\n                \"conta_dv\": \"{{dv_edicao}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaProprietarioPJ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f44812c8-09f0-4245-950c-ee73f7148a85",
								"exec": [
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCnpj() {",
									"\tvar n = 9;",
									"\tvar n1  = gera_random(n);",
									"\tvar n2  = gera_random(n);",
									" \tvar n3  = gera_random(n);",
									" \tvar n4  = gera_random(n);",
									" \tvar n5  = gera_random(n);",
									"\tvar n6  = gera_random(n);",
									" \tvar n7  = gera_random(n);",
									" \tvar n8  = gera_random(n);",
									" \tvar n9  = 0;//gera_random(n);",
									" \tvar n10 = 0;//gera_random(n);",
									" \tvar n11 = 0;//gera_random(n);\t",
									" \tvar n12 = 1;//gera_random(n);\t\t",
									"\tvar d1 = n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;",
									"\td1 = 11 - (mod(d1,11) );",
									"\t\t \t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t\t \t",
									" \tvar d2 = d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;",
									" \td2 = 11 - (mod(d2,11) );",
									"\t\t \t",
									" \tif (d2 >= 10) d2 = 0;",
									"\t\t \t",
									"\tvar gera_cnpj = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+d1+d2;",
									"\t\t\t",
									"\treturn gera_cnpj;",
									"}",
									"",
									"pm.test(\"Gerar CNPJ\", function () {",
									"    var cnpj = geraCnpj();",
									"    pm.environment.set(\"cnpj_prest_serv\", cnpj);",
									"});",
									"",
									"pm.test(\"Regime Tributário\", function () {",
									"    var regime_tribut = 3;",
									"    pm.environment.set(\"regime_tribut\", regime_tribut);",
									"});",
									"",
									"function geraTipoLucro() {",
									"    var lucro = Math.floor((Math.random() * 2) + 1);",
									"    return lucro;",
									"} ",
									"",
									"pm.test(\"Gerar Tipo de Lucro\", function () {",
									"    var tipo_lucro = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro\", tipo_lucro);",
									"    ",
									"    var tipo_lucro_edicao = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro_edicao\", tipo_lucro_edicao);",
									"});",
									"",
									"",
									"//Gerar Nome Fantasia",
									"function geraNomeFantasia() {",
									"    var array_nome = [\"TRANS\", \"LOG\", \"TRANSPORTES\", \"EXPRESS\", \"EXPRESSO\", \"HORTIFRUTI\", \"LOGISTICA\", \"RAPIDO\", \"FAZENDA\", \"IRMAOS\", \"COMERCIO\", \"BANALORI\", \"IGARASHI\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\"];",
									"    var position = Math.round(Math.random() * 11);",
									"    ",
									"    var fantasia = array_nome[position] + ' ' + comp_nome[position];",
									"    ",
									"    return fantasia;",
									"}",
									"",
									"pm.test(\"Gerar Nome Fantasia\", function () {",
									"    var nome_fantasia = geraNomeFantasia();",
									"    var nome_fantasia_edicao = geraNomeFantasia();",
									"    ",
									"    pm.environment.set(\"nome_fantasia\", nome_fantasia);",
									"    pm.environment.set(\"nome_fantasia_edicao\", nome_fantasia_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dc82398a-be63-4670-9da0-540e67f6a95f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Prestador Serviços PF\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_prest_serv_pj\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_prest_serv_pj\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_prest_serv_pj\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta_prest_serv_pj\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2_prest_serv_pj\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_prest_serv_pj\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_prest_serv_pj\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_prest_serv_pj\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_prest_serv_pj\", cod_endereco2);",
									"});",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere CNPJ\", function () {",
									"    var cnpj_response = jsonData.result.cnpj_cpf;",
									"    var cnpj_request = pm.environment.get(\"cnpj_prest_serv\"); ",
									"    ",
									"    pm.expect(cnpj_response).eql(cnpj_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv_pj\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fantasia\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"pm.test(\"Insere CNAE\", function () {",
									"    var cnae_response = jsonData.result.cnae;",
									"    var cnae_request = pm.environment.get(\"cnae_pj\");",
									"    ",
									"    pm.expect(cnae_response).eql(cnae_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									"",
									"pm.test(\"Insere RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc2\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"{{cnpj_prest_serv}}\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"{{nome_prest_serv_pj}}\",\n        \"nome_fantasia\": \"{{nome_fantasia}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj}}\",\n        \"pis_pasep_nit\": \"\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email\": \"{{email2}}\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\",\n        \"rntrc_tac\": \"{{numero_rntrc2}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaProprietarioUpdatePJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fecf629-9bad-43bf-8a34-feecf1b6462f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_prest_serv_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Fantasia\", function () {",
									"    var nome_response = jsonData.result.nome_fantasia;",
									"    var nome_request = pm.environment.get(\"nome_fantasia_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar CNAE\", function () {",
									"    var nome_response = jsonData.result.cnae;",
									"    var nome_request = pm.environment.get(\"cnae_pj_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal\", function () {",
									"    var at_fiscal_response = jsonData.result.cod_atividade_fiscal;",
									"    var at_fiscal_request = pm.environment.get(\"at_fiscal_pj_edicao\");",
									"    ",
									"    pm.expect(at_fiscal_response).eql(at_fiscal_request);",
									"});",
									"",
									"pm.test(\"Editar Regime Tributário\", function () {",
									"    var cod_regime_response = jsonData.result.cod_regime_tributario;",
									"    var cod_regime_request = pm.environment.get(\"regime_tribut\");",
									"    ",
									"    pm.expect(cod_regime_response).eql(cod_regime_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Lucro\", function () {",
									"    var lucro_response = jsonData.result.tipo_lucro;",
									"    var lucro_request = pm.environment.get(\"tipo_lucro_edicao\");",
									"    ",
									"    pm.expect(lucro_response).eql(lucro_request);",
									"});",
									"",
									"pm.test(\"Editar RNTRC\", function () {",
									"    var rntrc_response = jsonData.result.rntrc_tac;",
									"    var rntrc_request = pm.environment.get(\"numero_rntrc_edicao2\");",
									"    ",
									"    pm.expect(rntrc_response).eql(rntrc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Emissão RNTRC\", function () {",
									"    var data_emis_response = jsonData.result.data_emissao_rntrc_tac;",
									"    var data_emis_request = pm.environment.get(\"data_emissao_rntrc_edicao\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Editar Data Vencimento RNTRC\", function () {",
									"    var data_venc_response = jsonData.result.data_vencimento_rntrc_tac;",
									"    var data_venc_request = pm.environment.get(\"data_futura_edicao\");",
									"    ",
									"    pm.expect(data_venc_response).eql(data_venc_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_prest_serv_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_prest_serv_pj\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_prest_serv_pj\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pj\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pj\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_prest_serv_pj\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_prest_serv_pj\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pj\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pj\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_prest_serv_pj\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"",
									"//=================================================================================================================================",
									"",
									"pm.test(\"Editar Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).banco_id;",
									"    var banco_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Editar Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).conta;",
									"    pm.environment.set(\"debug_cod\", conta_response);",
									"    var conta_request = pm.environment.get(\"conta_edicao2\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_edicao2\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"alt_banco_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"alt_agencia_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Editar Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_edicao\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_edicao\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta_prest_serv_pj\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.cod_conta == pm.environment.get(\"cod_conta2_prest_serv_pj\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaProprietario\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_prest_serv_pj}}\",\n        \"cnpj_cpf\": \"{{cnpj_prest_serv}}\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"{{nome_prest_serv_pj_edicao}}\",\n        \"nome_fantasia\": \"{{nome_fantasia_edicao}}\",\n        \"data_nascimento\": null,\n        \"cnae\": \"{{cnae_pj_edicao}}\",\n        \"pis_pasep_nit\": \"\",\n        \"cod_atividade_fiscal\": \"{{at_fiscal_pj_edicao}}\",\n        \"cod_regime_tributario\": \"{{regime_tribut}}\",\n        \"tipo_lucro\": \"{{tipo_lucro_edicao}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": \"{{cod_endereco_prest_serv_pj}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\":\"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_prest_serv_pj}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_prest_serv_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_prest_serv_pj}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_prest_serv_pj}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pj}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_prest_serv_pj}}\",\n                \"cod_pessoa\": \"{{cod_prest_serv_pj}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\",\n        \"rntrc_tac\": \"{{numero_rntrc_edicao2}}\",\n        \"data_emissao_rntrc_tac\": \"{{data_emissao_rntrc_edicao}}\",\n        \"data_vencimento_rntrc_tac\": \"{{data_futura_edicao}}\",\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao2}}\",\n                \"cod_conta\": \"{{cod_conta_prest_serv_pj}}\",\n                \"conta_dv\": \"{{dv_edicao2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            },\n            {\n                \"operation\": \"UPDATE\",\n                \"banco_id\": \"{{alt_banco_id}}\",\n                \"agencia\": \"{{alt_agencia_id}}\",\n                \"conta\": \"{{conta_edicao}}\",\n                \"cod_conta\": \"{{cod_conta2_prest_serv_pj}}\",\n                \"conta_dv\": \"{{dv_edicao}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            }\n        ],\n        \"proprietario_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PESSOA ESTRANGEIRA",
			"item": [
				{
					"name": "M220 - manipulaCliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee19e370-8bd5-42f9-ba2b-64d2d203c510",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Contribuinte\", function () {",
									"    var cpf_pessoa = jsonData.result.cod_contribuinte;",
									"    pm.environment.set(\"cod_cont_pe\", cpf_pessoa);",
									"});",
									"",
									"",
									"pm.test(\"Obter Código Pessoa Estrangeira\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pe\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa Estrangeira\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email_pe\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2_pe\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone Pessoa Estrangeira\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_fone_pe\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_fone2_pe\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço Pessoa Estrangeira\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_pe\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2_pe\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    pm.environment.set(\"teste_insc\", insc_est_response);",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.numero == pm.environment.get(\"num_endereco1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    pm.environment.set(\"debug4\", telefone_response);",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Cód Contribuinte\", function () {",
									"    var cpf_response = jsonData.result.cod_contribuinte;",
									"    var cpf_request = pm.environment.get(\"cod_contribuinte\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_p_estrangeira\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fant_estrangeiro\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "31d5667b-4004-4c35-adaa-887af356ece5",
								"exec": [
									"//Gerador de Código Contribuinte",
									"function geraCod() {",
									"    var cod = Math.round(Math.random() * 10000) + 5000000;",
									"    return cod;",
									"}",
									"",
									"pm.test(\"Gerar Cód Contribuinte\", function () {",
									"    var cod_contribuinte = geraCod();",
									"    cod_contribuinte = ''+cod_contribuinte;",
									"    var cod_contribuinte_edicao = geraCod();",
									"    pm.environment.set(\"cod_contribuinte\", cod_contribuinte);",
									"    pm.environment.set(\"cod_contribuinte_edicao\", cod_contribuinte_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNomePessoaEstrangeira() {",
									"    var array_nome = [\"ADRIANA\", \"ANA\", \"MARIA\", \"SANDRA\", \"JULIANA\", \"ANTONIO\", \"CARLOS\", \"FRANCISCO\", \"JOAO\", \"JOSE\", \"BRUNA\", \"CAMILA\", \"JESSICA\", \"LETICIA\", \"AMANDA\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\", \"GABRIEL\", \"BERNARDO\"];",
									"    var array_sobrenome = [\"ARGENTINA\", \"ALEMAO\", \"BRASILEIRO\", \"PERUANO\", \"AMERICANO\", \"HOLANDES\", \"CHILENO\", \"MEXICANO\", \"PARAGUAIO\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    var aux = Math.round(Math.random() * 13);",
									"    ",
									"    var nome_completo = array_nome[aux] + ' ' + comp_nome[aux] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Razão Social\", function () {",
									"    var nome_p_estrangeira = geraNomePessoaEstrangeira();",
									"    var nome_p_estrangeira_edicao = geraNomePessoaEstrangeira();",
									"    pm.environment.set(\"nome_p_estrangeira\", nome_p_estrangeira);nome_p_estrangeira",
									"    pm.environment.set(\"nome_p_estrangeira_edicao\", nome_p_estrangeira_edicao);",
									"});",
									"",
									"//Gerador de Nome Fantasia",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome_fant_estrangeiro\", nome);",
									"    pm.environment.set(\"nome_fant_estrangeiro_edicao\", nome_edicao);",
									"})",
									"",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cod_contribuinte\": \"{{cod_contribuinte}}\",\n        \"razao_social\": \"{{nome_p_estrangeira}}\",\n        \"nome_fantasia\": \"{{nome_fant_estrangeiro}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"{{cep_1}}\",\n                \"uf\": \"{{uf}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"telefone\": \"{{telefone2}}\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n        \t{\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClienteUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e8a92e0-7c70-4134-b401-f26a6362f2dd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Não Editar Cód Contribuinte\", function () {",
									"    var cpf_response = jsonData.result.cod_contribuinte;",
									"    var cpf_request = pm.environment.get(\"cod_cont_pe\"); ",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Editar Nome/Razão Social\", function () {",
									"    var nome_response = jsonData.result.razao_social;",
									"    var nome_request = pm.environment.get(\"nome_p_estrangeira_edicao\"); ",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Editar Nome Fantasia\", function () {",
									"    var nome_fant_response = jsonData.result.nome_fantasia;",
									"    var nome_fant_request = pm.environment.get(\"nome_fant_estrangeiro_edicao\"); ",
									"    ",
									"    pm.expect(nome_fant_response).eql(nome_fant_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"pm.test(\"Editar Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).cep;",
									"    var cep_resquest = pm.environment.get(\"alt_cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"alt_inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro_edicao\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco_edicao\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento_edicao\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro_edicao\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco_pe\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Editar Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo_edicao\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Editar CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Editar Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Editar Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"ins_estadual_edicao\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Editar Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Editar Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Editar Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Editar Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Editar Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cod_endereco == pm.environment.get(\"cod_endereco2_pe\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"atividade_fiscal_edicao\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//======================================================================================================================================",
									"",
									"pm.test(\"Editar Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_pe\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_pe\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone_pe\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_pe\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Editar Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_pe\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"alt_tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Editar Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.cod_telefone == pm.environment.get(\"cod_fone2_pe\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone_edicao2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//====================================================================",
									"",
									"pm.test(\"Editar Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_pe\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_pe\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email_pe\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_pe\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Editar Email 2",
									"pm.test(\"Editar Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_pe\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"alt_email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Editar Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.cod_email == pm.environment.get(\"cod_email2_pe\")).endereco;",
									"    var email_request = pm.environment.get(\"email_edicao2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0f9d8148-793d-4387-a75b-3a68c4b75480",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": \"{{cod_pe}}\",\n        \"cod_contribuinte\": \"{{cod_cont_pe}}\",\n        \"razao_social\": \"{{nome_p_estrangeira_edicao}}\",\n        \"nome_fantasia\": \"{{nome_fant_estrangeiro_edicao}}\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": \"{{cod_endereco_pe}}\",\n                \"cep\": \"{{alt_cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro_edicao}}\",\n                \"numero\": \"{{num_endereco_edicao}}\",\n                \"complemento\": \"{{complemento_edicao}}\",\n                \"bairro\": \"{{bairro_edicao}}\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\":\"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{alt_inscricao_estadual}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"cod_endereco\": \"{{cod_endereco2_pe}}\",\n                \"cep\": \"{{cep}}\",\n                \"uf\": \"{{alt_uf}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo_edicao}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{atividade_fiscal_edicao}}\",\n                \"inscricao_estadual\": \"{{ins_estadual_edicao}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"{{telefone_edicao}}\",\n                \"cod_telefone\": \"{{cod_fone_pe}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"telefone\": \"{{telefone_edicao2}}\",\n                \"cod_telefone\": \"{{cod_fone2_pe}}\",\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"{{alt_tipo_fone_id}}\",\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_cod_pais\": null,\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao}}\",\n                \"cod_email\": \"{{cod_email_pe}}\",\n                \"cod_pessoa\": \"{{cod_pe}}\",\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"{{email_edicao}}\",\n                \"operation\": \"UPDATE\"\n            },\n            {\n                \"email_tipo_id\": \"{{alt_email_tipo_id}}\",\n                \"email\": \"{{email_edicao2}}\",\n                \"cod_email\": \"{{cod_email2_pe}}\",\n                \"cod_pessoa\": \"{{cod_pe}}\",\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"{{email_edicao2}}\",\n                \"operation\": \"UPDATE\"\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CLASSIFICACAO DE NATUREZA",
			"item": [
				{
					"name": "M220 - getNatureza",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f7fbeca-7b2a-47f6-9557-046cb95baaae",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Natureza Operacional\", function () {",
									"    var natureza_op = jsonData.result.items[0].num_natureza;",
									"    var descricaoNatureza = jsonData.result.items[0].descricao;",
									"    pm.environment.set(\"oper_natureza_id\", natureza_op);",
									"    pm.environment.set(\"descricaoNatureza\", descricaoNatureza);",
									"",
									"",
									"    var natureza_op_edicao = jsonData.result.items[1].num_natureza; ",
									"    pm.environment.set(\"oper_natureza_id_edicao\", natureza_op_edicao);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getNatureza\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaNaturezaComercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1178a16e-f597-4065-b775-19e6717caadc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Natureza\", function () {",
									"    var class_nat_id = jsonData.result.classificacao_natureza_id;",
									"    pm.environment.set(\"class_nat_id\", class_nat_id);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_natureza\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Insere Natureza Operacional\", function () {",
									"    var count = jsonData.result.natureza_operacional[1].classificacao_natureza_oper_id;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Insere Natureza Operacional Diferente\", function () {",
									"    var num_response = jsonData.result.natureza_operacional[0].num_natureza;",
									"    var num_1_response = jsonData.result.natureza_operacional[1].num_natureza;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"});",
									"// Get para edição",
									"pm.test(\"Obter ID Natureza Operacional\", function () {",
									"    var nat_op_id = jsonData.result.natureza_operacional[0].classificacao_natureza_oper_id;",
									"    pm.environment.set(\"nat_op_id\", nat_op_id);",
									"    var nat_op_id2 = jsonData.result.natureza_operacional[1].classificacao_natureza_oper_id;",
									"    pm.environment.set(\"nat_op_id2\", nat_op_id2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "28efd95e-0257-4ccd-ad2f-dbdcf17b474a",
								"exec": [
									"//Funcões",
									"function descNatureza() {",
									"    var array_descricao = [\"Carga Geral\", \"Carga A Granel\", \"Carga Frigorificada\", \"Carga Perigosa\", \"Neo-Granel\", \"Volumes\", \"Caixas\", \"Fracionada\"];",
									"    var position = Math.round(Math.random() * 7);",
									"    var aux = Math.round((Math.random() * 100) + 10000);",
									"    var aux2 = Math.round(Math.random() * 235) + 15365;",
									"    var classificacao = aux2+' '+array_descricao[position]+aux;",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição Natureza\", function () {",
									"    var desc_natureza = descNatureza();",
									"    pm.environment.set(\"desc_natureza\", desc_natureza);",
									"    var desc_natureza_edicao = descNatureza();",
									"    pm.environment.set(\"desc_natureza_edicao\", desc_natureza_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaNaturezaComercial\",\n    \"parameters\": {\n        \"classificacao_comercial_id\": null,\n        \"operation\": \"INSERT\",\n        \"descricao\": \"{{desc_natureza}}\",\n        \"vinculo_operacional\": [\n            {\n                \"num_natureza\": \"{{oper_natureza_id}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"num_natureza\": \"{{oper_natureza_id_edicao}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaNaturezaComercialUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fc26ccf-e0e2-45eb-88f1-7794f2863390",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_request = pm.environment.get(\"desc_natureza_edicao\"); ",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar Natureza Operacional\", function () {",
									"    var cod_op_response = jsonData.result.natureza_operacional[0].classificacao_natureza_oper_id;",
									"    var cod_op_request = pm.environment.get(\"nat_op_id\");",
									"    cod_op_request = cod_op_request+2;",
									"    pm.expect(cod_op_response).eql(cod_op_request);",
									"    ",
									"    var cod_op_response1 = jsonData.result.natureza_operacional[1].classificacao_natureza_oper_id;",
									"    var cod_op_request1 = pm.environment.get(\"nat_op_id2\");",
									"    cod_op_request1 = cod_op_request1+2;",
									"    ",
									"    pm.expect(cod_op_response1).eql(cod_op_request1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaNaturezaComercial\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"classificacao_natureza_id\": \"{{class_nat_id}}\",\n        \"vinculo_operacional\": [\n        \t{\n                \"classificacao_natureza_oper_id\": \"{{nat_op_id}}\",\n                \"num_natureza\": \"{{oper_natureza_id}}\",\n                \"natureza\": \"\",\n                \"natureza_grupo_id\": \"\",\n                \"descricao\": \"\",\n                \"id\": \"\",\n                \"operation\": \"DELETE\"\n            },\n            {\n                \"classificacao_natureza_oper_id\": \"{{nat_op_id2}}\",\n                \"num_natureza\": \"{{oper_natureza_id_edicao}}\",\n                \"natureza\": \"\",\n                \"natureza_grupo_id\": \"\",\n                \"descricao\": \"\",\n                \"id\": \"\",\n                \"operation\": \"DELETE\"\n            },\n            {\n                \"num_natureza\": \"{{oper_natureza_id}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            },\n            {\n                \"num_natureza\": \"{{oper_natureza_id_edicao}}\",\n                \"descricao\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"descricao\": \"{{desc_natureza_edicao}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteClassificacaoNatureza",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dc96be1-bb5c-45f1-b105-85af0b835346",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"//Utilizar no update de M220 - altTabelaFrete",
									"pm.test(\"Obter Código Classificação\", function () {",
									"    var class_nat_id_edicao = jsonData.result.items[0].classificacao_natureza_id;",
									"    pm.environment.set(\"class_nat_id_edicao\", class_nat_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteClassificacaoNatureza\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"classificacao_natureza_id\",\n                    \"title\": \"ID Classificacao\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Data inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"Usuário atualização\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CLASSIFICACAO COMERCIAL DO VEICULO",
			"item": [
				{
					"name": "Busca classificação comercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d195d97-c429-4624-90ef-41ef12ca0a84",
								"exec": [
									"//Variáveis\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test('Valida o retorno da consulta', function(){\r",
									"    var count = jsonData.result.count;\r",
									"    if(count === 0){\r",
									"        postman.setNextRequest(\"M220 - manipulaClassComercial 1\");\r",
									"    }else{\r",
									"        postman.setNextRequest(\"Remove classificação comercial\");\r",
									"\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"API_TEST\",\r\n    \"operation\": \"executaQuery\",\r\n    \"parameters\": {\r\n        \"query\": {\r\n            \"sql_query\": \"select * from COMERCIAL.V$CLAS_COM_OPER t where t.tipo_carroceria_id = {{carroceria_id}}\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove classificação comercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bde136e-10cd-4321-9d23-0df1b1fe21fe",
								"exec": [
									"//Variáveis\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test('Valida o retorno da consulta', function(){\r",
									"    pm.expect(jsonData.success).eql(true);\r",
									"    pm.expect(jsonData.code).eql(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"API_TEST\",\r\n    \"operation\": \"executaDML\",\r\n    \"parameters\": {\r\n        \"query\": {\r\n            \"sql_query\": \"delete COMERCIAL.V$CLAS_COM_OPER t where t.tipo_carroceria_id = {{carroceria_id}}\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClassComercial 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "62aaeffb-8447-48e9-b3a1-f1c14a41a3a6",
								"exec": [
									"//Funcões",
									"function descVeiculo() {",
									"    var array_descricao = [\"Semi Reboque Graneleiro\", \"Truck\", \"Bitruck\", \"Semi Reboque Basculante\", \"Semi Reboque Baú\", \"Semi Reboque Sider\", \"Bitrem\", \"Rodotrem\"];",
									"    var position = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 100) + 250000;",
									"    var aux2 = Math.round(Math.random() * 325) + 321545;",
									"    var classificacao = aux2+' '+array_descricao[position]+aux;",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição Veículo\", function () {",
									"    var desc_clas_veiculo = descVeiculo();",
									"    pm.environment.set(\"desc_clas_veiculo\", desc_clas_veiculo);",
									"    ",
									"    var desc_clas_veiculo_edicao = descVeiculo();",
									"    pm.environment.set(\"desc_clas_veiculo_edicao\", desc_clas_veiculo_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Lotação Veículo\", function () {",
									"    var lotacao = Math.round((Math.random() * 50) + 1);",
									"    pm.environment.set(\"lotacao\", lotacao);",
									"    ",
									"    var lotacao_edicao = Math.round((Math.random() * 99) + 51);",
									"    pm.environment.set(\"lotacao_edicao\", lotacao_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6eafc40a-6254-4091-b2d0-404bdf2535d1",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Classificação Comercial Veículo\", function () {",
									"    var class_comercial_id = jsonData.result.classificacao_comercial_id;",
									"    pm.environment.set(\"class_comercial_id\", class_comercial_id);",
									"});",
									"",
									"pm.test(\"Obter ID Tipo Carroceria\", function () {",
									"    var tipo_carroc_id = jsonData.result.classificacao_operacional[0].tipo_carroceria_id;",
									"    pm.environment.set(\"tipo_carroc_id\", tipo_carroc_id);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_clas_veiculo\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Insere Lotação\", function () {",
									"    var lotacao_response = jsonData.result.lotacao_minima;",
									"    var lotacao_request = pm.environment.get(\"lotacao\"); ",
									"    ",
									"    pm.expect(lotacao_response).eql(lotacao_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaClassComercial\",\n    \"parameters\": {\n        \"classificacao_comercial_id\": null,\n        \"operation\": \"INSERT\",\n        \"descricao\": \"{{desc_clas_veiculo}}\",\n        \"lotacao_minima\": \"{{lotacao}}\",\n        \"vinculo_operacional\": [\n            {\n                \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n                \"carroceria\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClassComercial 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c8d43ed-6902-433a-a664-cde8f6506041",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"// Verificação das edições",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.descricao;",
									"    var desc_request = pm.environment.get(\"desc_clas_veiculo_edicao\"); ",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar Lotação\", function () {",
									"    var lotacao_response = jsonData.result.lotacao_minima;",
									"    var lotacao_request = pm.environment.get(\"lotacao_edicao\"); ",
									"    ",
									"    pm.expect(lotacao_response).eql(lotacao_request);",
									"});",
									"",
									"pm.test(\"Editar Classificação Operacional\", function () {",
									"    var cod_class_response = jsonData.result.classificacao_operacional[0].tipo_carroceria_id;",
									"    var cod_class_request = pm.environment.get(\"alt_carroceria_id\"); ",
									"    pm.expect(cod_class_response).eql(cod_class_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaClassComercial\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"classificacao_comercial_id\": \"{{class_comercial_id}}\",\n        \"vinculo_operacional\": [\n        \t{\n                \"clas_com_oper_id\": \"{{tipo_carroc_id}}\",\n                \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n                \"tipo_carroceria\": \"\",\n                \"carroceria\": \"\",\n                \"id\": \"0\",\n                \"operation\": \"DELETE\"\n            },\n            {\n                \"tipo_carroceria_id\": \"{{alt_carroceria_id}}\",\n                \"carroceria\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"descricao\": \"{{desc_clas_veiculo_edicao}}\",\n        \"lotacao_minima\": \"{{lotacao_edicao}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GRUPO NEGOCIADOR",
			"item": [
				{
					"name": "M220 - getPessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6486d51f-d852-4cc5-9b92-11b04f49020b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"function geraIdPessoa() {",
									"    var count = jsonData.result.count;",
									"    if (count > 0) count -= count;",
									"    if (count > 100) count = 100;",
									"    var posicao = Math.floor(Math.random() * count);",
									"    return posicao;",
									"}",
									"",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var aux = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg = jsonData.result.items[aux].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg\", cod_pessoa_grupo_neg);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg_2\", cod_pessoa_grupo_neg_2);",
									"});",
									"",
									"pm.test(\"Obter Código Pessoa Edição\", function () {",
									"    var aux = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg = jsonData.result.items[aux].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg_edicao\", cod_pessoa_grupo_neg);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var cod_pessoa_grupo_neg_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa_grupo_neg_edicao2\", cod_pessoa_grupo_neg_2);",
									"});",
									"",
									"//Participantes Operação Logística",
									"",
									"//Remetentes - Coleta",
									"pm.test(\"Gerar Remetentes\", function () {",
									"    var aux = geraIdPessoa();",
									"    var remetente_1 = jsonData.result.items[aux].cod_pessoa;",
									"    var mun_origem = jsonData.result.items[aux].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"remetente_1\", remetente_1);",
									"    pm.environment.set(\"mun_origem\", mun_origem);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var remetente_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    var mun_origem_2 = jsonData.result.items[aux_pos].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"remetente_edicao\", remetente_2);",
									"    pm.environment.set(\"mun_origem_edicao\", mun_origem_2);",
									"});",
									"",
									"//Destinatário - Entrega",
									"pm.test(\"Gerar Destinatários\", function () {",
									"    var aux = geraIdPessoa();",
									"    pm.environment.set(\"auxiliar_test\", aux);",
									"    ",
									"    var destinatario_1 = jsonData.result.items[aux].cod_pessoa;",
									"    var mun_destino = jsonData.result.items[aux].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"destinatario_1\", destinatario_1);",
									"    pm.environment.set(\"mun_destino\", mun_destino);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    pm.environment.set(\"aux_pos_test\", aux_pos);",
									"    ",
									"    var destinatario_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    var mun_destino_2 = jsonData.result.items[aux_pos].endereco_padrao[0].municipio_id;",
									"    pm.environment.set(\"destinatario_edicao\", destinatario_2);",
									"    pm.environment.set(\"mun_destino_edicao\", mun_destino_2);",
									"});",
									"",
									"//Tomador de Serviço",
									"pm.test(\"Gerar Tomador\", function () {",
									"    var aux = geraIdPessoa();",
									"    var tomador_serv_1 = jsonData.result.items[aux].cod_pessoa;",
									"    pm.environment.set(\"tomador_serv_1\", tomador_serv_1);",
									"    ",
									"    var aux_pos = geraIdPessoa();",
									"    var tomador_serv_2 = jsonData.result.items[aux_pos].cod_pessoa;",
									"    pm.environment.set(\"tomador_serv_edicao\", tomador_serv_2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getPessoa\",\n    \"parameters\": {\n        \"tipo_pessoa\": \"\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"razao_social\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"razao_social\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insGrupoNegociador",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f0e91f7e-7878-458b-8ba4-c52450e09a40",
								"exec": [
									"//Funcões",
									"function descGrupo() {",
									"    var array_descricao = [\"Central De Distribuição\", \"Central De Cargas\", \"Ag. Fretes\"];",
									"    var position = Math.round(Math.random() * 2);",
									"    var aux = Math.round((Math.random() * 100) + 10000);",
									"    var desc = array_descricao[position]+\" \"+aux;",
									"    ",
									"    return desc;",
									"}",
									"",
									"pm.test(\"Gerar Grupo Negociador\", function () {",
									"    var desc_grupo_neg = descGrupo();",
									"    pm.environment.set(\"desc_grupo_neg\", desc_grupo_neg);",
									"    var desc_grupo_neg_edicao = descGrupo();",
									"    pm.environment.set(\"desc_grupo_neg_edicao\", desc_grupo_neg_edicao);",
									"});",
									"",
									"// Gerar",
									"pm.test(\"Gerar Tipo Tabela Frete\", function () {",
									"    var tipo_tf = 1;",
									"    var tipo_tf_edicao = 2;",
									"    pm.environment.set(\"tipo_tf\", tipo_tf);",
									"    pm.environment.set(\"tipo_tf_edicao\", tipo_tf_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a9373b48-4758-49b4-9f7b-37a119e75137",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Grupo Negociador\", function () {",
									"    var id_grupo = jsonData.result.produto_cliente_seguro_id;",
									"    pm.environment.set(\"id_grupo\", id_grupo);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insGrupoNegociador\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"descricao\": \"{{desc_grupo_neg}}\",\n        \"permite_tabela_aberta\": 0,\n        \"emite_tabela_frete\": 0,\n        \"modelo_id\": \"{{tipo_tf}}\",\n        \"pessoas\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getGrupoNegociador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "577e4a84-f3ab-4fb6-873e-608bbfa23218",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_grupo_neg\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Insere Modelo Tabela Frete\", function () {",
									"    var modelo_tf_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_tf_resquest = pm.environment.get(\"tipo_tf\");",
									"    ",
									"    pm.expect(modelo_tf_response).eql(modelo_tf_resquest);",
									"});",
									"",
									"pm.test(\"Insere Código Pessoa\", function () {",
									"    var codigo_p_response = jsonData.result.items[0].pessoas[0].cod_pessoa;",
									"    var codigo_p_resquest = pm.environment.get(\"cod_participante_pf\");",
									"    pm.expect(codigo_p_response).eql(codigo_p_resquest);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getGrupoNegociador\",\n    \"parameters\": {\n        \"lista\": 0,\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"grupo_id\",\n                    \"operator\": \"equal\",\n                    \"value\": \"{{id_grupo}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altGrupoNegociador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c44f1a05-7e99-49b7-8723-314dd83d9d72",
								"exec": [
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altGrupoNegociador\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"grupo_id\": \"{{id_grupo}}\",\n        \"descricao\": \"{{desc_grupo_neg_edicao}}\",\n        \"permite_tabela_aberta\": 0,\n        \"emite_tabela_frete\": 0,\n        \"modelo_id\": \"{{tipo_tf_edicao}}\",\n        \"pessoas\": [\n        \t{\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getGrupoNegociadorUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d850a85c-47da-44b6-85ce-32eb434ce59e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"",
									"//Get Pessoa para Operação Logística",
									"pm.test(\"Obter ID Pessoa OPERLOG\", function () {",
									"    var id_cliente = jsonData.result.items[0].pessoas[0].cod_pessoa;",
									"    pm.environment.set(\"id_cliente\", id_cliente);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_resquest = pm.environment.get(\"desc_grupo_neg_edicao\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_resquest);",
									"});",
									"",
									"pm.test(\"Editar Modelo Tabela Frete\", function () {",
									"    var modelo_tf_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_tf_resquest = pm.environment.get(\"tipo_tf_edicao\");",
									"    ",
									"    pm.expect(modelo_tf_response).eql(modelo_tf_resquest);",
									"});",
									"",
									"pm.test(\"Editar Código Pessoa\", function () {",
									"    var codigo_p_response = jsonData.result.items[0].pessoas[0].cod_pessoa;",
									"    var codigo_p_resquest = pm.environment.get(\"cod_participante_pj\");",
									"    pm.expect(codigo_p_response).eql(codigo_p_resquest);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getGrupoNegociador\",\n    \"parameters\": {\n        \"lista\": 0,\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"grupo_id\",\n                    \"operator\": \"equal\",\n                    \"value\": \"{{id_grupo}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ROTA",
			"item": [
				{
					"name": "M220 - getMunicipio \"Jaraguá/GO\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fe10ca0-2772-43fa-bb4b-278dd64d4d9f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Municípios rota viagem",
									"pm.test(\"Obter Municipio Origem\", function () {",
									"    var origem_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").municipio_id;",
									"    pm.environment.set(\"origem_municipio_id\", origem_municipio_id);",
									"    ",
									"    var referencia_origem_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").referencia_id;",
									"    pm.environment.set(\"referencia_origem_id\", referencia_origem_id);",
									"    ",
									"    var origem_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").latitude;",
									"    pm.environment.set(\"origem_latitude\", origem_latitude);",
									"    ",
									"    var origem_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").longitude;",
									"    pm.environment.set(\"origem_longitude\", origem_longitude);",
									"});",
									"",
									"/*pm.test(\"Obter Municipio destino\", function () {",
									"    var destino_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").municipio_id;",
									"    pm.environment.set(\"destino_municipio_id\", destino_municipio_id);",
									"    ",
									"    var referencia_destino_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").referencia_id;",
									"    pm.environment.set(\"referencia_destino_id\", referencia_destino_id);",
									"    ",
									"    var destino_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").latitude;",
									"    pm.environment.set(\"destino_latitude\", destino_latitude);",
									"    ",
									"    var destino_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").longitude;",
									"    pm.environment.set(\"destino_longitude\", destino_longitude);",
									"});*/",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cabbeea3-ec9d-46b8-a6e1-bef203647b8a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"Jaraguá/GO\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio \"Marmeleiro/PR\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4117e57e-1823-4bbb-8263-595addc77860",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Municípios rota viagem",
									"/*pm.test(\"Obter Municipio Origem\", function () {",
									"    var origem_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").municipio_id;",
									"    pm.environment.set(\"origem_municipio_id\", origem_municipio_id);",
									"    ",
									"    var referencia_origem_id = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").referencia_id;",
									"    pm.environment.set(\"referencia_origem_id\", referencia_origem_id);",
									"    ",
									"    var origem_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").latitude;",
									"    pm.environment.set(\"origem_latitude\", origem_latitude);",
									"    ",
									"    var origem_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Jaraguá/GO\").longitude;",
									"    pm.environment.set(\"origem_longitude\", origem_longitude);",
									"});*/",
									"",
									"pm.test(\"Obter Municipio destino\", function () {",
									"    var destino_municipio_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").municipio_id;",
									"    pm.environment.set(\"destino_municipio_id\", destino_municipio_id);",
									"    ",
									"    var referencia_destino_id = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").referencia_id;",
									"    pm.environment.set(\"referencia_destino_id\", referencia_destino_id);",
									"    ",
									"    var destino_latitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").latitude;",
									"    pm.environment.set(\"destino_latitude\", destino_latitude);",
									"    ",
									"    var destino_longitude = jsonData.result.items.find(x => x.municipio_uf == \"Marmeleiro/PR\").longitude;",
									"    pm.environment.set(\"destino_longitude\", destino_longitude);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a15bb3a-ae38-4cd7-9f45-9182356827cf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"Marmeleiro/PR\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRota",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bdb7af45-304b-478b-9e5d-8301897b81b5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"var lista_municipios = jsonData.result.items;",
									"",
									"for ( let i in lista_municipios ) {",
									"    /*if (lista_municipios[i].origem === \"Jaraguá-GO\" &&  lista_municipios[i].destino === \"Marmeleiro-PR\") {*/",
									"    if (lista_municipios[i].origem === \"Jaraguá\" &&  lista_municipios[i].destino === \"Marmeleiro\") {",
									"        postman.setNextRequest(\"M220 - getTabelaFreteServico\");",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRota\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"descricao_rota\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"%Jaraguá%Marmeleiro%\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insRota",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2f2bb85-7474-4c09-9068-a682ab4fb51d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4835d284-1e0d-4722-940b-8b19ff3e5919",
								"exec": [
									"// distancia origem/destino",
									"pm.environment.set(\"descricao_rota\", \"Jaraguá/GO x Marmeleiro/PR\");",
									"pm.environment.set(\"distancia_padrao\", 1542.959);",
									"pm.environment.set(\"percurso_uf\", \"MG,SP\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insRota\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"descricao_rota\": \"{{descricao_rota}}\",\n        \"distancia_padrao\": \"{{distancia_padrao}}\",\n        \"descricao_via\": \"{{descricao_rota}}\",\n        \"percurso_uf\": \"{{percurso_uf}}\",\n        \"polilinha\": null,\n        \"referencia_origem_id\": \"{{referencia_origem_id}}\",\n        \"referencia_destino_id\": \"{{referencia_destino_id}}\",\n        \"origem_municipio_id\": \"{{origem_municipio_id}}\",\n        \"destino_municipio_id\": \"{{destino_municipio_id}}\",\n        \"origem_latitude\": \"{{origem_latitude}}\",\n        \"origem_longitude\": \"{{origem_longitude}}\",\n        \"destino_latitude\": \"{{destino_latitude}}\",\n        \"destino_longitude\": \"{{destino_longitude}}\",\n        \"roteiro_id\": null,\n        \"pontos_controle\": []\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CENARIO DE FRETE",
			"item": [
				{
					"name": "M220 - getTabelaFreteServico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "703165f0-b496-4af1-9bdd-7f892ae475d0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Serviço\", function () {",
									"    var tipo_servico_frete = jsonData.result.items[0].tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_frete\", tipo_servico_frete);",
									"    ",
									"    /*var tipo_servico_frete_edicao = jsonData.result.items[1].tipo_servico_id;*/",
									"    var tipo_servico_frete_edicao = jsonData.result.items.find(x => x.descricao === \"Conhecimento Normal\").tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_frete_edicao\", tipo_servico_frete_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteServico\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteClassificacaoComercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de56a14b-e52e-44ca-bdee-a7b3d673c6d0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Utilizar no update de M220 - altTabelaFrete",
									"pm.test(\"Obter Código Classificação Comercial\", function () {",
									"    var class_comercial_id_edicao = jsonData.result.items[0].classificacao_comercial_id;",
									"    pm.environment.set(\"class_comercial_id_edicao\", class_comercial_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteClassificacaoComercial\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"classificacao_comercial_id\",\n                    \"title\": \"columns.classificacao_comercial_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Data inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"Usuário atualização\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteTipoFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "941c787c-1e55-4767-9e80-a065bf6acdbc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Frete\", function () {",
									"    var frete_viagem = jsonData.result.items[0].tipo;",
									"    pm.environment.set(\"frete_viagem\", frete_viagem);",
									"    ",
									"    var frete_viagem_edicao = jsonData.result.items[1].tipo;",
									"    pm.environment.set(\"frete_viagem_edicao\", frete_viagem_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteTipoFrete\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVigenciaModelo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15bbcae2-46d0-45fe-a809-f9879a5566bd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Modelo Vigência\", function () {",
									"    var modelo_vigencia = jsonData.result.items[0].modelo_id;",
									"    pm.environment.set(\"modelo_vigencia\", modelo_vigencia);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVigenciaModelo\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteTipoNegociacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3675a7b3-c642-400f-ac51-34b07fe5bd2a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Negociação\", function () {",
									"    var tipo_neg_frete = jsonData.result.items[0].tipo_negociacao_id;",
									"    pm.environment.set(\"tipo_neg_frete\", tipo_neg_frete);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteTipoNegociacao\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getGeneralidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81428305-2a8c-4768-9eff-44cd659d3e3f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getGeneralidade\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVariaveisTipoNegociacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "215c4b87-2543-48d8-8140-6ac90e77d251",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Obter variáveis\", function () {",
									"    pm.environment.set(\"tf_vigencia_variaveis\", \"\");",
									"    ",
									"    var count = jsonData.result.items.length;",
									"    pm.environment.set(\"count_variaveis\", count);",
									"    ",
									"    var result = jsonData.result.items;",
									"    result = {\"variavel\": result};",
									"    ",
									"    pm.environment.set(\"tf_vigencia_variaveis\", JSON.stringify(result.variavel));",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVariaveisTipoNegociacao\",\n    \"parameters\": {\n        \"tipo_negociacao_id\": \"123456\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRota",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5a272f3-0fcf-43c8-80d9-2a7e6b8d6e40",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Rota\", function () {",
									"    var rota_tb = jsonData.result.items[0].rota_id;",
									"    pm.environment.set(\"rota_tb\", rota_tb);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "61da8c48-b9c2-4ad2-bb3f-099e1346d4eb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRota\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"descricao_rota\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"%Jaraguá%Marmeleiro%\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insTabelaFrete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "89372bfc-e9d2-4de6-b4b7-793f1a7593db",
								"exec": [
									"//Funcões",
									"function descGrupo() {",
									"    var array_descricao = \"Teste tabela frete\";",
									"    var aux = Math.round((Math.random() * 100) + 10000);",
									"    var desc = array_descricao+\" \"+aux;",
									"    ",
									"    return desc;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_tabela_frete = descGrupo();",
									"    pm.environment.set(\"desc_tabela_frete\", desc_tabela_frete);",
									"    var desc_tabela_frete_edicao = descGrupo();",
									"    pm.environment.set(\"desc_tabela_frete_edicao\", desc_tabela_frete_edicao);",
									"});",
									"",
									"function geraDataVigenciaInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataVigenciaInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_ini_vigencia = geraDataVigenciaInicio();",
									"    pm.environment.set(\"data_ini_vigencia\", data_ini_vigencia);",
									"    ",
									"    var data_ini_vigencia_edicao = DataVigenciaInicioEdicao();",
									"    pm.environment.set(\"data_ini_vigencia_edicao\", data_ini_vigencia_edicao);",
									"});",
									"",
									"pm.test(\"Gerar dados\", function () {",
									"    //Alerta de vencimento antecedente",
									"    var dia_alert_email = 10;",
									"    pm.environment.set(\"dia_alert_email\", dia_alert_email);",
									"    ",
									"    var dia_alert_email_edicao = 3;",
									"    pm.environment.set(\"dia_alert_email_edicao\", dia_alert_email_edicao);",
									"    ",
									"});",
									"",
									"//Request body",
									"var request = {",
									"    \"module\": \"M220\",",
									"    \"operation\": \"insTabelaFrete\",",
									"    \"parameters\": {",
									"        \"operation\": \"INSERT\",",
									"        \"tabela_frete_id\": null,",
									"        \"tabela_frete_id_pai\": null,",
									"        \"grupo_id\": \"{{id_grupo}}\",",
									"        \"descricao\": \"{{desc_tabela_frete}}\",",
									"        \"cif\": 1,",
									"        \"fob\": 1,",
									"        \"fob_expedido\": 1,",
									"        \"tipo_servico_id\": \"{{tipo_servico_frete_edicao}}\",",
									"        \"tipo\": \"{{frete_viagem}}\",",
									"        \"dias_alerta_email\": \"{{dia_alert_email}}\",",
									"        \"email_alerta\": \"{{email}}\",",
									"        \"vigencia\": [",
									"            {",
									"                \"operation\": \"INSERT\",",
									"                \"tabela_frete_vigencia_id\": null,",
									"                \"data_inicio\": \"{{data_ini_vigencia}}\",",
									"                \"data_termino\": \"{{data_futura}}\",",
									"                \"modelo_id\": \"{{modelo_vigencia}}\",",
									"                \"tipo_negociacao_id\": \"{{tipo_neg_frete}}\",",
									"                \"aprovado\": 0,",
									"                \"rota\": [",
									"                    {",
									"                        \"operation\": \"INSERT\",",
									"                        \"tabela_frete_rota_id\": null,",
									"                        \"rota_id\": \"{{rota_tb}}\",",
									"                        \"classificacao_natureza_id\": null,",
									"                        \"classificacao_comercial_id\": null,",
									"                        \"variavel_rota\": []",
									"                    }",
									"                ],",
									"            }",
									"        ],",
									"        \"pessoa\": [",
									"            {",
									"                \"operation\": \"INSERT\",",
									"                \"cod_pessoa\": \"{{cod_participante_pj}}\",",
									"                \"tabela_frete_pessoa_id\": null",
									"            }",
									"        ],",
									"        \"arquivo\": [],",
									"        \"generalidade\": []",
									"    }",
									"};",
									"",
									"var variaveis = JSON.parse(pm.environment.get(\"tf_vigencia_variaveis\"));",
									"",
									"for(var i = 0; i < variaveis.length; i++) {",
									"    variaveis[i].operation = \"INSERT\";",
									"    variaveis[i].tabela_frete_variavel_id = null;",
									"    ",
									"    if (variaveis[i].cod_variavel == \"ADEME\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"VALORUNITARIOPEDAGIO\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"OUTROS\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    //valor frete",
									"    else if (variaveis[i].cod_variavel == \"FRETEUNITARIO\"){",
									"        variaveis[i].tipo = 3;",
									"        variaveis[i].exibir_emissao = 1;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"VALORUNITARIOFRETE\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"DESPACHO\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"GRIS\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"SECCAT\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"TAXA_COLETA\"){",
									"        variaveis[i].tipo = 3;",
									"    }",
									"    ",
									"    else if (variaveis[i].cod_variavel == \"ALIQUOTAICMS\"){",
									"        variaveis[i].tipo = 2;",
									"        variaveis[i].formula = \"\";",
									"        variaveis[i].valor = 0;",
									"    }",
									"}",
									"",
									"request.parameters.vigencia[0].variavel = variaveis;",
									"",
									"var body = JSON.stringify(request);",
									"",
									"pm.environment.set(\"request_body\", body);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01bf07b3-d949-4fe7-b797-f95df9dd88a8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Tabela Frete\", function () {",
									"    var tabela_frete_id = jsonData.result.tabela_frete_id;",
									"    pm.environment.set(\"tabela_frete_id\", tabela_frete_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{request_body}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteDados",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07f5d1f1-59f7-4bca-95dc-dbc7aa827a57",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Tabela Frete Vigência\", function () {",
									"    var tabela_frete_vigencia_id = jsonData.result.tabela_frete[0].vigencia[0].tabela_frete_vigencia_id;",
									"    pm.environment.set(\"tabela_frete_vigencia_id\", tabela_frete_vigencia_id);",
									"});",
									"",
									"pm.test(\"Obter Código Tabela Frete Rota\", function () {",
									"    var tabela_frete_rota_id = jsonData.result.tabela_frete[0].vigencia[0].rota[0].tabela_frete_rota_id;",
									"    pm.environment.set(\"tabela_frete_rota_id\", tabela_frete_rota_id);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.tabela_frete[0].grupo_id;",
									"    var cod_grupo_request = pm.environment.get(\"id_grupo\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição Tabela Frete\", function () {",
									"    var descricao_response = jsonData.result.tabela_frete[0].descricao;",
									"    var descricao_request = pm.environment.get(\"desc_tabela_frete\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo CIF\", function () {",
									"    var cif_response = jsonData.result.tabela_frete[0].cif;",
									"    var cif_request = 1;",
									"",
									"    pm.expect(cif_response).eql(cif_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo FOB\", function () {",
									"    var fob_response = jsonData.result.tabela_frete[0].fob;",
									"    var fob_request = 1;",
									"",
									"    pm.expect(fob_response).eql(fob_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo FOB\", function () {",
									"    var fob_expedido_response = jsonData.result.tabela_frete[0].fob_expedido;",
									"    var fob_expedido_request = 1;",
									"",
									"    pm.expect(fob_expedido_response).eql(fob_expedido_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Serviço\", function () {",
									"    var tipo_servico_response = jsonData.result.tabela_frete[0].tipo_servico_id;",
									"    var tipo_servico_request = pm.environment.get(\"tipo_servico_frete_edicao\");",
									"",
									"    pm.expect(tipo_servico_response).eql(tipo_servico_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Viagem\", function () { //Nacional / Internacional",
									"    var tipo_viagem_response = jsonData.result.tabela_frete[0].tipo;",
									"    var tipo_viagem_request = pm.environment.get(\"frete_viagem\");",
									"    tipo_viagem_request = ''+tipo_viagem_request;",
									"",
									"    pm.expect(tipo_viagem_response).eql(tipo_viagem_request);",
									"});",
									"",
									"pm.test(\"Insere Dias de Alerta de Email\", function () {",
									"    var alerta_email_response = jsonData.result.tabela_frete[0].dias_alerta_email;",
									"    var alerta_email_request = pm.environment.get(\"dia_alert_email\");",
									"",
									"    pm.expect(alerta_email_response).eql(alerta_email_request);",
									"});",
									"",
									"pm.test(\"Insere Email para Alerta\", function () {",
									"    var email_alerta_response = jsonData.result.tabela_frete[0].email_alerta;",
									"    var email_alerta_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_alerta_response).eql(email_alerta_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início Vigência\", function () {",
									"    var inicio_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_inicio;",
									"    var inicio_vigencia_request = pm.environment.get(\"data_ini_vigencia\");",
									"",
									"    pm.expect(inicio_vigencia_response).eql(inicio_vigencia_request);",
									"});",
									"",
									"pm.test(\"Insere Data Término Vigência\", function () {",
									"    var termino_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_termino;",
									"    var termino_vigencia_request = pm.environment.get(\"data_futura\");",
									"",
									"    pm.expect(termino_vigencia_response).eql(termino_vigencia_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo Vigência\", function () {",
									"    var modelo_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].modelo_id;",
									"    var modelo_vigencia_request = pm.environment.get(\"modelo_vigencia\");",
									"",
									"    pm.expect(modelo_vigencia_response).eql(modelo_vigencia_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Negociação Frete\", function () {",
									"    var tipo_negociacao_response = jsonData.result.tabela_frete[0].vigencia[0].tipo_negociacao_id;",
									"    var tipo_negociacao_request = pm.environment.get(\"tipo_neg_frete\");",
									"",
									"    pm.expect(tipo_negociacao_response).eql(tipo_negociacao_request);",
									"});",
									"",
									"/*",
									"pm.test(\"Insere Classificação de Natureza\", function () {",
									"    var class_natureza_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_natureza_id;",
									"    var class_natureza_request = pm.environment.get(\"class_nat_id\");",
									"",
									"    pm.expect(class_natureza_response).eql(class_natureza_request);",
									"});",
									"",
									"pm.test(\"Insere Classificação Comercial\", function () {",
									"    var class_comercial_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_comercial_id;",
									"    var class_comercial_request = pm.environment.get(\"class_comercial_id\");",
									"",
									"    pm.expect(class_comercial_response).eql(class_comercial_request);",
									"});",
									"*/",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_origem_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].rota_id;",
									"    var rota_origem_request = pm.environment.get(\"rota_tb\");",
									"",
									"    pm.expect(rota_origem_response).eql(rota_origem_request);",
									"});",
									"",
									"pm.test(\"Insere Cliente\", function () {",
									"    var cliente_response = jsonData.result.tabela_frete[0].pessoas[0].cod_pessoa;",
									"    var cliente_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(cliente_response).eql(cliente_request);",
									"});",
									"",
									"//Obter variáveis edição",
									"pm.test(\"Obter variáveis\", function () {",
									"    pm.environment.set(\"tf_vigencia_variaveis_edicao\", \"\");",
									"    ",
									"    var result = jsonData.result.tabela_frete[0].vigencia[0].variavel;",
									"    result = {\"variavel\": result};",
									"    ",
									"    pm.environment.set(\"tf_vigencia_variaveis_edicao\", JSON.stringify(result.variavel));",
									"});",
									"",
									"pm.test(\"Count variáveis\" , function () {",
									"    var count_response = jsonData.result.tabela_frete[0].vigencia[0].variavel.length;",
									"    pm.environment.set(\"count_variaveis_edicao\", count_response); ",
									"    var count_request = pm.environment.get(\"count_variaveis\");",
									"    pm.expect(count_response).eql(count_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteDados\",\n    \"parameters\": {\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altTabelaFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0fa1c63-92b2-455e-a8b8-93d508e46195",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7dc5ff60-b3bb-433a-95c8-0d9d53a247cc",
								"exec": [
									"var request_edicao = {",
									"    \"module\": \"M220\",",
									"    \"operation\": \"altTabelaFrete\",",
									"    \"parameters\": {",
									"        \"operation\": \"UPDATE\",",
									"        \"tabela_frete_id\": \"{{tabela_frete_id}}\",",
									"        \"tabela_frete_id_pai\": null,",
									"        \"grupo_id\": \"{{id_grupo}}\",",
									"        \"descricao\": \"{{desc_tabela_frete_edicao}}\",",
									"        \"cif\": 0,",
									"        \"fob\": 0,",
									"        \"fob_expedido\": 0,",
									"        \"tipo_servico_id\": \"{{tipo_servico_frete_edicao}}\",",
									"        \"tipo\": \"{{frete_viagem}}\",",
									"        \"dias_alerta_email\": \"{{dia_alert_email_edicao}}\",",
									"        \"email_alerta\": \"{{email_edicao}}\",",
									"        \"vigencia\": [",
									"            {",
									"                \"operation\": \"UPDATE\",",
									"                \"tabela_frete_vigencia_id\": \"{{tabela_frete_vigencia_id}}\",",
									"                \"data_inicio\": \"{{data_ini_vigencia}}\",",
									"                \"data_termino\": \"{{data_futura_edicao}}\",",
									"                \"modelo_id\": \"{{modelo_vigencia}}\",",
									"                \"tipo_negociacao_id\": \"{{tipo_neg_frete}}\",",
									"                \"aprovado\": 1,",
									"                \"rota\": [",
									"                    {",
									"                        \"operation\": \"DELETE\",",
									"                        \"rota_id\": \"{{rota_tb}}\",",
									"                        \"tabela_frete_rota_id\": \"{{tabela_frete_rota_id}}\",",
									"                        \"classificacao_natureza_id\": null,",
									"                        \"classificacao_comercial_id\": null,",
									"                        \"variavel_rota\": []",
									"                    },",
									"                    {",
									"                        \"operation\": \"INSERT\",",
									"                        \"tabela_frete_rota_id\": null,",
									"                        \"rota_id\": \"{{rota_tb}}\",",
									"                        \"classificacao_natureza_id\": null,",
									"                        \"classificacao_comercial_id\": null,",
									"                    }",
									"                ],",
									"            }",
									"        ],",
									"        \"pessoa\": [",
									"            {",
									"                \"operation\": \"UPDATE\",",
									"                \"cod_pessoa\": \"{{cod_participante_pj}}\",",
									"                \"tabela_frete_pessoa_id\": null",
									"            }",
									"        ],",
									"        \"arquivo\": [],",
									"        \"generalidade\": []",
									"    }",
									"}",
									"",
									"var variaveis = JSON.parse(pm.environment.get(\"tf_vigencia_variaveis_edicao\"));",
									"",
									"request_edicao.parameters.vigencia[0].variavel = variaveis;",
									"",
									"var body_edicao = JSON.stringify(request_edicao);",
									"",
									"pm.environment.set(\"request_body_edicao\", body_edicao);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{request_body_edicao}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFreteDadosUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e10c5fe-67b8-4104-9305-d36a10991c62",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das edições",
									"pm.test(\"Editar Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.tabela_frete[0].grupo_id;",
									"    var cod_grupo_request = pm.environment.get(\"id_grupo\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									"",
									"pm.test(\"Editar Descrição Tabela Frete\", function () {",
									"    var descricao_response = jsonData.result.tabela_frete[0].descricao;",
									"    var descricao_request = pm.environment.get(\"desc_tabela_frete_edicao\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo CIF\", function () {",
									"    var cif_response = jsonData.result.tabela_frete[0].cif;",
									"    var cif_request = 0;",
									"",
									"    pm.expect(cif_response).eql(cif_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo FOB\", function () {",
									"    var fob_response = jsonData.result.tabela_frete[0].fob;",
									"    var fob_request = 0;",
									"",
									"    pm.expect(fob_response).eql(fob_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo FOB Expedido\", function () {",
									"    var fob_expedido_response = jsonData.result.tabela_frete[0].fob_expedido;",
									"    var fob_expedido_request = 0;",
									"",
									"    pm.expect(fob_expedido_response).eql(fob_expedido_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Serviço\", function () {",
									"    var tipo_servico_response = jsonData.result.tabela_frete[0].tipo_servico_id;",
									"    var tipo_servico_request = pm.environment.get(\"tipo_servico_frete_edicao\");",
									"",
									"    pm.expect(tipo_servico_response).eql(tipo_servico_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Viagem\", function () { //Nacional / Internacional",
									"    var tipo_viagem_response = jsonData.result.tabela_frete[0].tipo;",
									"    var tipo_viagem_request = pm.environment.get(\"frete_viagem\");",
									"    tipo_viagem_request = ''+tipo_viagem_request;",
									"",
									"    pm.expect(tipo_viagem_response).eql(tipo_viagem_request);",
									"});",
									"",
									"pm.test(\"Editar Dias de Alerta de Email\", function () {",
									"    var alerta_email_response = jsonData.result.tabela_frete[0].dias_alerta_email;",
									"    var alerta_email_request = pm.environment.get(\"dia_alert_email_edicao\");",
									"",
									"    pm.expect(alerta_email_response).eql(alerta_email_request);",
									"});",
									"",
									"pm.test(\"Editar Email para Alerta\", function () {",
									"    var email_alerta_response = jsonData.result.tabela_frete[0].email_alerta;",
									"    var email_alerta_request = pm.environment.get(\"email_edicao\");",
									"",
									"    pm.expect(email_alerta_response).eql(email_alerta_request);",
									"});",
									"",
									"pm.test(\"Editar Data Início Vigência\", function () {",
									"    var inicio_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_inicio;",
									"    var inicio_vigencia_request = pm.environment.get(\"data_ini_vigencia\");",
									"",
									"    pm.expect(inicio_vigencia_response).eql(inicio_vigencia_request);",
									"});",
									"",
									"pm.test(\"Editar Data Término Vigência\", function () {",
									"    var termino_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].data_termino;",
									"    var termino_vigencia_request = pm.environment.get(\"data_futura_edicao\");",
									"",
									"    pm.expect(termino_vigencia_response).eql(termino_vigencia_request);",
									"});",
									"",
									"pm.test(\"Editar Modelo Vigência\", function () {",
									"    var modelo_vigencia_response = jsonData.result.tabela_frete[0].vigencia[0].modelo_id;",
									"    var modelo_vigencia_request = pm.environment.get(\"modelo_vigencia\");",
									"",
									"    pm.expect(modelo_vigencia_response).eql(modelo_vigencia_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Negociação Frete\", function () {",
									"    var tipo_negociacao_response = jsonData.result.tabela_frete[0].vigencia[0].tipo_negociacao_id;",
									"    var tipo_negociacao_request = pm.environment.get(\"tipo_neg_frete\");",
									"",
									"    pm.expect(tipo_negociacao_response).eql(tipo_negociacao_request);",
									"});",
									"",
									"/*",
									"pm.test(\"Editar Classificação de Natureza\", function () {",
									"    var class_natureza_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_natureza_id;",
									"    var class_natureza_request = pm.environment.get(\"class_nat_id\");",
									"",
									"    pm.expect(class_natureza_response).eql(class_natureza_request);",
									"});",
									"",
									"pm.test(\"Editar Classificação Comercial\", function () {",
									"    var class_comercial_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].classificacao_comercial_id;",
									"    var class_comercial_request = pm.environment.get(\"class_comercial_id\");",
									"",
									"    pm.expect(class_comercial_response).eql(class_comercial_request);",
									"});",
									"*/",
									"",
									"pm.test(\"Editar Rota\", function () {",
									"    var rota_origem_response = jsonData.result.tabela_frete[0].vigencia[0].rota[0].rota_id;",
									"    var rota_origem_request = pm.environment.get(\"rota_tb\");",
									"",
									"    pm.expect(rota_origem_response).eql(rota_origem_request);",
									"});",
									"",
									"pm.test(\"Editar Cliente\", function () {",
									"    var cliente_response = jsonData.result.tabela_frete[0].pessoas[0].cod_pessoa;",
									"    var cliente_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(cliente_response).eql(cliente_request);",
									"});",
									"",
									"pm.test(\"Count variáveis\" , function () {",
									"    var count_response = jsonData.result.tabela_frete[0].vigencia[0].variavel.length;",
									"    var count_request = pm.environment.get(\"count_variaveis_edicao\");",
									"    pm.expect(count_response).eql(count_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFreteDados\",\n    \"parameters\": {\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "grupo_id: {{id_grupo}} //grupo negociador",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "14700923-3728-4493-b349-7481e0a3a0ee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bb89dae1-d790-461f-ae4b-eed52fc49702",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OPERACAO",
			"item": [
				{
					"name": "M220 - getProdutoFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2171edd8-cee5-4a53-91c1-cbded7c7a2f0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Frete\", function () {",
									"    var tipo_frete = jsonData.result.items[0].tipo_frete;",
									"    pm.environment.set(\"tipo_frete\", tipo_frete);",
									"    ",
									"    var tipo_frete_edicao = jsonData.result.items[0].tipo_frete;",
									"    /*var tipo_frete_edicao = jsonData.result.items.find(x => x.descricao == \"FRETE PROPRIO INTERESTADUAL\").produto_id;*/",
									"    pm.environment.set(\"tipo_frete_edicao\", tipo_frete_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"API_TEST\",\n    \"operation\": \"executaQuery\",\n    \"parameters\": {\n        \"query\": {\n            \"sql_query\": \"select fiscal.pkg_conhecimento.fnc_produto_frete(p_municipio_origem_id => 20290, p_municipio_destino_id => 57355, p_frete_proprio => 1) as tipo_frete from dual\"\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getRegraFiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c51ac18-f7c1-4298-943d-5f7e4a6a9206",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Regra Fiscal\", function () {",
									"    var regra_fiscal = jsonData.result.items[0].regra_fiscal_id;",
									"    pm.environment.set(\"regra_fiscal\", regra_fiscal);",
									"    ",
									"    var regra_fiscal_edicao = jsonData.result.items[1].regra_fiscal_id;",
									"    pm.environment.set(\"regra_fiscal_edicao\", regra_fiscal_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getRegraFiscal\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTipoServicoComercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d7a1659-5b52-4581-812d-f655e71d099a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo de Serviço\", function () {",
									"    var tipo_servico_id = jsonData.result.items[0].tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_id\", tipo_servico_id);",
									"    ",
									"    var tipo_servico_id_edicao = jsonData.result.items.find(x => x.descricao == \"Conhecimento Normal\").tipo_servico_id;",
									"    pm.environment.set(\"tipo_servico_id_edicao\", tipo_servico_id_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTipoServicoComercial\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOrganograma",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f03bc7c3-2514-4b48-8188-d70a78786022",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Organograma\", function () {",
									"    var cod_organograma = jsonData.result.items[0].cod_organograma;",
									"    pm.environment.set(\"cod_organograma\", cod_organograma);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOrganograma\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"cod_organograma\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"unidade_negocio\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCentroCustoGerencial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad1624e0-255e-41c3-9983-d286c1fc05f4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Centro Custo\", function () {",
									"    var id_centro_custo = jsonData.result.items[0].organizacional_id;",
									"    pm.environment.set(\"id_centro_custo\", id_centro_custo);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCentroCustoGerencial\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_completa\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_completa\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getEspecie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b66ed98b-2dac-4d99-8cff-0d51e77535c8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Espécie\", function () {",
									"    var cod_especie = jsonData.result.items[0].num_especie;",
									"    pm.environment.set(\"cod_especie\", cod_especie);",
									"    ",
									"    var cod_especie_edicao = jsonData.result.items[1].num_especie;",
									"    pm.environment.set(\"cod_especie_edicao\", cod_especie_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getEspecie\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getApolice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ef4328f-0251-4a61-96ff-6edbcda1b9a9",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Seguradora\", function () {",
									"    var id_seguradora = jsonData.result.items[0].id_seguradora;",
									"    pm.environment.set(\"id_seguradora\", id_seguradora);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getApolice\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"razao_social\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"razao_social\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getTabelaFrete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eae113d-8998-437f-b21f-2f07bc8f4cfd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getTabelaFrete\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogistica XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7309415-e1ba-4a3d-afd5-fc6ad536d1a6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count === 1){",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - getLoteLista XML\");",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - getClienteLista Remetente1 XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"value\": \"Operação de Teste\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"equal\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Remetente1 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3938999a-ae2b-450f-9180-b6c0547aa81e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.environment.set(\"remetente1XML\",jsonData.result.items[0].cod_pessoa);",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - getClienteLista Remetente2 XML\");",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - manipulaClientePJ Remetente1 XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"11325194000111\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ Remetente1 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20c06793-d0c0-49bd-8a74-37816db85982",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter código remetente1\", function(){",
									"    pm.environment.set(\"remetente1XML\",jsonData.result.cod_pessoa);",
									"});",
									"",
									"pm.test(\"Validar cnpj do remetente1\", function(){",
									"    pm.expect(jsonData.result.cnpj_cpf).eql('11325194000111')",
									"});",
									"",
									"pm.test(\"Validar a razão social do remetente1\", function(){",
									"    pm.expect(jsonData.result.razao_social).eql('POSTO BELA VISTA LTDA')",
									"});",
									"",
									"pm.test(\"Validar a nome fantasia do remetente1\", function(){",
									"    pm.expect(jsonData.result.nome_fantasia).eql('POSTO TABOCAO XI - BELA VISTA GO')",
									"});",
									"",
									"pm.test(\"Validar a inscrição estadual do remetente1\", function(){",
									"    pm.expect(jsonData.result.inscricao_estadual).eql('104599367')",
									"});",
									"",
									"pm.test(\"Validar o cnae do remetente1\", function(){",
									"    pm.expect(jsonData.result.cnae).eql('4731800')",
									"});",
									"",
									"pm.test(\"Validar o cep do remetente1\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].cep).eql('75240000')",
									"});",
									"",
									"pm.test(\"Validar o id do municipio do remetente1\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].municipio_id).eql(90395)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dee4833d-d55b-49c2-90ad-d86e5d1f4fb0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"11325194000111\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"POSTO BELA VISTA LTDA\",\n        \"nome_fantasia\": \"POSTO TABOCAO XI - BELA VISTA GO\",\n        \"data_nascimento\": null,\n        \"cnae\": \"4731800\",\n        \"cod_atividade_fiscal\": \"1\",\n        \"cod_regime_tributario\": \"3\",\n        \"tipo_lucro\": \"1\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"75240000\",\n                \"uf\": \"GO\",\n                \"logradouro\": \"RUA JOSE ALVES DE ASSIS\",\n                \"numero\": \"83\",\n                \"complemento\": \"\",\n                \"bairro\": \"SETOR OESTE\",\n                \"municipio_id\": \"90395\",\n                \"cod_endereco_tipo\": \"1\",\n                \"endereco_padrao\": \"1\",\n                \"cod_atividade_fiscal\": \"1\",\n                \"inscricao_estadual\": \"104599367\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"42999615525\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"2\",\n                \"telefone_padrao\": \"1\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"1\",\n                \"email\": \"teste@testekmm.com.br\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"1\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Remetente2 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3e736f1-fe79-401e-a140-3f83b2605c95",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.environment.set(\"remetente2XML\",jsonData.result.items[0].cod_pessoa);",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - getClienteLista Destinatário XML\");",
									"        ",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - manipulaClientePJ Remetente2 XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"07031916000158\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ Remetente2 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d81ff38c-f236-4cf3-b202-e86760361c1d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter código remetente2\", function(){",
									"    pm.environment.set(\"remetente2XML\",jsonData.result.cod_pessoa);",
									"});",
									"",
									"pm.test(\"Validar cnpj do remetente2\", function(){",
									"    pm.expect(jsonData.result.cnpj_cpf).eql('07031916000158')",
									"});",
									"",
									"pm.test(\"Validar a razão social do remetente2\", function(){",
									"    pm.expect(jsonData.result.razao_social).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a nome fantasia do remetente2\", function(){",
									"    pm.expect(jsonData.result.nome_fantasia).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a inscrição estadual do remetente2\", function(){",
									"    pm.expect(jsonData.result.inscricao_estadual).eql('9032087245')",
									"});",
									"",
									"pm.test(\"Validar o cnae do remetente2\", function(){",
									"    pm.expect(jsonData.result.cnae).eql('4930202')",
									"});",
									"",
									"pm.test(\"Validar o cep do remetente2\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].cep).eql('85887000')",
									"});",
									"",
									"pm.test(\"Validar o id do municipio do remetente2\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].municipio_id).eql(57398)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "825de12d-e236-48a4-b456-e53f388ba3bc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"07031916000158\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"nome_fantasia\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"data_nascimento\": null,\n        \"cnae\": \"4930202\",\n        \"cod_atividade_fiscal\": \"1\",\n        \"cod_regime_tributario\": \"3\",\n        \"tipo_lucro\": \"1\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"85887000\",\n                \"uf\": \"PR\",\n                \"logradouro\": \"AV BORGES DE MEDEIROS\",\n                \"numero\": \"1257\",\n                \"complemento\": \"\",\n                \"bairro\": \"CENTRO\",\n                \"municipio_id\": \"57398\",\n                \"cod_endereco_tipo\": \"1\",\n                \"endereco_padrao\": \"1\",\n                \"cod_atividade_fiscal\": \"1\",\n                \"inscricao_estadual\": \"9032087245\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"42999615525\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"2\",\n                \"telefone_padrao\": \"1\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"1\",\n                \"email\": \"teste@testekmm.com.br\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"1\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getClienteLista Destinatário XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f12ba856-3719-4e49-9600-ec746b529378",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.environment.set(\"destinatarioXML\",jsonData.result.items[0].cod_pessoa);",
									"        pm.expect(count).above(0);",
									"        postman.setNextRequest(\"M220 - insOperacao XML\");",
									"    }else{",
									"        pm.expect(count).eql(0);",
									"        postman.setNextRequest(\"M220 - manipulaClientePJ Destinatário XML\");",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getClienteLista\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"cnpj_cpf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"07031916001200\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaClientePJ Destinatário XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f237e672-d388-4ac0-a504-8f80f2b31e18",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test(\"Obter código destinatário\", function(){",
									"    pm.environment.set(\"destinatarioXML\",jsonData.result.cod_pessoa);",
									"});",
									"",
									"pm.test(\"Validar cnpj do destinatário\", function(){",
									"    pm.expect(jsonData.result.cnpj_cpf).eql('07031916001200')",
									"});",
									"",
									"pm.test(\"Validar a razão social do destinatário\", function(){",
									"    pm.expect(jsonData.result.razao_social).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a nome fantasia do destinatário\", function(){",
									"    pm.expect(jsonData.result.nome_fantasia).eql('VIA LACTEOS TRANSPORTES EIRELI')",
									"});",
									"",
									"pm.test(\"Validar a inscrição estadual do destinatário\", function(){",
									"    pm.expect(jsonData.result.inscricao_estadual).eql('105256005')",
									"});",
									"",
									"pm.test(\"Validar o cnae do destinatário\", function(){",
									"    pm.expect(jsonData.result.cnae).eql('4930202')",
									"});",
									"",
									"pm.test(\"Validar o cep do destinatário\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].cep).eql('74703130')",
									"});",
									"",
									"pm.test(\"Validar o id do municipio do destinatário\", function(){",
									"    pm.expect(jsonData.result.enderecos[0].municipio_id).eql(19887)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "284b9421-1096-41b5-955c-bd942fd1e336",
								"exec": [
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCnpj() {",
									"\tvar n = 9;",
									"\tvar n1  = gera_random(n);",
									"\tvar n2  = gera_random(n);",
									" \tvar n3  = gera_random(n);",
									" \tvar n4  = gera_random(n);",
									" \tvar n5  = gera_random(n);",
									"\tvar n6  = gera_random(n);",
									" \tvar n7  = gera_random(n);",
									" \tvar n8  = gera_random(n);",
									" \tvar n9  = 0;//gera_random(n);",
									" \tvar n10 = 0;//gera_random(n);",
									" \tvar n11 = 0;//gera_random(n);\t",
									" \tvar n12 = 1;//gera_random(n);\t\t",
									"\tvar d1 = n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;",
									"\td1 = 11 - (mod(d1,11) );",
									"\t\t \t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t\t \t",
									" \tvar d2 = d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;",
									" \td2 = 11 - (mod(d2,11) );",
									"\t\t \t",
									" \tif (d2 >= 10) d2 = 0;",
									"\t\t \t",
									"\tvar gera_cnpj = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+d1+d2;",
									"\t\t\t",
									"\treturn gera_cnpj;",
									"}",
									"",
									"pm.test(\"Gerar CNPJ\", function () {//Participante",
									"    var cnpj_participante = geraCnpj();",
									"    pm.environment.set(\"cnpj_participante\", cnpj_participante);",
									"});",
									"function geraTipoLucro() {",
									"    var lucro = Math.floor((Math.random() * 2) + 1);",
									"    return lucro;",
									"} ",
									"",
									"pm.test(\"Gerar Tipo de Lucro\", function () {",
									"    var tipo_lucro = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro\", tipo_lucro);",
									"    ",
									"    var tipo_lucro_edicao = geraTipoLucro();",
									"    pm.environment.set(\"tipo_lucro_edicao\", tipo_lucro_edicao);",
									"});",
									"",
									"",
									"//Gerar Nome Fantasia",
									"function geraNomeFantasia() {",
									"    var array_nome = [\"TRANS\", \"LOG\", \"TRANSPORTES\", \"EXPRESS\", \"EXPRESSO\", \"HORTIFRUTI\", \"LOGISTICA\", \"RAPIDO\", \"FAZENDA\", \"IRMAOS\", \"COMERCIO\", \"BANALORI\", \"IGARASHI\"];",
									"    var comp_nome = [\"LUCAS\", \"LUIZ\", \"MATEUS\", \"GUILHERME\", \"PEDRO\", \"ALICE\", \"ISABELLA\", \"AFONSO\", \"SOPHIA\", \"VALENTIM\", \"ARTHUR\", \"MIGUEL\", \"DAVI\"];",
									"    var position = Math.round(Math.random() * 11);",
									"    ",
									"    var fantasia = array_nome[position] + ' ' + comp_nome[position];",
									"    ",
									"    return fantasia;",
									"}",
									"",
									"pm.test(\"Gerar Nome Fantasia\", function () {",
									"    //Participante",
									"    var nome_fant_participante = geraNomeFantasia();",
									"    var nome_fant_participante_edicao = geraNomeFantasia();",
									"    ",
									"    pm.environment.set(\"nome_fant_participante\", nome_fant_participante);",
									"    pm.environment.set(\"nome_fant_participante_edicao\", nome_fant_participante_edicao);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaCliente\",\n    \"parameters\": {\n        \"cod_pessoa\": null,\n        \"cnpj_cpf\": \"07031916001200\",\n        \"cod_sexo\": \"\",\n        \"razao_social\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"nome_fantasia\": \"VIA LACTEOS TRANSPORTES EIRELI\",\n        \"data_nascimento\": null,\n        \"cnae\": \"4930202\",\n        \"cod_atividade_fiscal\": \"1\",\n        \"cod_regime_tributario\": \"3\",\n        \"tipo_lucro\": \"1\",\n        \"enderecos\": [\n            {\n                \"cod_endereco\": null,\n                \"cep\": \"74703130\",\n                \"uf\": \"GO\",\n                \"logradouro\": \"Avenida Monlevad\",\n                \"numero\": \"99\",\n                \"complemento\": \"\",\n                \"bairro\": \"JD NOVO MUNDO\",\n                \"municipio_id\": \"19887\",\n                \"cod_endereco_tipo\": \"1\",\n                \"endereco_padrao\": \"1\",\n                \"cod_atividade_fiscal\": \"1\",\n                \"inscricao_estadual\": \"105256005\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"telefone\": \"42999615525\",\n                \"cod_telefone\": null,\n                \"telefone_ddd\": \"\",\n                \"telefone_tipo_id\": \"2\",\n                \"telefone_padrao\": \"1\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"email_tipo_id\": \"1\",\n                \"email\": \"teste@testekmm.com.br\",\n                \"cod_email\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"1\",\n                \"endereco\": \"\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insOperacao XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc94c894-5d97-46e0-98bc-058dcf6acd21",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Operação\", function () {",
									"    var operacao_id = jsonData.result.operacao_id;",
									"    pm.environment.set(\"operacao_idXML\", operacao_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c8d26f7a-2be5-4ce8-b76d-c0e85e84dbaf",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Informação Opcional\", function () {",
									"    var info_opcional = \"Teste Operação\"",
									"    pm.environment.set(\"info_opcional\", info_opcional);",
									"    ",
									"    var info_opcional_edicao = \"Teste Operação Editar\";",
									"    pm.environment.set(\"info_opcional_edicao\", info_opcional_edicao);",
									"});",
									"",
									"//Gerar tipo de frete",
									"//Próprio/subcontratado",
									"pm.test(\"Gerar tipo de frete\", function () {",
									"    var tipo_frete_contrato = 1; //próprio",
									"    var tipo_frete_contrato_edicao = 0; //subcontratado",
									"    ",
									"    pm.environment.set(\"tipo_frete_contrato\", tipo_frete_contrato);",
									"    pm.environment.set(\"tipo_frete_contrato_edicao\", tipo_frete_contrato_edicao);",
									"});",
									"",
									"pm.test(\"Gerar limite de CTE\", function () {",
									"    var limite_num_cte = 5;",
									"    var limite_num_cte_edicao = 20;",
									"    pm.environment.set(\"limite_num_cte\", limite_num_cte);",
									"    pm.environment.set(\"limite_num_cte_edicao\", limite_num_cte_edicao);",
									"});",
									"",
									"//Tipo Documento",
									"pm.test(\"Gerar Tipo de Documento\", function () {",
									"    var tipo_documento = 1; //Cte individual",
									"    pm.environment.set(\"tipo_documento\", tipo_documento);",
									"});",
									"",
									"//Tipo Quitação",
									"pm.test(\"Gerar Quitação\", function () {",
									"    var quitacao_liberada = Math.floor(Math.random() * 3);",
									"    pm.environment.set(\"quitacao_liberada\", quitacao_liberada);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insOperacao\",\n    \"parameters\": {\n        \"operacao_id\": null,\n        \"descricao\": \"Operação de Teste\",\n        \"cod_negociador\": \"{{id_cliente}}\",\n        \"operacao_id_repom\": null,\n        \"filial_emissao\": [\n            {\n                \"cod_organograma\": \"{{cod_organograma}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"centro_custo\": [\n            {\n                \"organizacional_id\": \"{{id_centro_custo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"num_especie\": \"{{cod_especie}}\",\n        \"tipo_frete\": \"{{tipo_frete}}\",\n        \"id_seguradora\": \"{{id_seguradora}}\",\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"frete_proprio\": \"{{tipo_frete_contrato_edicao}}\",\n        \"regra_fiscal_id\": \"{{regra_fiscal}}\",\n        \"percentual_maximo_adto\": null,\n        \"exige_aprovacao_adiantamento\": 0,\n        \"emite_multimodal\": null,\n        \"indicador_negociavel\": null,\n        \"tipo_pagamento_id\": null,\n        \"informacoes_adicionais\": \"{{info_opcional}}\",\n        \"reutiliza_doc_fiscal\": 0,\n        \"quitacao_liberada\": \"{{quitacao_liberada}}\",\n        \"tipo_servico_id\": \"{{tipo_servico_id}}\",\n        \"operacao_vinculada_otm\": 0,\n        \"tipo_documento\": \"{{tipo_documento}}\",\n        \"cte_globalizado_rem_dest\": null,\n        \"quitacao_quebra_peso\": 0,\n        \"limite_cte_romaneio\": \"{{limite_num_cte}}\",\n        \"participantes\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente1XML}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente2XML}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",   \n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatarioXML}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{tomador_serv_1}}\",\n                \"tipo_cliente\": 4\n            }\n        ],\n        \"municipio\": [\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_origem}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"90395\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"57398\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_destino}}\",\n                \"origem_destino\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"90395\",\n                \"origem_destino\": 1\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						},
						"description": "Executar getPessoa(GRUPO NEGOCIADOR) antes do insOperacao, para teste unitário."
					},
					"response": []
				},
				{
					"name": "M220 - getLoteLista XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f5f5527-e25b-4c80-b3ef-088bf2f1662c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        pm.expect(count).above(0);",
									"    } else{",
									"        pm.expect(count).eql(0);",
									"    }",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Obter lote_id\", function () {",
									"    /*var loteIdXML = jsonData.result.items.find(x => x.operacao === \"Muvly Interestadual\").lote_id;*/",
									"    var count = jsonData.result.count;",
									"    if(count !== 0){",
									"        var loteIdXML = jsonData.result.items.find(x => x.operacao === \"Operação de Teste\").lote_id;",
									"        pm.environment.set(\"loteIdXML\", loteIdXML);",
									"        postman.setNextRequest(\"M220 - getXMLDadosNFE1 XML\");",
									"    } else{",
									"        postman.setNextRequest(\"M220 - insLote XML\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"localizar_cadastro\": 1,\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"operacao\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"Operação de Teste\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote XML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "670b70e0-37f1-4ccf-a7f2-0b2d1bc5738d",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500);",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minino = Math.round(Math.random() * 1000) + 15000;",
									"    return val_minino;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2f413895-7916-4966-9135-567e296cb3e6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"loteIdXML\", lote_id);",
									"    postman.setNextRequest(\"M220 - getXMLDadosNFE1 XML\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"Lote de Teste\",\n\t\t\"operacao_id\":\"{{operacao_idXML}}\",\n\t\t\"operacao\":\"\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE1 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34b21a43-add9-4fa0-8874-a06d2015a468",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var numero_nfe_xml = jsonData.result.params.numero;",
									"    pm.environment.set(\"numero_nfe_xml\", numero_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var serie_nfe_xml = jsonData.result.params.serie;",
									"    pm.environment.set(\"serie_nfe_xml\", serie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Data Emissão NFe\", function () {",
									"    var data_emissao_nfe_xml = jsonData.result.params.data_emissao;",
									"    pm.environment.set(\"data_emissao_nfe_xml\", data_emissao_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml\", cod_end_remetente_xml);",
									"    ",
									"    var municipio_origem_xml = jsonData.result.params.endereco_remetente[0].municipio;",
									"    pm.environment.set(\"municipio_origem_xml\", municipio_origem_xml);",
									"});",
									"",
									"pm.test(\"Obter Destinatário NFe\", function () {",
									"    var cod_destinatario_xml = jsonData.result.params.cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario_xml\", cod_destinatario_xml);",
									"    ",
									"    var cod_end_destinatario_xml = jsonData.result.params.endereco_destinatario[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_destinatario_xml\", cod_end_destinatario_xml);",
									"    ",
									"     var municipio_destino_xml = jsonData.result.params.endereco_destinatario[0].municipio;",
									"    pm.environment.set(\"municipio_destino_xml\", municipio_destino_xml);",
									"});",
									"",
									"pm.test(\"Obter Modelo NFe\", function () {",
									"    var modelo_xml = jsonData.result.params.modelo;",
									"    pm.environment.set(\"modelo_xml\", modelo_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor NFe\", function () {",
									"    var valor_nfe_xml = jsonData.result.params.valor;",
									"    pm.environment.set(\"valor_nfe_xml\", valor_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor Segurado NFe\", function () {",
									"    var valor_seg_nfe_xml = jsonData.result.params.valor_segurado;",
									"    pm.environment.set(\"valor_seg_nfe_xml\", valor_seg_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número Espécie NFe\", function () {",
									"    var num_especie_nfe_xml = jsonData.result.params.num_especie;",
									"    pm.environment.set(\"num_especie_nfe_xml\", num_especie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter CFOP NFe\", function () {",
									"    var cfop_nfe_xml = jsonData.result.params.cfop;",
									"    pm.environment.set(\"cfop_nfe_xml\", cfop_nfe_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "954d4d9b-6ee9-42dc-8917-3a66519ec5c9",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xml\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xml}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE2 XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "490b3549-adb6-4c74-866a-62427198a839",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml_nf2\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml_nf2\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml_nf2\", cod_end_remetente_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2386f63f-5a01-4dd3-ac7c-99a79f931978",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xmlNF2\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xmlNF2}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio Origem XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ffb15da-17c8-4809-a6e8-2dbb104a2603",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Município, UF e CEP",
									"pm.test(\"Obter Municipio\", function () {",
									"    var municipio_id = jsonData.result.items[0].municipio_id;",
									"    ",
									"    pm.environment.set(\"id_municipio_origem_xml\", municipio_id);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "17808930-8d19-48f7-a0ea-9f23606c3b11",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"{{municipio_origem_xml}}\"\n                }\n            ]\n        }\n    }\n}\n\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getMunicipio Destino XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00ebee1e-b23f-4409-9027-f14d717328f6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"//Município, UF e CEP",
									"pm.test(\"Obter Municipio\", function () {",
									"    var municipio_id = jsonData.result.items[0].municipio_id;",
									"    ",
									"    pm.environment.set(\"id_municipio_destino_xml\", municipio_id);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e3d8e032-589b-4ee6-89f1-3c51337d974b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getMunicipio\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"municipio_uf\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"{{municipio_destino_xml}}\"\n                }\n            ]\n        }\n    }\n}\n\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogisticaLista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91992096-5e35-417b-81da-42817e40cfb9",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//=============================================================",
									"",
									"pm.test(\"Gerar Descricao Operação\", function () {",
									"    var count = jsonData.result.count;",
									"    count++;",
									"    var descricao_operacao = \"Qa - Operação\"+\" \"+count; ",
									"    pm.environment.set(\"descricao_oper\", descricao_operacao);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"operacao_id\",\n                    \"title\": \"ID Operação\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"descricao_completa\",\n                    \"title\": \"Descrição Total\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Data inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"Data atualização\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"Usuário inserção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"Usuário atualização\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insOperacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6526be85-afb5-46f6-8ac6-3e7b7607eb7c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Operação\", function () {",
									"    var operacao_id = jsonData.result.operacao_id;",
									"    pm.environment.set(\"oper_log\", operacao_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3cbbab44-0625-4a0d-8342-990f28ef6139",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Informação Opcional\", function () {",
									"    var info_opcional = \"Teste Operação\"",
									"    pm.environment.set(\"info_opcional\", info_opcional);",
									"    ",
									"    var info_opcional_edicao = \"Teste Operação Editar\";",
									"    pm.environment.set(\"info_opcional_edicao\", info_opcional_edicao);",
									"});",
									"",
									"//Gerar tipo de frete",
									"//Próprio/subcontratado",
									"pm.test(\"Gerar tipo de frete\", function () {",
									"    var tipo_frete_contrato = 1; //próprio",
									"    var tipo_frete_contrato_edicao = 0; //subcontratado",
									"    ",
									"    pm.environment.set(\"tipo_frete_contrato\", tipo_frete_contrato);",
									"    pm.environment.set(\"tipo_frete_contrato_edicao\", tipo_frete_contrato_edicao);",
									"});",
									"",
									"pm.test(\"Gerar limite de CTE\", function () {",
									"    var limite_num_cte = 5;",
									"    var limite_num_cte_edicao = 20;",
									"    pm.environment.set(\"limite_num_cte\", limite_num_cte);",
									"    pm.environment.set(\"limite_num_cte_edicao\", limite_num_cte_edicao);",
									"});",
									"",
									"//Tipo Documento",
									"pm.test(\"Gerar Tipo de Documento\", function () {",
									"    var tipo_documento = 1; //Cte individual",
									"    pm.environment.set(\"tipo_documento\", tipo_documento);",
									"});",
									"",
									"//Tipo Quitação",
									"pm.test(\"Gerar Quitação\", function () {",
									"    var quitacao_liberada = Math.floor(Math.random() * 3);",
									"    pm.environment.set(\"quitacao_liberada\", quitacao_liberada);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insOperacao\",\n    \"parameters\": {\n        \"operacao_id\": null,\n        \"descricao\": \"{{descricao_oper}}\",\n        \"cod_negociador\": \"{{id_cliente}}\",\n        \"operacao_id_repom\": null,\n        \"filial_emissao\": [\n            {\n                \"cod_organograma\": \"{{cod_organograma}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"centro_custo\": [\n            {\n                \"organizacional_id\": \"{{id_centro_custo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"num_especie\": \"{{cod_especie}}\",\n        \"tipo_frete\": \"{{tipo_frete}}\",\n        \"id_seguradora\": \"{{id_seguradora}}\",\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"frete_proprio\": \"{{tipo_frete_contrato_edicao}}\",\n        \"regra_fiscal_id\": \"{{regra_fiscal}}\",\n        \"percentual_maximo_adto\": null,\n        \"exige_aprovacao_adiantamento\": 0,\n        \"emite_multimodal\": null,\n        \"indicador_negociavel\": null,\n        \"tipo_pagamento_id\": null,\n        \"informacoes_adicionais\": \"{{info_opcional}}\",\n        \"reutiliza_doc_fiscal\": 0,\n        \"quitacao_liberada\": \"{{quitacao_liberada}}\",\n        \"tipo_servico_id\": \"{{tipo_servico_id}}\",\n        \"operacao_vinculada_otm\": 0,\n        \"tipo_documento\": \"{{tipo_documento}}\",\n        \"cte_globalizado_rem_dest\": null,\n        \"quitacao_quebra_peso\": 0,\n        \"limite_cte_romaneio\": \"{{limite_num_cte}}\",\n        \"participantes\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{remetente_1}}\",   \n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{tomador_serv_1}}\",\n                \"tipo_cliente\": 4\n            }\n        ],\n        \"municipio\": [\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_origem}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_destino}}\",\n                \"origem_destino\": 1\n            }\n        ],\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						},
						"description": "Executar getPessoa(GRUPO NEGOCIADOR) antes do insOperacao, para teste unitário."
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogistica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22ede828-1fc0-4bb1-bbc3-f8ccb9674a21",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Veriificação das Inserções",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_oper\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"    pm.environment.set(\"desc_oper_log\", desc_request);",
									"});",
									"",
									"pm.test(\"Insere Cliente\", function () {",
									"    var neg_response = jsonData.result.items[0].cod_negociador;",
									"    var neg_request = pm.environment.get(\"id_cliente\");",
									"    ",
									"    pm.expect(neg_response).eql(neg_request);",
									"});",
									"",
									"pm.test(\"Insere Organograma\", function () {",
									"    var organograma_response = jsonData.result.items[0].filial[0].cod_organograma;",
									"    var organograma_request = pm.environment.get(\"cod_organograma\");",
									"    ",
									"    pm.expect(organograma_response).eql(organograma_request);",
									"});",
									"",
									"pm.test(\"Insere Centro de Custo\", function () {",
									"    var centro_custo_response = jsonData.result.items[0].centro_custo[0].organizacional_id;",
									"    var centro_custo_request = pm.environment.get(\"id_centro_custo\");",
									"    centro_custo_request = ''+centro_custo_request;",
									"    pm.expect(centro_custo_response).eql(centro_custo_request);",
									"});",
									"",
									"pm.test(\"Insere Número de Espécie\", function () {",
									"    var num_especie_response = jsonData.result.items[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie\");",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Frete\", function () {",
									"    var tipo_frete_response = jsonData.result.items[0].tipo_frete;",
									"    var tipo_frete_request = pm.environment.get(\"tipo_frete\");",
									"    pm.expect(''+tipo_frete_response).eql(tipo_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Seguradora\", function () {",
									"    var seguradora_response = jsonData.result.items[0].seguradora.id_seguradora;",
									"    var seguradora_request = pm.environment.get(\"id_seguradora\");",
									"    seguradora_request = ''+seguradora_request;",
									"    pm.expect(seguradora_response).eql(seguradora_request);",
									"});",
									"",
									"pm.test(\"Insere Tabela Frete \", function () {",
									"    var tab_frete_response = jsonData.result.items[0].tabela_frete_id;",
									"    tab_frete_response = ''+tab_frete_response;",
									"    var tab_frete_request = pm.environment.get(\"tabela_frete_id\");",
									"    pm.expect(tab_frete_response).eql(tab_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Contrato \", function () {",
									"    var contrato_response = jsonData.result.items[0].frete_proprio; ",
									"    var contrato_request = pm.environment.get(\"tipo_frete_contrato_edicao\");",
									"    pm.expect(contrato_response).eql(contrato_request);",
									"});",
									"",
									"pm.test(\"Insere regra Fiscal\", function () {",
									"    var r_fiscal_response = jsonData.result.items[0].regra_fiscal_id;",
									"    var r_fiscal_request = pm.environment.get(\"regra_fiscal\");",
									"    pm.expect(r_fiscal_response).eql(r_fiscal_request);",
									"});",
									"",
									"pm.test(\"Insere Informações Adicionais\", function () {",
									"    var info_response = jsonData.result.items[0].informacoes_adicionais;",
									"    var info_request = pm.environment.get(\"info_opcional\");",
									"    pm.expect(info_response).eql(info_request);",
									"});",
									"",
									"pm.test(\"Insere Quitação\", function () {",
									"    var quitacao_response = jsonData.result.items[0].quitacao_liberada;",
									"    var quitacao_request = pm.environment.get(\"quitacao_liberada\");",
									"    pm.expect(quitacao_response).eql(quitacao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Serviço\", function () {",
									"    var servico_response = jsonData.result.items[0].tipo_servico_id;",
									"    var servico_request = pm.environment.get(\"tipo_servico_id\");",
									"    pm.expect(servico_response).eql(servico_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Documento\", function () {",
									"    var documento_response = jsonData.result.items[0].tipo_documento;",
									"    var documento_request = pm.environment.get(\"tipo_documento\");",
									"    pm.expect(documento_response).eql(documento_request);",
									"});",
									"",
									"pm.test(\"Insere Limite CTE\", function () {",
									"    var limite_cte_response = jsonData.result.items[0].limite_cte_romaneio;",
									"    var limite_cte_request = pm.environment.get(\"limite_num_cte\");",
									"    pm.expect(limite_cte_response).eql(limite_cte_request);",
									"});",
									"",
									"pm.test(\"Insere Remetente\", function () {",
									"    var remetente_response = jsonData.result.items[0].remetente[0].cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"remetente_1\");",
									"    remetente_request = ''+remetente_request;",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.items[0].destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"destinatario_1\");",
									"    destinatario_request = ''+destinatario_request;",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Coleta\", function () {",
									"    var coleta_response = jsonData.result.items[0].coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"remetente_1\");",
									"    coleta_request = ''+coleta_request;",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Entrega\", function () {",
									"    var entrega_response = jsonData.result.items[0].entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"destinatario_1\");",
									"    entrega_request = ''+entrega_request;",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Tomador de Serviços\", function () {",
									"    var tomador_response = jsonData.result.items[0].cobranca[0].cod_pessoa;",
									"    var tomador_request = pm.environment.get(\"tomador_serv_1\");",
									"    tomador_request = ''+tomador_request;",
									"    pm.expect(tomador_response).eql(tomador_request);",
									"});",
									"",
									"pm.test(\"Insere Município Origem\", function () {",
									"    var origem_response = jsonData.result.items[0].municipio_origem[0].municipio_id;",
									"    var origem_request = pm.environment.get(\"mun_origem\");",
									"    ",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Município Destino\", function () {",
									"    var destino_response = jsonData.result.items[0].municipio_destino[0].municipio_id;",
									"    var destino_request = pm.environment.get(\"mun_destino\");",
									"    ",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"operacao_id\": \"{{oper_log}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altOperacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d254b5de-013e-46ee-9e7a-ab7273496ed4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"}); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "49b9401b-7728-463b-ac6f-fc460930a5f0",
								"exec": [
									"//Rota REPOM",
									"pm.environment.set(\"mun_origem_repom\", 39055);",
									"pm.environment.set(\"mun_destino_repom\", 83151);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altOperacao\",\n    \"parameters\": {\n        \"operacao_id\": \"{{oper_log}}\",\n        \"descricao\": \"{{desc_oper_log}}\",\n        \"cod_negociador\": \"{{cod_participante_pj}}\",\n        \"filial_emissao\": [\n            {\n                \"cod_organograma\": \"{{cod_organograma}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"centro_custo\": [\n            {\n                \"organizacional_id\": \"{{id_centro_custo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ],\n        \"num_especie\": \"{{cod_especie_edicao}}\",\n        \"tipo_frete\": \"{{tipo_frete_edicao}}\",\n        \"id_seguradora\": null,\n        \"tabela_frete_id\": \"{{tabela_frete_id}}\",\n        \"frete_proprio\": \"{{tipo_frete_contrato}}\",\n        \"regra_fiscal_id\": \"{{regra_fiscal_edicao}}\",\n        \"percentual_maximo_adto\": null,\n        \"exige_aprovacao_adiantamento\": 0,\n        \"emite_multimodal\": null,\n        \"indicador_negociavel\": null,\n        \"tipo_pagamento_id\": null,\n        \"informacoes_adicionais\": \"{{info_opcional_edicao}}\",\n        \"reutiliza_doc_fiscal\": 1,\n        \"quitacao_liberada\": \"{{quitacao_liberada}}\",\n        \"tipo_servico_id\": \"{{tipo_servico_id_edicao}}\",\n        \"operacao_vinculada_otm\": 0,\n        \"tipo_documento\": \"{{tipo_documento}}\",\n        \"cte_globalizado_rem_dest\": null,\n        \"quitacao_quebra_peso\": 0,\n        \"limite_cte_romaneio\": \"{{limite_num_cte_edicao}}\",\n        \"participantes\": [\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_remetente_xml}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_remetente_xml_nf2}}\",\n                \"tipo_cliente\": 0\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{remetente_1}}\",\n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pf}}\",\n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_expedidor_repom}}\",\n                \"tipo_cliente\": 2\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_recebedor_repom}}\",\n                \"tipo_cliente\": 1\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{destinatario_1}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_participante_pj}}\",\n                \"tipo_cliente\": 3\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"cod_pessoa\": \"{{tomador_serv_1}}\",\n                \"tipo_cliente\": 4\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_pessoa\": \"{{cod_recebedor_repom}}\",\n                \"tipo_cliente\": 4\n            }\n        ],\n        \"municipio\": [\n            {\n                \"operation\": \"DELETE\",\n                \"municipio_id\": \"{{mun_origem}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"DELETE\",\n                \"municipio_id\": \"{{mun_destino}}\",\n                \"origem_destino\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{alt_municipio_id_ins_est}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_origem_repom}}\",\n                \"origem_destino\": 0\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{municipio_id_ins_est_edicao}}\",\n                \"origem_destino\": 1\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"municipio_id\": \"{{mun_destino_repom}}\",\n                \"origem_destino\": 1\n            }\n        ],\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getOperacaoLogisticaUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80f3401d-68ea-49e1-aaab-228b4121646b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Operação para lote",
									"pm.test(\"Obter Operação\", function () {",
									"    var oper_log = jsonData.result.items[0].operacao_id;",
									"    var desc_oper_log = jsonData.result.items[0].descricao_completa;",
									"    ",
									"    pm.environment.set(\"oper_log\", oper_log);",
									"    pm.environment.set(\"desc_oper_log\", desc_oper_log); ",
									"});",
									"",
									"//Veriificação das Edições",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_oper\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar Cliente\", function () {",
									"    var cliente_response = jsonData.result.items[0].cod_negociador;",
									"    var cliente_request = pm.environment.get(\"cod_participante_pj\");",
									"    ",
									"    pm.expect(cliente_response).eql(cliente_request);",
									"});",
									"",
									"pm.test(\"Editar Organograma\", function () {",
									"    var organograma_response = jsonData.result.items[0].filial[0].cod_organograma;",
									"    var organograma_request = pm.environment.get(\"cod_organograma\");",
									"    ",
									"    pm.expect(organograma_response).eql(organograma_request);",
									"});",
									"",
									"pm.test(\"Editar Centro de Custo\", function () {",
									"    var centro_custo_response = jsonData.result.items[0].centro_custo[0].organizacional_id;",
									"    var centro_custo_request = pm.environment.get(\"id_centro_custo\");",
									"    centro_custo_request = ''+centro_custo_request;",
									"    pm.expect(centro_custo_response).eql(centro_custo_request);",
									"});",
									"",
									"pm.test(\"Editar Número de Espécie\", function () {",
									"    var num_especie_response = jsonData.result.items[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Frete\", function () {",
									"    var tipo_frete_response = jsonData.result.items[0].tipo_frete;",
									"    var tipo_frete_request = pm.environment.get(\"tipo_frete_edicao\");",
									"    pm.expect(''+tipo_frete_response).eql(tipo_frete_request);",
									"});",
									"",
									"pm.test(\"Editar Seguradora\", function () {",
									"    var seguradora_response = jsonData.result.items[0].seguradora.id_seguradora;",
									"    var seguradora_request = pm.environment.get(\"id_seguradora\");",
									"    seguradora_request = ''+seguradora_request;",
									"    pm.expect(seguradora_response).eql(seguradora_request);",
									"});",
									"",
									"pm.test(\"Editar Tabela Frete \", function () {",
									"    var tab_frete_response = jsonData.result.items[0].tabela_frete_id;",
									"    tab_frete_response = ''+tab_frete_response;",
									"    var tab_frete_request = pm.environment.get(\"tabela_frete_id\");",
									"    pm.expect(tab_frete_response).eql(tab_frete_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Contrato \", function () {",
									"    var contrato_response = jsonData.result.items[0].frete_proprio;",
									"    var contrato_request = pm.environment.get(\"tipo_frete_contrato\");",
									"    pm.expect(contrato_response).eql(contrato_request);",
									"});",
									"",
									"pm.test(\"Editar regra Fiscal\", function () {",
									"    var r_fiscal_response = jsonData.result.items[0].regra_fiscal_id;",
									"    var r_fiscal_request = pm.environment.get(\"regra_fiscal_edicao\");",
									"    pm.expect(r_fiscal_response).eql(r_fiscal_request);",
									"});",
									"",
									"pm.test(\"Editar Informações Adicionais\", function () {",
									"    var info_response = jsonData.result.items[0].informacoes_adicionais;",
									"    var info_request = pm.environment.get(\"info_opcional_edicao\");",
									"    pm.expect(info_response).eql(info_request);",
									"});",
									"",
									"pm.test(\"Editar Quitação\", function () {",
									"    var quitacao_response = jsonData.result.items[0].quitacao_liberada;",
									"    var quitacao_request = pm.environment.get(\"quitacao_liberada\");",
									"    pm.expect(quitacao_response).eql(quitacao_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Serviço\", function () {",
									"    var servico_response = jsonData.result.items[0].tipo_servico_id;",
									"    var servico_request = pm.environment.get(\"tipo_servico_id_edicao\");",
									"    pm.expect(servico_response).eql(servico_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Documento\", function () {",
									"    var documento_response = jsonData.result.items[0].tipo_documento;",
									"    var documento_request = pm.environment.get(\"tipo_documento\");",
									"    pm.expect(documento_response).eql(documento_request);",
									"});",
									"",
									"pm.test(\"Editar Limite CTE\", function () {",
									"    var limite_cte_response = jsonData.result.items[0].limite_cte_romaneio;",
									"    var limite_cte_request = pm.environment.get(\"limite_num_cte_edicao\");",
									"    pm.expect(limite_cte_response).eql(limite_cte_request);",
									"});",
									"",
									"pm.test(\"Editar Remetente\", function () {",
									"    var remetente_response = jsonData.result.items[0].remetente.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pf\")).cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"cod_participante_pf\");",
									"    remetente_request = ''+remetente_request;",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Editar Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.items[0].destinatario.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pj\")).cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"    destinatario_request = ''+destinatario_request;",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Editar Coleta\", function () {",
									"    var coleta_response = jsonData.result.items[0].coleta.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pf\")).cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"    coleta_request = ''+coleta_request;",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Editar Entrega\", function () {",
									"    var entrega_response = jsonData.result.items[0].entrega.find(x => x.cod_pessoa == pm.environment.get(\"cod_participante_pj\")).cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"    entrega_request = ''+entrega_request;",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Editar Tomador de Serviços\", function () {",
									"    var tomador_response = jsonData.result.items[0].cobranca[0].cod_pessoa;",
									"    var tomador_request = pm.environment.get(\"cod_recebedor_repom\");",
									"    tomador_request = ''+tomador_request;",
									"    pm.expect(tomador_response).eql(tomador_request);",
									"});",
									"",
									"pm.test(\"Editar Município Origem\", function () {",
									"    var origem_response = jsonData.result.items[0].municipio_origem[0].municipio_id;",
									"    var origem_request = pm.environment.get(\"alt_municipio_id_ins_est\");",
									"    ",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Editar Município Destino\", function () {",
									"    var destino_response = jsonData.result.items[0].municipio_destino[0].municipio_id;",
									"    var destino_request = pm.environment.get(\"municipio_id_ins_est_edicao\");",
									"    ",
									"    pm.expect(destino_response).eql(destino_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getOperacaoLogistica\",\n    \"parameters\": {\n        \"operacao_id\": \"{{oper_log}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eebbb860-94e2-4451-ab1b-65d73ce155d7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d237f135-6c23-439f-9cc9-f6916d4f938e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LOTE",
			"item": [
				{
					"name": "M220 - insLote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "31b9e94b-1fc5-4f8a-8c94-294ddc666cd6",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500);",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minino = Math.round(Math.random() * 1000) + 15000;",
									"    return val_minino;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39b7c583-843d-40d2-9da0-6381ffc628a3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fb14441-ea96-42fe-b1f3-192196381dc7",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - altLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f21b4a2d-b87c-48e8-8ca4-8f5946e19be6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"altLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"limite_viagem\": \"{{limite_edicao}}\",\n        \"limite_peso\": \"\",\n        \"descricao\": \"{{descricao_prod_edicao}}\",\n        \"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n        \"data_inicio\": \"{{data_ini_lote_edicao}}\",\n        \"data_termino\": \"{{data_futura_edicao}}\",\n        \"valor_custo_minimo\": \"{{valor_min_edicao}}\",\n        \"valor_custo_maximo\": \"{{valor_max_edicao}}\",\n        \"cadencia_ton_dia\": \"{{cadencia_edicao}}\",\n        \"observacao\": \"{{descricao_prod_edicao}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLoteUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12480a8a-b0a2-4511-b868-6a3df7128528",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Veriificação das Edições",
									"pm.test(\"Editar Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite_edicao\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Editar Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod_edicao\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Editar ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Editar Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Editar Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote_edicao\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Editar Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura_edicao\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Editar Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min_edicao\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Editar Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max_edicao\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Editar Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia_edicao\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Editar Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod_edicao\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "067f0379-aeb4-48e5-97a8-8ff4a25e3e2d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - delLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da1540c2-c3b8-42f1-9216-eea48f4a911f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Excluir Lote\", function () {",
									"    var mensagem_sucesso = \"Lote excluído com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"delLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Enviar requisição \"getOperacaoLogisticaLista\" na pasta 'OPERACAO' para inserção de lote. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5056bed8-5d3d-4230-a5e9-cbde63cac380",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "19be2b69-1a37-41cd-a7dc-d0de85a292dd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GERENCIAMENTO DE FILIAIS",
			"item": [
				{
					"name": "M220 - manipulaFilial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bb7b8f88-ebd5-448f-982a-9b399535b09e",
								"exec": [
									"function geraCodigoGrupo() {",
									"    var cod = Math.round(Math.random() * 100);",
									"    return cod;",
									"}",
									"pm.test(\"Gerar Código Grupo\", function () {",
									"    var codigo_grupo = geraCodigoGrupo();",
									"    pm.environment.set(\"codigo_grupo\", codigo_grupo);",
									"    ",
									"    var codigo_grupo_edicao = geraCodigoGrupo();",
									"    pm.environment.set(\"codigo_grupo_edicao\", codigo_grupo_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1046af71-9b85-4ae6-bebe-a742601553da",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"//Verificação das inserções",
									"",
									"pm.test(\"Insere Código Unidade Negócio\", function () {",
									"    var cod_unidade_response = jsonData.result.items[0].cod_unidade_negocio;",
									"    var cod_unidade_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(cod_unidade_response).eql(cod_unidade_request);",
									"});",
									"",
									"pm.test(\"Insere Código Pessoa\", function () {",
									"    var cod_pessoa_response = jsonData.result.items[0].cod_pessoa;",
									"    var cod_pessoa_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(cod_pessoa_response).eql(cod_pessoa_request);",
									"});",
									"",
									"pm.test(\"Insere Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.items[0].cod_pessoa_grupo;",
									"    var cod_grupo_request = pm.environment.get(\"codigo_grupo\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código da Unidade de Negócio\", function () {",
									"    var cod_unidade_neg = jsonData.result.items[0].cod_unidade_negocio;",
									"    pm.environment.set(\"cod_unidade_neg\", cod_unidade_neg);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaFilial\",\n    \"parameters\": {\n        \"cod_unidade_negocio\": \"{{cod_participante_pf}}\",\n        \"cod_pessoa\": \"{{cod_participante_pf}}\",\n        \"cod_grupo\": \"{{codigo_grupo}}\",\n        \"operation\": \"INSERT\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getFilial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "80dcf6ea-33f6-4b9b-b943-00f1e5ccd8e7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55bcccc2-44ad-4b54-8c1b-6bd181af4c60",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"var cod_p_user_filial = jsonData.result.items.find(x => x.lotado == 1).cod_pessoa;",
									"pm.environment.set(\"cod_p_user_filial\", cod_p_user_filial);",
									"",
									"var usuario_logado = pm.environment.get(\"cod_participante_pf\");",
									"",
									"if (usuario_logado != cod_p_user_filial) postman.setNextRequest(\"M220 - getCenarioImpostoTipo Config\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getFilialLotacao\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaFilialSelect",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b8de0d-06f4-4ca5-82b5-2b26902c5694",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5d55e0fc-b14d-483a-b5f3-6b4af6156c08",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaFilial\",\n    \"parameters\": {\n        \"operation\": \"SELECT\",\n        \"cod_unidade_negocio\": \"{{cod_unidade_neg}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - manipulaFilialUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f035175-9baa-4d8a-b1f8-2e6b8fdbf0f0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Editar Código Pessoa\", function () {",
									"    var cod_pessoa_response = jsonData.result.items[0].cod_pessoa;",
									"    var cod_pessoa_request = pm.environment.get(\"cod_p_user_filial\");",
									"",
									"    pm.expect(cod_pessoa_response).eql(cod_pessoa_request);",
									"});",
									"",
									"pm.test(\"Editar Código Grupo\", function () {",
									"    var cod_grupo_response = jsonData.result.items[0].cod_pessoa_grupo;",
									"    var cod_grupo_request = pm.environment.get(\"codigo_grupo_edicao\");",
									"    cod_grupo_request = ''+cod_grupo_request;",
									"",
									"    pm.expect(cod_grupo_response).eql(cod_grupo_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaFilial\",\n    \"parameters\": {\n        \"cod_unidade_negocio\": \"{{cod_unidade_neg}}\",\n        \"cod_pessoa\": \"{{cod_participante_pf}}\",\n        \"cod_grupo\": \"{{codigo_grupo_edicao}}\",\n        \"operation\": \"UPDATE\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Necessário executar pasta \"PARTICIPANTE\" para teste unitário.\n- Para obter o código da pessoa.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8140b237-5b86-4a56-a5d6-f49fe3317d25",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c47ef78d-93e9-49b8-8f68-6cf7ee62b791",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CONFIGURACOES DE IMPOSTOS",
			"item": [
				{
					"name": "M220 - getCenarioImpostoTipo Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc80b92a-7be7-413b-907b-a4c5bcb5e259",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Tipo Imposto\", function () {",
									"    var imposto_tipo_id = jsonData.result.items.find(x => x.descricao == \"COFINS Retido\").imposto_tipo_id;",
									"    pm.environment.set(\"imposto_tipo_id\", imposto_tipo_id);",
									"});",
									"",
									"pm.test(\"Obter Tipo Imposto ICMS\", function () {",
									"    var imposto_id = jsonData.result.items.find(x => x.descricao == \"ICMS\").imposto_tipo_id;",
									"    pm.environment.set(\"imposto_tipo_id_icms\", imposto_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoTipo\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoConfiguracaoFlag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c863f6ec-a6eb-4461-9074-375b4ff885c4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2a6233f9-5011-4a7f-9d7a-34db72c24b45",
								"exec": [
									"pm.environment.set(\"tipo_documento_imposto\", \"CTRC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoConfiguracaoFlag\",\n    \"parameters\": {\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoRetencao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d683fefc-58c7-4dfd-94ab-904774057874",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Imposto Retenção\", function () {",
									"    var imposto_cod_retencao = jsonData.result.items[0].imposto_cod_retencao_id;",
									"    pm.environment.set(\"imposto_cod_retencao\", imposto_cod_retencao);",
									"    ",
									"    var imposto_cod_retencao_edicao = jsonData.result.items[1].imposto_cod_retencao_id;",
									"    pm.environment.set(\"imposto_cod_retencao_edicao\", imposto_cod_retencao_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoRetencao\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_retencao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_retencao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCondicao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15e3fbf5-2bc7-42e2-b068-b80288239606",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Imposto Condição\", function () {",
									"    var id_imposto_condicao = jsonData.result.items.find(x => x.descricao == \"Coleta: UF\").imposto_condicao_id;",
									"    pm.environment.set(\"id_imposto_condicao\", id_imposto_condicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCondicao\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoIndicadorNatRetencao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cdd4d6d-12df-4b1b-ac9c-a7af17d4e706",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Indicador Nat Retenção\", function () {",
									"    var cod_nat_retencao = jsonData.result.items[0].ind_nat_ret;",
									"    pm.environment.set(\"cod_nat_retencao\", cod_nat_retencao);",
									"    ",
									"    var cod_nat_retencao_edicao = jsonData.result.items[1].ind_nat_ret;",
									"    pm.environment.set(\"cod_nat_retencao_edicao\", cod_nat_retencao_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoIndicadorNatRetencao\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCodigoReceita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88608256-c74c-4d1d-932e-a303d91a4a65",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Receita\", function () {",
									"    var cod_receita = jsonData.result.items[0].cod_receita;",
									"    pm.environment.set(\"cod_receita\", cod_receita);",
									"    ",
									"    var cod_receita_edicao = jsonData.result.items[1].cod_receita;",
									"    pm.environment.set(\"cod_receita_edicao\", cod_receita_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCodigoReceita\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoUF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18d16806-7dee-438f-8b30-92e74fb06f3f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter UF Imposto\", function () {",
									"    var sort =  Math.round(Math.random() * 27);",
									"    var uf_imposto = jsonData.result.items[sort].id;",
									"    pm.environment.set(\"uf_imposto\", uf_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoUF\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoSituacaoTributaria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f8c3a92-758a-4d83-a479-5dfc912c34f6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Imposto Situação Tributária\", function () {",
									"    var cod_situacao_tributaria = jsonData.result.items[0].imposto_situacao_id;",
									"    pm.environment.set(\"cod_situacao_tributaria\", cod_situacao_tributaria);",
									"    ",
									"    var cod_situacao_tributaria_edicao = jsonData.result.items[1].imposto_situacao_id;",
									"    pm.environment.set(\"cod_situacao_tributaria_edicao\", cod_situacao_tributaria_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "87b2c1b1-54ea-41bc-b394-6ccee7cf2155",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoSituacaoTributaria\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_combo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_combo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoOrigemCredito",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b3579c5-437e-4803-a5b9-9facfbf260c9",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Imposto Origem\", function () {",
									"    var cod_imposto_origem = jsonData.result.items[0].imposto_origem_id;",
									"    pm.environment.set(\"cod_imposto_origem\", cod_imposto_origem);",
									"    ",
									"    var cod_imposto_origem_edicao = jsonData.result.items[1].imposto_origem_id;",
									"    pm.environment.set(\"cod_imposto_origem_edicao\", cod_imposto_origem_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoOrigemCredito\",\n    \"parameters\": {\n        \"imposto_tipo_id\": 1,\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_combo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_combo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoNaturezaBaseCredito",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0161f6d-f3d2-4bd6-b18a-56913c7f4cd9",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cfa3c7d9-93e5-4fa5-8cc8-a379578d451f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoNaturezaBaseCredito\",\n    \"parameters\": {\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb427bc7-4f18-4702-b8d8-77288ca5a077",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//=======================================================",
									"//Gerar descrição",
									"pm.test(\"Gerar Descrição Inserção\", function (){",
									"    var descricao_imposto = \"QA - Teste Imposto\"+' '+pm.environment.get(\"uf_imposto\");",
									"    pm.environment.set(\"descricao_imposto\", descricao_imposto);",
									"});",
									"",
									"var exist = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto\")) ? true : false;",
									"pm.environment.set(\"exist\", exist);",
									"console.log(exist)",
									"",
									"if (exist) postman.setNextRequest(\"M220 - manipulaMotorista NF\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"filtering\": [\n                {\n                    \"column\": \"descricao\",\n                    \"operator\": \"startsWith\",\n                    \"value\": \"QA - Teste Imposto\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - inserirCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37b14412-94bd-498b-8eda-50f0ad87c635",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Imposto\", function () {",
									"    var id_cenario_imposto = jsonData.result.imposto_config_id;",
									"    pm.environment.set(\"id_cenario_imposto\", id_cenario_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9d64a1cc-2b36-4eee-9203-ea2f695192ad",
								"exec": [
									"//Reservado ao Fisco",
									"pm.environment.set(\"reservado_fisco\", \"Não\");",
									"pm.environment.set(\"reservado_fisco_edicao\", \"Sim\");",
									"",
									"pm.environment.set(\"descricao_doc_imposto\", \"Teste Imposto ICMS\");",
									"pm.environment.set(\"descricao_doc_imposto_edicao\", \"Teste Imposto ICMS Edicao\");",
									"",
									"pm.environment.set(\"valor_aliquota\", 10);",
									"pm.environment.set(\"valor_aliquota_edicao\", 12);",
									"",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio\", 1);",
									"",
									"pm.environment.set(\"rec_periodo_1_final\", 25);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia\", 10);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_2_final\", 27);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia\", 15);",
									"",
									"//EDIÇÃO",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio_edicao\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_1_final_edicao\", 26);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia_edicao\", 11);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio_edicao\", 3);",
									"",
									"pm.environment.set(\"rec_periodo_2_final_edicao\", 28);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia_edicao\", 20);",
									"",
									"//======================================================",
									"",
									"//data base",
									"pm.environment.set(\"data_base\", 0);",
									"pm.environment.set(\"data_base_edicao\", 1);",
									"",
									"//Redução Base de Cálculo",
									"pm.environment.set(\"red_base_calculo\", 0);",
									"pm.environment.set(\"red_base_calculo_edicao\", 1);",
									"",
									"//Código Tributação Município",
									"pm.environment.set(\"tributacao_municipio\", 1);",
									"pm.environment.set(\"tributacao_municipio_edicao\", 2);",
									"",
									"//periodo de recolhimento",
									"pm.environment.set(\"periodo_recebimento\", 0);",
									"pm.environment.set(\"periodo_recebimento_edicao\", 1);",
									"",
									"//em caso de dia não útil",
									"pm.environment.set(\"dia_nao_util\", 0);",
									"pm.environment.set(\"dia_nao_util_edicao\", 1);",
									"",
									"// True or False Checkbox",
									"pm.environment.set(\"value_checkbox\", 0);",
									"pm.environment.set(\"value_checkbox_edicao\", 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"inserirCenarioImposto\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"descricao\": \"{{descricao_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"imposto_situacao_id\": \"{{cod_situacao_tributaria}}\",\n        \"aliquota\": \"{{valor_aliquota}}\",\n        \"reducao_base_calculo\": \"{{red_base_calculo}}\",\n        \"fundamentacao_legal\": \"{{descricao_doc_imposto}}\",\n        \"reservado_fisco\": \"{{reservado_fisco}}\",\n        \"regime_cumulativo\": \"{{value_checkbox}}\",\n        \"imposto_cod_retencao_id\": \"{{imposto_cod_retencao}}\",\n        \"imposto_origem_id\": \"{{cod_imposto_origem}}\",\n        \"rec_util_formula_venc\": \"{{value_checkbox}}\",\n        \"rec_data_base_venc\": \"{{data_base}}\",\n        \"rec_periodo\": \"{{periodo_recebimento}}\",\n        \"rec_periodo_1_inicio\": \"{{rec_periodo_1_inicio}}\",\n        \"rec_periodo_1_final\": \"{{rec_periodo_1_final}}\",\n        \"rec_periodo_1_dia\": \"{{rec_periodo_1_dia}}\",\n        \"rec_periodo_2_inicio\": \"{{rec_periodo_2_inicio}}\",\n        \"rec_periodo_2_final\": \"{{rec_periodo_2_final}}\",\n        \"rec_periodo_2_dia\": \"{{rec_periodo_2_dia}}\",\n        \"rec_caso_dia_nao_util\": \"{{dia_nao_util}}\",\n        \"considera_pedagio_base_calc\": \"{{value_checkbox}}\",\n        \"codigo_tributacao_municipio\": \"{{tributacao_municipio}}\",\n        \"aplica_reducao_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_st_base_calc\": \"{{value_checkbox}}\",\n        \"ind_nat_ret\": \"{{cod_nat_retencao}}\",\n        \"cod_receita\": \"{{cod_receita}}\",\n        \"altera_cst\": \"{{value_checkbox}}\",\n        \"condicao\": {\n            \"cole_uf\": [\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"{{uf_imposto}}\",\n                    \"tag\": \"cole_uf\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoInsert",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4bf463ec-ee70-42ed-bc39-543474abe29b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3bbc4a5f-66f2-406d-85e1-750a0caf2d19",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.items[0].tipo_documento;",
									"    var tipo_doc_request = pm.environment.get(\"tipo_documento_imposto\");",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Descricão\", function () {",
									"    var descricao_response = jsonData.result.items[0].descricao;",
									"    var descricao_request = pm.environment.get(\"descricao_imposto\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Imposto\", function () {",
									"    var imposto_tipo_response = jsonData.result.items[0].imposto_tipo_id;",
									"    var imposto_tipo_request = pm.environment.get(\"imposto_tipo_id\");",
									"",
									"    pm.expect(imposto_tipo_response).eql(imposto_tipo_request);",
									"});",
									"",
									"pm.test(\"Insere Imposto Situação\", function () {",
									"    var imposto_situacao_response = jsonData.result.items[0].imposto_situacao_id;",
									"    var imposto_situacao_request = pm.environment.get(\"cod_situacao_tributaria\");",
									"",
									"    pm.expect(imposto_situacao_response).eql(imposto_situacao_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Alíquota\", function () {",
									"    var aliquota_imposto_response = jsonData.result.items[0].aliquota;",
									"    var aliquota_imposto_request = pm.environment.get(\"valor_aliquota\");",
									"",
									"    pm.expect(aliquota_imposto_response).eql(aliquota_imposto_request);",
									"});",
									"",
									"pm.test(\"Insere Redução da Base de Cálculo\", function () {",
									"    var red_base_calculo_response = jsonData.result.items[0].reducao_base_calculo;",
									"    var red_base_calculo_request = pm.environment.get(\"red_base_calculo\");",
									"",
									"    pm.expect(red_base_calculo_response).eql(red_base_calculo_request);",
									"});",
									"",
									"pm.test(\"Insere Fundamentação Legal\", function () {",
									"    var fundamentacao_legal_response = jsonData.result.items[0].fundamentacao_legal;",
									"    var fundamentacao_legal_request = pm.environment.get(\"descricao_doc_imposto\");",
									"",
									"    pm.expect(fundamentacao_legal_response).eql(fundamentacao_legal_request);",
									"});",
									"",
									"pm.test(\"Insere Reservado ao Fisco\", function () {",
									"    var reservado_fisco_response = jsonData.result.items[0].reservado_fisco;",
									"    var reservado_fisco_request = pm.environment.get(\"reservado_fisco\");",
									"",
									"    pm.expect(reservado_fisco_response).eql(reservado_fisco_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Cumulativo\", function () {",
									"    var regime_cumulativo_response = jsonData.result.items[0].regime_cumulativo;",
									"    var regime_cumulativo_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(regime_cumulativo_response).eql(regime_cumulativo_request);",
									"});",
									"",
									"pm.test(\"Insere Imposto Retenção\", function () {",
									"    var imposto_retencao_response = jsonData.result.items[0].imposto_cod_retencao_id;",
									"    var imposto_retencao_request = pm.environment.get(\"imposto_cod_retencao\");",
									"",
									"    pm.expect(imposto_retencao_response).eql(imposto_retencao_request);",
									"});",
									"",
									"pm.test(\"Insere Origem Imposto\", function () {",
									"    var imposto_origem_response = jsonData.result.items[0].imposto_origem_id;",
									"    var imposto_origem_request = pm.environment.get(\"cod_imposto_origem\");",
									"",
									"    pm.expect(imposto_origem_response).eql(imposto_origem_request);",
									"});",
									"",
									"pm.test(\"Insere Fórmula Vencimento\", function () {",
									"    var formula_venc_response = jsonData.result.items[0].rec_util_formula_venc;",
									"    var formula_venc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(formula_venc_response).eql(formula_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Base Vencimento\", function () {",
									"    var data_base_venc_response = jsonData.result.items[0].rec_data_base_venc;",
									"    var data_base_venc_request = pm.environment.get(\"data_base\");",
									"",
									"    pm.expect(data_base_venc_response).eql(data_base_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Período de Recolhimento\", function () {",
									"    var periodo_rec_response = jsonData.result.items[0].rec_periodo;",
									"    var periodo_rec_request = pm.environment.get(\"periodo_recebimento\");",
									"",
									"    pm.expect(periodo_rec_response).eql(periodo_rec_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Início\", function () {",
									"    var periodo_1_inicio_response = jsonData.result.items[0].rec_periodo_1_inicio;",
									"    var periodo_1_inicio_request = pm.environment.get(\"rec_periodo_1_inicio\");",
									"",
									"    pm.expect(periodo_1_inicio_response).eql(periodo_1_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Final\", function () {",
									"    var periodo_1_final_response = jsonData.result.items[0].rec_periodo_1_final;",
									"    var periodo_1_final_request = pm.environment.get(\"rec_periodo_1_final\");",
									"",
									"    pm.expect(periodo_1_final_response).eql(periodo_1_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Dia de Recolhimento \", function () {",
									"    var periodo_1_recolhimento_response = jsonData.result.items[0].rec_periodo_1_dia;",
									"    var periodo_1_recolhimento_request = pm.environment.get(\"rec_periodo_1_dia\");",
									"",
									"    pm.expect(periodo_1_recolhimento_response).eql(periodo_1_recolhimento_request);",
									"});",
									"",
									"//Período 2 -------------------------------------------------------------------------",
									"",
									"pm.test(\"Insere Período 2 Início\", function () {",
									"    var periodo_2_inicio_response = jsonData.result.items[0].rec_periodo_2_inicio;",
									"    var periodo_2_inicio_request = pm.environment.get(\"rec_periodo_2_inicio\");",
									"",
									"    pm.expect(periodo_2_inicio_response).eql(periodo_2_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Final\", function () {",
									"    var periodo_2_final_response = jsonData.result.items[0].rec_periodo_2_final;",
									"    var periodo_2_final_request = pm.environment.get(\"rec_periodo_2_final\");",
									"",
									"    pm.expect(periodo_2_final_response).eql(periodo_2_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Dia de Recolhimento \", function () {",
									"    var periodo_2_recolhimento_response = jsonData.result.items[0].rec_periodo_2_dia;",
									"    var periodo_2_recolhimento_request = pm.environment.get(\"rec_periodo_2_dia\");",
									"",
									"    pm.expect(periodo_2_recolhimento_response).eql(periodo_2_recolhimento_request);",
									"});",
									"",
									"// ===================================================================================",
									"",
									"pm.test(\"Insere Dia de Recolhimento em caso de dia não útil\", function () {",
									"    var recolhimento_dia_nao_util_response = jsonData.result.items[0].rec_caso_dia_nao_util;",
									"    var recolhimento_dia_nao_util_request = pm.environment.get(\"dia_nao_util\");",
									"",
									"    pm.expect(recolhimento_dia_nao_util_response).eql(recolhimento_dia_nao_util_request);",
									"});",
									"",
									"pm.test(\"Insere Código tributação Município\", function () {",
									"    var cod_trib_municipio_response = jsonData.result.items[0].codigo_tributacao_municipio;",
									"    var cod_trib_municipio_request = pm.environment.get(\"tributacao_municipio\");",
									"    cod_trib_municipio_request = ''+cod_trib_municipio_request;",
									"",
									"    pm.expect(cod_trib_municipio_response).eql(cod_trib_municipio_request);",
									"});",
									"",
									"//Checkbox",
									"pm.test(\"Insere Consideração de Pedágio Base Cálculo\", function () {",
									"    var pedagio_base_calc_response = jsonData.result.items[0].considera_pedagio_base_calc;",
									"    var pedagio_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(pedagio_base_calc_response).eql(pedagio_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Redução Base Cálculo\", function () {",
									"    var reducao_base_calc_response = jsonData.result.items[0].aplica_reducao_base_calc;",
									"    var reducao_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(reducao_base_calc_response).eql(reducao_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Base Cálculo\", function () {",
									"    var icms_base_calc_response = jsonData.result.items[0].considera_icms_base_calc;",
									"    var icms_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_base_calc_response).eql(icms_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Substituto Base Cálculo\", function () {",
									"    var icms_sbst_base_calc_response = jsonData.result.items[0].considera_icms_st_base_calc;",
									"    var icms_sbst_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_sbst_base_calc_response).eql(icms_sbst_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere CST\", function () {",
									"    var cst_response = jsonData.result.items[0].altera_cst;",
									"    var cst_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(cst_response).eql(cst_request);",
									"});",
									"",
									"//===============================================================================================",
									"",
									"pm.test(\"Insere Indicador da natureza da retenção\", function () {",
									"    var ind_nat_ret_response = jsonData.result.items[0].ind_nat_ret;",
									"    var ind_nat_ret_request = pm.environment.get(\"cod_nat_retencao\");",
									"",
									"    pm.expect(ind_nat_ret_response).eql(ind_nat_ret_request);",
									"});",
									"",
									"pm.test(\"Insere Código Receita\", function () {",
									"    var cod_receita_response = jsonData.result.items[0].cod_receita;",
									"    var cod_receita_request = pm.environment.get(\"cod_receita\");",
									"",
									"    pm.expect(cod_receita_response).eql(cod_receita_request);",
									"});",
									"",
									"pm.test(\"Insere UF de Coleta\", function () {",
									"    var coleta_uf_response = jsonData.result.items[0].condicao.cole_uf[0].id;",
									"    var coleta_uf_request = pm.environment.get(\"uf_imposto\");",
									"",
									"    pm.expect(coleta_uf_response).eql(coleta_uf_request);",
									"});",
									"",
									"pm.test(\"Obter ID Vínculo de Coleta\", function () {",
									"    var vinculo_id_uf = jsonData.result.items[0].condicao.cole_uf[0].id_vinculo;",
									"    pm.environment.set(\"vinculo_id_uf\", vinculo_id_uf);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - alterarCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1518067b-159c-4f88-9ba1-f58b2b7dd8a4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Imposto\", function () {",
									"    var id_cenario_imposto = jsonData.result.imposto_config_id;",
									"    pm.environment.set(\"id_cenario_imposto\", id_cenario_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0b2bea4b-23a6-488a-9e1f-132f2805482f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"alterarCenarioImposto\",\n    \"parameters\": {\n        \"operation\": \"UPDATE\",\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"descricao\": \"{{descricao_imposto}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id}}\",\n        \"imposto_situacao_id\": \"{{cod_situacao_tributaria_edicao}}\",\n        \"aliquota\": \"{{valor_aliquota_edicao}}\",\n        \"reducao_base_calculo\": \"{{red_base_calculo_edicao}}\",\n        \"fundamentacao_legal\": \"{{descricao_doc_imposto_edicao}}\",\n        \"reservado_fisco\": \"{{reservado_fisco_edicao}}\",\n        \"regime_cumulativo\": \"{{value_checkbox_edicao}}\",\n        \"imposto_cod_retencao_id\": \"{{imposto_cod_retencao_edicao}}\",\n        \"imposto_origem_id\": \"{{cod_imposto_origem_edicao}}\",\n        \"imposto_natureza_bc_id\": null,\n        \"rec_util_formula_venc\": \"{{value_checkbox_edicao}}\",\n        \"rec_data_base_venc\": \"{{data_base_edicao}}\",\n        \"rec_periodo\": \"{{periodo_recebimento_edicao}}\",\n        \"rec_periodo_1_inicio\": \"{{rec_periodo_1_inicio_edicao}}\",\n        \"rec_periodo_1_final\": \"{{rec_periodo_1_final_edicao}}\",\n        \"rec_periodo_1_dia\": \"{{rec_periodo_1_dia_edicao}}\",\n        \"rec_periodo_2_inicio\": \"{{rec_periodo_2_inicio_edicao}}\",\n        \"rec_periodo_2_final\": \"{{rec_periodo_2_final_edicao}}\",\n        \"rec_periodo_2_dia\": \"{{rec_periodo_2_dia_edicao}}\",\n        \"rec_caso_dia_nao_util\": \"{{dia_nao_util_edicao}}\",\n        \"considera_pedagio_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"codigo_tributacao_municipio\": \"{{tributacao_municipio_edicao}}\",\n        \"aplica_reducao_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"considera_icms_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"considera_icms_st_base_calc\": \"{{value_checkbox_edicao}}\",\n        \"ind_nat_ret\": \"{{cod_nat_retencao_edicao}}\",\n        \"cod_receita\": \"{{cod_receita_edicao}}\",\n        \"altera_cst\": \"{{value_checkbox_edicao}}\",\n        \"gera_cpg_icms_antecipado\": 0,\n        \"cod_pessoa_favorecido\": null,\n        \"condicao\": {\n            \"cole_uf\": [\n                {\n                    \"operation\": \"\",\n                    \"id\": \"{{uf_imposto}}\",\n                    \"id_vinculo\": \"{{vinculo_id_uf}}\",\n                    \"tag\": \"cole_uf\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da832262-a82e-4d15-8afc-77af604c4586",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Editar Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.items[0].tipo_documento;",
									"    var tipo_doc_request = pm.environment.get(\"tipo_documento_imposto\");",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Editar Descricão\", function () {",
									"    var descricao_response = jsonData.result.items[0].descricao;",
									"    var descricao_request = pm.environment.get(\"descricao_imposto\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Editar Tipo Imposto\", function () {",
									"    var imposto_tipo_response = jsonData.result.items[0].imposto_tipo_id;",
									"    var imposto_tipo_request = pm.environment.get(\"imposto_tipo_id\");",
									"",
									"    pm.expect(imposto_tipo_response).eql(imposto_tipo_request);",
									"});",
									"",
									"pm.test(\"Editar Imposto Situação\", function () {",
									"    var imposto_situacao_response = jsonData.result.items[0].imposto_situacao_id;",
									"    var imposto_situacao_request = pm.environment.get(\"cod_situacao_tributaria_edicao\");",
									"",
									"    pm.expect(imposto_situacao_response).eql(imposto_situacao_request);",
									"});",
									"",
									"pm.test(\"Editar Valor Alíquota\", function () {",
									"    var aliquota_imposto_response = jsonData.result.items[0].aliquota;",
									"    var aliquota_imposto_request = pm.environment.get(\"valor_aliquota_edicao\");",
									"",
									"    pm.expect(aliquota_imposto_response).eql(aliquota_imposto_request);",
									"});",
									"",
									"pm.test(\"Editar Redução da Base de Cálculo\", function () {",
									"    var red_base_calculo_response = jsonData.result.items[0].reducao_base_calculo;",
									"    var red_base_calculo_request = pm.environment.get(\"red_base_calculo_edicao\");",
									"",
									"    pm.expect(red_base_calculo_response).eql(red_base_calculo_request);",
									"});",
									"",
									"pm.test(\"Editar Fundamentação Legal\", function () {",
									"    var fundamentacao_legal_response = jsonData.result.items[0].fundamentacao_legal;",
									"    var fundamentacao_legal_request = pm.environment.get(\"descricao_doc_imposto_edicao\");",
									"",
									"    pm.expect(fundamentacao_legal_response).eql(fundamentacao_legal_request);",
									"});",
									"",
									"pm.test(\"Editar Reservado ao Fisco\", function () {",
									"    var reservado_fisco_response = jsonData.result.items[0].reservado_fisco;",
									"    var reservado_fisco_request = pm.environment.get(\"reservado_fisco_edicao\");",
									"",
									"    pm.expect(reservado_fisco_response).eql(reservado_fisco_request);",
									"});",
									"",
									"pm.test(\"Editar Regime Cumulativo\", function () {",
									"    var regime_cumulativo_response = jsonData.result.items[0].regime_cumulativo;",
									"    var regime_cumulativo_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(regime_cumulativo_response).eql(regime_cumulativo_request);",
									"});",
									"",
									"pm.test(\"Editar Imposto Retenção\", function () {",
									"    var imposto_retencao_response = jsonData.result.items[0].imposto_cod_retencao_id;",
									"    var imposto_retencao_request = pm.environment.get(\"imposto_cod_retencao_edicao\");",
									"",
									"    pm.expect(imposto_retencao_response).eql(imposto_retencao_request);",
									"});",
									"",
									"pm.test(\"Editar Origem Imposto\", function () {",
									"    var imposto_origem_response = jsonData.result.items[0].imposto_origem_id;",
									"    var imposto_origem_request = pm.environment.get(\"cod_imposto_origem_edicao\");",
									"",
									"    pm.expect(imposto_origem_response).eql(imposto_origem_request);",
									"});",
									"",
									"pm.test(\"Editar Fórmula Vencimento\", function () {",
									"    var formula_venc_response = jsonData.result.items[0].rec_util_formula_venc;",
									"    var formula_venc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(formula_venc_response).eql(formula_venc_request);",
									"});",
									"",
									"pm.test(\"Editar Data Base Vencimento\", function () {",
									"    var data_base_venc_response = jsonData.result.items[0].rec_data_base_venc;",
									"    var data_base_venc_request = pm.environment.get(\"data_base_edicao\");",
									"",
									"    pm.expect(data_base_venc_response).eql(data_base_venc_request);",
									"});",
									"",
									"pm.test(\"Editar Período de Recolhimento\", function () {",
									"    var periodo_rec_response = jsonData.result.items[0].rec_periodo;",
									"    var periodo_rec_request = pm.environment.get(\"periodo_recebimento_edicao\");",
									"",
									"    pm.expect(periodo_rec_response).eql(periodo_rec_request);",
									"});",
									"",
									"pm.test(\"Editar Período 1 Início\", function () {",
									"    var periodo_1_inicio_response = jsonData.result.items[0].rec_periodo_1_inicio;",
									"    var periodo_1_inicio_request = pm.environment.get(\"rec_periodo_1_inicio_edicao\");",
									"",
									"    pm.expect(periodo_1_inicio_response).eql(periodo_1_inicio_request);",
									"});",
									"",
									"pm.test(\"Editar Período 1 Final\", function () {",
									"    var periodo_1_final_response = jsonData.result.items[0].rec_periodo_1_final;",
									"    var periodo_1_final_request = pm.environment.get(\"rec_periodo_1_final_edicao\");",
									"",
									"    pm.expect(periodo_1_final_response).eql(periodo_1_final_request);",
									"});",
									"",
									"pm.test(\"Editar Período 1 Dia de Recolhimento \", function () {",
									"    var periodo_1_recolhimento_response = jsonData.result.items[0].rec_periodo_1_dia;",
									"    var periodo_1_recolhimento_request = pm.environment.get(\"rec_periodo_1_dia_edicao\");",
									"",
									"    pm.expect(periodo_1_recolhimento_response).eql(periodo_1_recolhimento_request);",
									"});",
									"",
									"//Período 2 -------------------------------------------------------------------------",
									"",
									"pm.test(\"Editar Período 2 Início\", function () {",
									"    var periodo_2_inicio_response = jsonData.result.items[0].rec_periodo_2_inicio;",
									"    var periodo_2_inicio_request = pm.environment.get(\"rec_periodo_2_inicio_edicao\");",
									"",
									"    pm.expect(periodo_2_inicio_response).eql(periodo_2_inicio_request);",
									"});",
									"",
									"pm.test(\"Editar Período 2 Final\", function () {",
									"    var periodo_2_final_response = jsonData.result.items[0].rec_periodo_2_final;",
									"    var periodo_2_final_request = pm.environment.get(\"rec_periodo_2_final_edicao\");",
									"",
									"    pm.expect(periodo_2_final_response).eql(periodo_2_final_request);",
									"});",
									"",
									"pm.test(\"Editar Período 2 Dia de Recolhimento \", function () {",
									"    var periodo_2_recolhimento_response = jsonData.result.items[0].rec_periodo_2_dia;",
									"    var periodo_2_recolhimento_request = pm.environment.get(\"rec_periodo_2_dia_edicao\");",
									"",
									"    pm.expect(periodo_2_recolhimento_response).eql(periodo_2_recolhimento_request);",
									"});",
									"",
									"// ===================================================================================",
									"",
									"pm.test(\"Editar Dia de Recolhimento em caso de dia não útil\", function () {",
									"    var recolhimento_dia_nao_util_response = jsonData.result.items[0].rec_caso_dia_nao_util;",
									"    var recolhimento_dia_nao_util_request = pm.environment.get(\"dia_nao_util_edicao\");",
									"",
									"    pm.expect(recolhimento_dia_nao_util_response).eql(recolhimento_dia_nao_util_request);",
									"});",
									"",
									"pm.test(\"Editar Código tributação Município\", function () {",
									"    var cod_trib_municipio_response = jsonData.result.items[0].codigo_tributacao_municipio;",
									"    var cod_trib_municipio_request = pm.environment.get(\"tributacao_municipio_edicao\");",
									"    cod_trib_municipio_request = ''+cod_trib_municipio_request;",
									"",
									"    pm.expect(cod_trib_municipio_response).eql(cod_trib_municipio_request);",
									"});",
									"",
									"//Checkbox",
									"pm.test(\"Editar Consideração de Pedágio Base Cálculo\", function () {",
									"    var pedagio_base_calc_response = jsonData.result.items[0].considera_pedagio_base_calc;",
									"    var pedagio_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(pedagio_base_calc_response).eql(pedagio_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar Redução Base Cálculo\", function () {",
									"    var reducao_base_calc_response = jsonData.result.items[0].aplica_reducao_base_calc;",
									"    var reducao_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(reducao_base_calc_response).eql(reducao_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar Consideração ICMS Base Cálculo\", function () {",
									"    var icms_base_calc_response = jsonData.result.items[0].considera_icms_base_calc;",
									"    var icms_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(icms_base_calc_response).eql(icms_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar Consideração ICMS Substituto Base Cálculo\", function () {",
									"    var icms_sbst_base_calc_response = jsonData.result.items[0].considera_icms_st_base_calc;",
									"    var icms_sbst_base_calc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(icms_sbst_base_calc_response).eql(icms_sbst_base_calc_request);",
									"});",
									"",
									"pm.test(\"Editar CST\", function () {",
									"    var cst_response = jsonData.result.items[0].altera_cst;",
									"    var cst_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(cst_response).eql(cst_request);",
									"});",
									"",
									"//===============================================================================================",
									"",
									"pm.test(\"Editar Indicador da natureza da retenção\", function () {",
									"    var ind_nat_ret_response = jsonData.result.items[0].ind_nat_ret;",
									"    var ind_nat_ret_request = pm.environment.get(\"cod_nat_retencao_edicao\");",
									"",
									"    pm.expect(ind_nat_ret_response).eql(ind_nat_ret_request);",
									"});",
									"",
									"pm.test(\"Editar Código Receita\", function () {",
									"    var cod_receita_response = jsonData.result.items[0].cod_receita;",
									"    var cod_receita_request = pm.environment.get(\"cod_receita_edicao\");",
									"",
									"    pm.expect(cod_receita_response).eql(cod_receita_request);",
									"});",
									"",
									"pm.test(\"Editar UF de Coleta\", function () {",
									"    var coleta_uf_response = jsonData.result.items[0].condicao.cole_uf[0].id;",
									"    var coleta_uf_request = pm.environment.get(\"uf_imposto\");",
									"",
									"    pm.expect(coleta_uf_response).eql(coleta_uf_request);",
									"});",
									"",
									"pm.test(\"Editar ID Vínculo de Coleta\", function () {",
									"    var vinculo_id_uf_response = jsonData.result.items[0].condicao.cole_uf[0].id_vinculo;",
									"    var vinculo_id_uf_request = pm.environment.get(\"vinculo_id_uf\");",
									"",
									"    pm.expect(vinculo_id_uf_response).eql(vinculo_id_uf_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "80864d46-f804-445a-8ad0-d88a47426f82",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoSituacaoTributaria Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b99b860-0c82-4fbf-9fd8-321127630152",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Imposto Situação Tributária\", function () {",
									"    var cod_situacao_tributaria = jsonData.result.items[0].imposto_situacao_id;",
									"    pm.environment.set(\"cod_situacao_tributaria_icms\", cod_situacao_tributaria);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoSituacaoTributaria\",\n    \"parameters\": {\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"imposto_tipo_id\": 1,\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao_combo\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"\",\n                    \"column\": \"descricao_combo\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 100\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - inserirCenarioImposto ICMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b965daf-da53-4cbf-8d85-3a8e6f3f9bb3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Imposto\", function () {",
									"    var id_cenario_imposto = jsonData.result.imposto_config_id;",
									"    pm.environment.set(\"id_cenario_imposto\", id_cenario_imposto);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b02dfa9e-675c-442d-99fe-768dedce4569",
								"exec": [
									"//Reservado ao Fisco",
									"pm.environment.set(\"reservado_fisco\", \"Não\");",
									"pm.environment.set(\"reservado_fisco_edicao\", \"Sim\");",
									"",
									"pm.environment.set(\"descricao_doc_imposto\", \"Teste Imposto ICMS\");",
									"pm.environment.set(\"descricao_doc_imposto_edicao\", \"Teste Imposto ICMS Edicao\");",
									"",
									"pm.environment.set(\"valor_aliquota\", 10);",
									"pm.environment.set(\"valor_aliquota_edicao\", 12);",
									"",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio\", 1);",
									"",
									"pm.environment.set(\"rec_periodo_1_final\", 25);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia\", 10);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_2_final\", 27);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia\", 15);",
									"",
									"//EDIÇÃO",
									"//Dia de recolhimento",
									"pm.environment.set(\"rec_periodo_1_inicio_edicao\", 2);",
									"",
									"pm.environment.set(\"rec_periodo_1_final_edicao\", 26);",
									"",
									"pm.environment.set(\"rec_periodo_1_dia_edicao\", 11);",
									"//---------------------------------------------------",
									"pm.environment.set(\"rec_periodo_2_inicio_edicao\", 3);",
									"",
									"pm.environment.set(\"rec_periodo_2_final_edicao\", 28);",
									"",
									"pm.environment.set(\"rec_periodo_2_dia_edicao\", 20);",
									"",
									"//======================================================",
									"",
									"//data base",
									"pm.environment.set(\"data_base\", 0);",
									"pm.environment.set(\"data_base_edicao\", 1);",
									"",
									"//Redução Base de Cálculo",
									"pm.environment.set(\"red_base_calculo\", 0);",
									"pm.environment.set(\"red_base_calculo_edicao\", 1);",
									"",
									"//Código Tributação Município",
									"pm.environment.set(\"tributacao_municipio\", 1);",
									"pm.environment.set(\"tributacao_municipio_edicao\", 2);",
									"",
									"//periodo de recolhimento",
									"pm.environment.set(\"periodo_recebimento\", 0);",
									"pm.environment.set(\"periodo_recebimento_edicao\", 1);",
									"",
									"//em caso de dia não útil",
									"pm.environment.set(\"dia_nao_util\", 0);",
									"pm.environment.set(\"dia_nao_util_edicao\", 1);",
									"",
									"// True or False Checkbox",
									"pm.environment.set(\"value_checkbox\", 0);",
									"pm.environment.set(\"value_checkbox_edicao\", 1);",
									"",
									"//Gerar descrição",
									"pm.test(\"Inserir Gerar Descrição Inserção\", function (){",
									"    var descricao_imposto = \"QA - ICMS GERAL\";",
									"    pm.environment.set(\"descricao_imposto_icms\", descricao_imposto);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"inserirCenarioImposto\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"tipo_documento\": \"{{tipo_documento_imposto}}\",\n        \"descricao\": \"{{descricao_imposto_icms}}\",\n        \"imposto_tipo_id\": \"{{imposto_tipo_id_icms}}\",\n        \"imposto_situacao_id\": \"{{cod_situacao_tributaria_icms}}\",\n        \"aliquota\": \"{{valor_aliquota_edicao}}\",\n        \"reducao_base_calculo\": \"{{red_base_calculo}}\",\n        \"fundamentacao_legal\": \"{{descricao_doc_imposto}}\",\n        \"reservado_fisco\": \"{{reservado_fisco}}\",\n        \"regime_cumulativo\": \"{{value_checkbox}}\",\n        \"imposto_cod_retencao_id\": null,\n        \"imposto_origem_id\": \"{{cod_imposto_origem}}\",\n        \"rec_util_formula_venc\": \"{{value_checkbox_edicao}}\",\n        \"rec_data_base_venc\": \"{{data_base}}\",\n        \"rec_periodo\": \"{{periodo_recebimento}}\",\n        \"rec_periodo_1_inicio\": \"{{rec_periodo_1_inicio}}\",\n        \"rec_periodo_1_final\": \"{{rec_periodo_1_final}}\",\n        \"rec_periodo_1_dia\": \"{{rec_periodo_1_dia}}\",\n        \"rec_periodo_2_inicio\": \"{{rec_periodo_2_inicio}}\",\n        \"rec_periodo_2_final\": \"{{rec_periodo_2_final}}\",\n        \"rec_periodo_2_dia\": \"{{rec_periodo_2_dia}}\",\n        \"rec_caso_dia_nao_util\": \"{{dia_nao_util}}\",\n        \"considera_pedagio_base_calc\": \"{{value_checkbox}}\",\n        \"codigo_tributacao_municipio\": null,\n        \"aplica_reducao_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_base_calc\": \"{{value_checkbox}}\",\n        \"considera_icms_st_base_calc\": \"{{value_checkbox}}\",\n        \"ind_nat_ret\": null,\n        \"cod_receita\": null,\n        \"altera_cst\": \"{{value_checkbox}}\",\n        \"condicao\": {\n            \"cole_uf\": [\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AC\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AL\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AP\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"AM\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"BA\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"CE\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"DF\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"ES\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"GO\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MA\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MT\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MS\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"MG\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PA\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PB\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PR\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PE\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"PI\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RJ\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RN\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RS\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RO\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"RR\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"SC\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"SP\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"SE\",\n                    \"tag\": \"cole_uf\"\n                },\n                {\n                    \"operation\": \"INSERT\",\n                    \"id\": \"TO\",\n                    \"tag\": \"cole_uf\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto ICMS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c49fdca3-fbc2-4d80-8b82-8205b2a4bd6f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7e1bac10-6fae-4c94-9e19-795b5c8c3973",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.items[0].tipo_documento;",
									"    var tipo_doc_request = pm.environment.get(\"tipo_documento_imposto\");",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Descricão\", function () {",
									"    var descricao_response = jsonData.result.items[0].descricao;",
									"    var descricao_request = pm.environment.get(\"descricao_imposto_icms\");",
									"",
									"    pm.expect(descricao_response).eql(descricao_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Imposto\", function () {",
									"    var imposto_tipo_response = jsonData.result.items[0].imposto_tipo_id;",
									"    var imposto_tipo_request = pm.environment.get(\"imposto_tipo_id_icms\");",
									"",
									"    pm.expect(imposto_tipo_response).eql(imposto_tipo_request);",
									"});",
									"",
									"pm.test(\"Insere Imposto Situação\", function () {",
									"    var imposto_situacao_response = jsonData.result.items[0].imposto_situacao_id;",
									"    var imposto_situacao_request = pm.environment.get(\"cod_situacao_tributaria_icms\");",
									"",
									"    pm.expect(imposto_situacao_response).eql(imposto_situacao_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Alíquota\", function () {",
									"    var aliquota_imposto_response = jsonData.result.items[0].aliquota;",
									"    var aliquota_imposto_request = pm.environment.get(\"valor_aliquota_edicao\");",
									"",
									"    pm.expect(aliquota_imposto_response).eql(aliquota_imposto_request);",
									"});",
									"",
									"pm.test(\"Insere Redução da Base de Cálculo\", function () {",
									"    var red_base_calculo_response = jsonData.result.items[0].reducao_base_calculo;",
									"    var red_base_calculo_request = pm.environment.get(\"red_base_calculo\");",
									"",
									"    pm.expect(red_base_calculo_response).eql(red_base_calculo_request);",
									"});",
									"",
									"pm.test(\"Insere Fundamentação Legal\", function () {",
									"    var fundamentacao_legal_response = jsonData.result.items[0].fundamentacao_legal;",
									"    var fundamentacao_legal_request = pm.environment.get(\"descricao_doc_imposto\");",
									"",
									"    pm.expect(fundamentacao_legal_response).eql(fundamentacao_legal_request);",
									"});",
									"",
									"pm.test(\"Insere Reservado ao Fisco\", function () {",
									"    var reservado_fisco_response = jsonData.result.items[0].reservado_fisco;",
									"    var reservado_fisco_request = pm.environment.get(\"reservado_fisco\");",
									"",
									"    pm.expect(reservado_fisco_response).eql(reservado_fisco_request);",
									"});",
									"",
									"pm.test(\"Insere Regime Cumulativo\", function () {",
									"    var regime_cumulativo_response = jsonData.result.items[0].regime_cumulativo;",
									"    var regime_cumulativo_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(regime_cumulativo_response).eql(regime_cumulativo_request);",
									"});",
									"",
									"pm.test(\"Insere Origem Imposto\", function () {",
									"    var imposto_origem_response = jsonData.result.items[0].imposto_origem_id;",
									"    var imposto_origem_request = pm.environment.get(\"cod_imposto_origem\");",
									"",
									"    pm.expect(imposto_origem_response).eql(imposto_origem_request);",
									"});",
									"",
									"pm.test(\"Insere Fórmula Vencimento\", function () {",
									"    var formula_venc_response = jsonData.result.items[0].rec_util_formula_venc;",
									"    var formula_venc_request = pm.environment.get(\"value_checkbox_edicao\");",
									"",
									"    pm.expect(formula_venc_response).eql(formula_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Data Base Vencimento\", function () {",
									"    var data_base_venc_response = jsonData.result.items[0].rec_data_base_venc;",
									"    var data_base_venc_request = pm.environment.get(\"data_base\");",
									"",
									"    pm.expect(data_base_venc_response).eql(data_base_venc_request);",
									"});",
									"",
									"pm.test(\"Insere Período de Recolhimento\", function () {",
									"    var periodo_rec_response = jsonData.result.items[0].rec_periodo;",
									"    var periodo_rec_request = pm.environment.get(\"periodo_recebimento\");",
									"",
									"    pm.expect(periodo_rec_response).eql(periodo_rec_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Início\", function () {",
									"    var periodo_1_inicio_response = jsonData.result.items[0].rec_periodo_1_inicio;",
									"    var periodo_1_inicio_request = pm.environment.get(\"rec_periodo_1_inicio\");",
									"",
									"    pm.expect(periodo_1_inicio_response).eql(periodo_1_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Final\", function () {",
									"    var periodo_1_final_response = jsonData.result.items[0].rec_periodo_1_final;",
									"    var periodo_1_final_request = pm.environment.get(\"rec_periodo_1_final\");",
									"",
									"    pm.expect(periodo_1_final_response).eql(periodo_1_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 1 Dia de Recolhimento \", function () {",
									"    var periodo_1_recolhimento_response = jsonData.result.items[0].rec_periodo_1_dia;",
									"    var periodo_1_recolhimento_request = pm.environment.get(\"rec_periodo_1_dia\");",
									"",
									"    pm.expect(periodo_1_recolhimento_response).eql(periodo_1_recolhimento_request);",
									"});",
									"",
									"//Período 2 -------------------------------------------------------------------------",
									"",
									"pm.test(\"Insere Período 2 Início\", function () {",
									"    var periodo_2_inicio_response = jsonData.result.items[0].rec_periodo_2_inicio;",
									"    var periodo_2_inicio_request = pm.environment.get(\"rec_periodo_2_inicio\");",
									"",
									"    pm.expect(periodo_2_inicio_response).eql(periodo_2_inicio_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Final\", function () {",
									"    var periodo_2_final_response = jsonData.result.items[0].rec_periodo_2_final;",
									"    var periodo_2_final_request = pm.environment.get(\"rec_periodo_2_final\");",
									"",
									"    pm.expect(periodo_2_final_response).eql(periodo_2_final_request);",
									"});",
									"",
									"pm.test(\"Insere Período 2 Dia de Recolhimento \", function () {",
									"    var periodo_2_recolhimento_response = jsonData.result.items[0].rec_periodo_2_dia;",
									"    var periodo_2_recolhimento_request = pm.environment.get(\"rec_periodo_2_dia\");",
									"",
									"    pm.expect(periodo_2_recolhimento_response).eql(periodo_2_recolhimento_request);",
									"});",
									"",
									"// ===================================================================================",
									"",
									"pm.test(\"Insere Dia de Recolhimento em caso de dia não útil\", function () {",
									"    var recolhimento_dia_nao_util_response = jsonData.result.items[0].rec_caso_dia_nao_util;",
									"    var recolhimento_dia_nao_util_request = pm.environment.get(\"dia_nao_util\");",
									"",
									"    pm.expect(recolhimento_dia_nao_util_response).eql(recolhimento_dia_nao_util_request);",
									"});",
									"",
									"",
									"//Checkbox",
									"pm.test(\"Insere Consideração de Pedágio Base Cálculo\", function () {",
									"    var pedagio_base_calc_response = jsonData.result.items[0].considera_pedagio_base_calc;",
									"    var pedagio_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(pedagio_base_calc_response).eql(pedagio_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Redução Base Cálculo\", function () {",
									"    var reducao_base_calc_response = jsonData.result.items[0].aplica_reducao_base_calc;",
									"    var reducao_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(reducao_base_calc_response).eql(reducao_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Base Cálculo\", function () {",
									"    var icms_base_calc_response = jsonData.result.items[0].considera_icms_base_calc;",
									"    var icms_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_base_calc_response).eql(icms_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere Consideração ICMS Substituto Base Cálculo\", function () {",
									"    var icms_sbst_base_calc_response = jsonData.result.items[0].considera_icms_st_base_calc;",
									"    var icms_sbst_base_calc_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(icms_sbst_base_calc_response).eql(icms_sbst_base_calc_request);",
									"});",
									"",
									"pm.test(\"Insere CST\", function () {",
									"    var cst_response = jsonData.result.items[0].altera_cst;",
									"    var cst_request = pm.environment.get(\"value_checkbox\");",
									"",
									"    pm.expect(cst_response).eql(cst_request);",
									"});",
									"",
									"//==============================================================================================="
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"imposto_config_id\": \"{{id_cenario_imposto}}\",\n        \"lista\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "835227a5-9398-4fe4-8141-31cc12562102",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bcb5a5bc-7cee-4500-b6ff-74208d6e1faa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM A - NF",
			"item": [
				{
					"name": "M220 - manipulaMotorista NF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68b443c4-d97e-4dd4-ac5c-4fad53a5f164",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4ae632af-d2b8-4953-a13c-9b0f0de294cf",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50972296-540f-4ac9-a5d6-401efc1f86e2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4de5b689-e88c-4aec-94f8-bedeb8f9b8ec",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    pm.environment.set(\"alt_modalidade\", modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df05097e-a9b5-4c5c-93c8-b31d3a24fe6b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc85d46c-4baf-4b87-b0fb-9e6092922f0e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "af056361-d61d-426f-bfae-75b40bbc3b5b",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f26f8b6-44a5-4d8a-a38e-4a3a6b8933d3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c1527e1-ffad-41d8-a846-cfb79b6c0998",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "df20c377-96a1-49a3-92ba-02d8e3962e48",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 5;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\", \n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14cba172-8c62-4f93-a54e-4e579d011f02",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17ba2411-cccb-477b-bb19-6abe2f641680",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72f01a40-db3d-49f4-903c-1831afeb7c61",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68f9d399-916f-4c6b-957c-564cd2b258fc",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32ce2119-2ced-4dc9-8d99-0097b9f44421",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13c0a5c4-a2cf-432b-9ac0-1beaf87eaa58",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6d9cded-c017-4df6-a27c-c8c8a2013dd8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0b9e83b-8ed9-4e9c-a4ba-c3ca3f7e40b3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f64ca5ec-4885-4073-9e0e-32aabbf43d3d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fe837f0-f0bc-4a78-98e7-6a0e8ac9c4a1",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6f48d5c6-2006-4b3b-b670-70abcfc025ba",
								"exec": [
									"pm.test(\"Gerar cartão frete\", function (){",
									"    var num_cartao = Math.round(Math.random() * 35) + 15645;",
									"    var num_cartao_aux = Math.round(Math.random() * 10) + 365484;",
									"    var num_cartao_frete = num_cartao+num_cartao_aux;",
									"    pm.environment.set(\"num_cartao_frete\", num_cartao_frete);",
									"});",
									"",
									"pm.test(\"Gerar cartão pedágio\", function (){",
									"    var num_cartao = Math.round(Math.random() * 55) + 15645;",
									"    var num_cartao_aux = Math.round(Math.random() * 22) + 321564;",
									"    var num_cartao_pedagio = num_cartao+num_cartao_aux;",
									"    pm.environment.set(\"num_cartao_pedagio\", num_cartao_pedagio);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d71558d4-4844-4841-be3d-b6147f9bac22",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e4105dd-c4cf-43ba-9aa4-e73547c4bf9d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "567d6df6-0e28-4ba2-bebb-013258f52fc8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6399ddc1-2aa6-4e08-8731-574d91cfd9f5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f1ff4f7-df42-492b-b9a0-004a87914e96",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "94e60fbc-d5a6-4fbd-ba05-a4004ada8b28",
								"exec": [
									"pm.test(\"Gerar Informações Fiscais\", function() {",
									"    var modelo = '01';",
									"    var serie = 1;",
									"    var sub_serie = 1;",
									"    pm.environment.set(\"modelo\", modelo);",
									"    pm.environment.set(\"serie\", serie);",
									"    pm.environment.set(\"sub_serie\", sub_serie);",
									"});",
									"",
									"pm.test(\"Gerar Peso\", function() {",
									"    var peso;",
									"    pm.environment.set(\"peso\", 8000);",
									"});",
									"",
									"pm.test(\"Gerar Informações Dimensões\", function() {",
									"    pm.environment.set(\"altura\", 2.4);",
									"    pm.environment.set(\"largura\", 2.4);",
									"    pm.environment.set(\"comprimento\", 14.4);",
									"    pm.environment.set(\"cubagem\", 30);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d1b11f40-d096-413e-8ec5-65576b6eef39",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nf\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{pedido_id}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": \"\",\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 0\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c4b0da0-eeac-4db8-85ac-bc9140d2844c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].solicitacoes[0].data_carregamento_fim;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].solicitacoes[0].data_entrega_inicio;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Verificação das inserções Nota Fiscal",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"pedido_id\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere CFOP\", function () {",
									"    var cfop_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cfop;",
									"    var cfop_request = pm.environment.get(\"cfop_id\");",
									"    cfop_request = ''+cfop_request;",
									"",
									"    pm.expect(cfop_response).eql(cfop_request);",
									"});",
									"",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 0;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"    ",
									"    var uf_imposto = jsonData.result.viagem[0].uf;",
									"    pm.environment.set(\"uf_imposto\", uf_imposto);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4ec30bff-bc7f-450c-9b23-ae870d1d6b9c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ed32d42-1fa0-4d85-b8a8-2485ae0427bb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a4967446-1d37-4369-941f-fd0a3ec5de34",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5c3ac5e-9d1e-4fb5-a45b-c8378e8b4ff3",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Obter Id Organizacional\", function (){",
									"    var organizacional_id = jsonData.result.gerais.ccustogerencial.itens[0].organizacional_id;",
									"    pm.environment.set(\"organizacional_id\", organizacional_id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1acfd985-fa65-4806-bfe4-96ef0a7dddc6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bde03e9f-6295-497e-9082-ec021dcea19a",
								"exec": [
									"//Valores emissão de CTE",
									"pm.environment.set(\"valor_frete\", 5000);",
									"",
									"pm.environment.set(\"valor_pedagio\", 1000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0423f560-6928-4468-8248-6ab8c28ef5fa",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cc8db0f-13a3-45dd-a888-fb80d7716be4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "09e39a65-e6a9-42b8-8ce2-3f7ddf07a294",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21299e8b-017b-4b20-9506-8e40eac08079",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "71a94e70-b207-4f5a-bfd8-be7d1669873d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "21da7327-9175-4957-98b1-a882bd6b4584",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3320aa9b-2412-4646-a2cf-35bae0e3b73f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM B - NF OUTROS",
			"item": [
				{
					"name": "M220 - manipulaMotorista Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4043d93a-6942-4348-82f6-96dfc9e4af8b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b13f9ebc-23c9-452c-81f0-f51087ffdc90",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8fdea71-4fb8-41be-aa36-abfe5d4e7a01",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "52d4aff4-05e3-4ca1-8a45-c8fe7d59842d",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f4bd99f-47e3-468e-9a5f-9f7767068b09",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e2f614e-8de1-4029-a593-6d935fd93c5c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9ad28036-5973-45b5-a7d6-8d79bd97781c",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78d85605-498f-4b6e-9873-4ce4511a8e97",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8507b7e-7f70-4f06-a4af-ceac2477f1c0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "26a44799-e4d8-409e-8c70-9fd105e905a5",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd0d9287-a853-43f3-bd16-278459b654e2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2665216c-8bf4-4bcd-82a8-30fd90b56bf5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "adc492ed-c5c9-4e87-9b18-4b97cbb45ebb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "555e5911-bf12-4db2-a8df-814c25b84f1c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31762772-5331-43e6-9c0d-3e24e864f5f2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dcb4de99-0797-4200-91b1-61b63f5acd36",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69c6ee1a-7831-4d25-b3b5-1745c9d77f53",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "108c116c-1730-4457-9bd6-5a1391284cb8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68867c97-bb05-473a-a756-a5fc6b8d6cfb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64ae710e-4f62-4c16-a46d-b1c1524c5c27",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a923d76-f73c-4ae5-a2f0-b7f30c7a4e7d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7ada76c-9f02-4740-a96c-d2f9f9971820",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efc42c89-ee40-430c-935b-d17baccda8bc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c234a2d-c164-40fd-a5f2-c091429cdd93",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca19f659-bbff-4b2e-a325-8ceb7815c040",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28b518e8-8a13-44d6-968e-dc511dbb0bcb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalOutros",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d174e188-719d-483f-b957-fda76fc4e55a",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //Descrição",
									"    var desc_viagem = \"Teste NF\";",
									"    pm.environment.set(\"desc_viagem\", desc_viagem);",
									"    ",
									"    //número NF",
									"    var num_nf_outro = pm.environment.get(\"pedido_id\");",
									"    num_nf_outro += 1;",
									"    pm.environment.set(\"num_nf_outro\", num_nf_outro);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2aadd4ea-8c1c-4fef-b12b-28d6e8739833",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nf_outros\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nf_outro}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"valor_total\": \"{{valor_min}}\", \n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"descricao\": \"{{desc_viagem}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 2\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalOutros",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a688ffa-4671-4349-bb81-6d666476e5b6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Outros                                   |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nf_outro\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = \"U\";",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 2;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bfde204f-0db8-4e3c-8c5b-90265f4dd94d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9094d57-8949-4f01-ba61-f858f1eada52",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "54a606f6-f37d-4056-8da2-bc17c897f64d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NF - Outros",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "192cf032-1726-409b-931f-1f88d0bbd238",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf_outros}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7cb1b8b-65d0-4512-9f72-f1fb37a7a920",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "63ed992f-129e-4c5d-9121-973386d2bf75",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf_outros}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a950ade-ea36-4e22-ae85-00cd193ee401",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d2c3836d-0404-4324-8921-9e98b550c32c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf_outros}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2a32715-d1cb-4ad0-8008-b8370677702c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5240aacb-1340-4f50-8268-ff15127869d6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c55689cb-1712-4889-92e1-50372e4b3d91",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "261158e9-1e80-4b25-b6c2-c4bf09e17415",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM C - NF XML",
			"item": [
				{
					"name": "M220 - manipulaMotorista Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e662d3c5-e74d-405a-81af-d6e3ff5c118a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "98a372a0-c814-4ce0-8f83-a04ef7f82235",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b26fc919-9e9c-4b1a-b974-264cf9f3fabf",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbd48ffd-8350-4bba-838f-9778693aea80",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e7f6f13-f87c-4070-8708-01c86d4eea2a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf07876b-0dde-4555-a1d4-ee0c45186a6f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fba507d8-2b76-4359-a8bd-8368fccf0cc6",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c68685c8-ec9a-465b-9c64-821845262112",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75f364d1-ba62-49f3-8208-42fd2442a558",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "233eb417-7856-482e-a2c4-74a2d0056832",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ee047ec-04ae-4da0-9601-7cef1cde8ded",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "059a98d6-0368-45f2-98fc-459da9933363",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a899bb64-ff10-4e08-b494-8af5fcca86fe",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0add6c7f-4643-477c-8d67-740b0b8742d6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eae90cc5-6dce-4f9f-a60d-9f8b5576776d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a892b2e1-07ed-4579-a2e9-39181e6b0f3e",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0989f427-9bb5-4a43-91c5-7d8137cfce78",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "002bfbd8-ba77-4e56-b82c-2303113d53a1",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f46d7f6-c10d-47bd-9215-259e485ae602",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8257901-a55d-48e5-ba2f-bf745bcb7822",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98aa6de8-19bb-48e9-a6de-61cd88f3a0ca",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1209d1a-e132-4301-962e-a6b81b7d52e4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e50969c6-586a-474a-b141-036423676134",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2418187d-0b8d-4bf8-ab96-057ffc50fae5",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "218e1b3b-2fb4-47e4-aa33-0c5ef78cd65e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc4d8061-ad77-4f76-ac70-da5dcb35d844",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4dc8542-68f0-4e07-bacb-75a0ad2fa74e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var numero_nfe_xml = jsonData.result.params.numero;",
									"    pm.environment.set(\"numero_nfe_xml\", numero_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número NFe\", function () {",
									"    var serie_nfe_xml = jsonData.result.params.serie;",
									"    pm.environment.set(\"serie_nfe_xml\", serie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Data Emissão NFe\", function () {",
									"    var data_emissao_nfe_xml = jsonData.result.params.data_emissao;",
									"    pm.environment.set(\"data_emissao_nfe_xml\", data_emissao_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml\", cod_end_remetente_xml);",
									"});",
									"",
									"pm.test(\"Obter Destinatário NFe\", function () {",
									"    var cod_destinatario_xml = jsonData.result.params.cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario_xml\", cod_destinatario_xml);",
									"    ",
									"    var cod_end_destinatario_xml = jsonData.result.params.endereco_destinatario[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_destinatario_xml\", cod_end_destinatario_xml);",
									"});",
									"",
									"pm.test(\"Obter Modelo NFe\", function () {",
									"    var modelo_xml = jsonData.result.params.modelo;",
									"    pm.environment.set(\"modelo_xml\", modelo_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor NFe\", function () {",
									"    var valor_nfe_xml = jsonData.result.params.valor;",
									"    pm.environment.set(\"valor_nfe_xml\", valor_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Valor Segurado NFe\", function () {",
									"    var valor_seg_nfe_xml = jsonData.result.params.valor_segurado;",
									"    pm.environment.set(\"valor_seg_nfe_xml\", valor_seg_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter Número Espécie NFe\", function () {",
									"    var num_especie_nfe_xml = jsonData.result.params.num_especie;",
									"    pm.environment.set(\"num_especie_nfe_xml\", num_especie_nfe_xml);",
									"});",
									"",
									"pm.test(\"Obter CFOP NFe\", function () {",
									"    var cfop_nfe_xml = jsonData.result.params.cfop;",
									"    pm.environment.set(\"cfop_nfe_xml\", cfop_nfe_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ad0df79f-82b4-4fad-b38d-f4b45f3a05ca",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xml\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xml}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNFeXML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3fda2b20-fdc0-4f8f-bf46-a02bd8086c65",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 2;",
									"    pm.environment.set(\"num_nfe\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"52191011325194000111550010000512201703935134\";",
									"    pm.environment.set(\"chave\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0e271f7d-09a5-462f-8623-febed0ed4051",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nf_xml\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{numero_nfe_xml}}\",\n                \"data_emissao\": \"{{data_emissao_nfe_xml}}\",\n                \"modelo\": \"{{modelo_xml}}\",\n                \"serie\": \"{{serie_nfe_xml}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_nfe_xml}}\", \n                \"valor_segurado\": \"{{valor_seg_nfe_xml}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_nfe_xml}}\",\n                \"chave_acesso_nfe\": \"{{chave_xml}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNFeXML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6760061e-6081-4ce7-992c-beda8f572ffb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"// ============================================================================================================",
									"// |                         Verificação das inserções Nota Fiscal Eletrônica XML                             |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"numero_nfe_xml\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Chave Acesso NFe\", function () {",
									"    var chave_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_request = pm.environment.get(\"chave_xml\");",
									"",
									"    pm.expect(chave_response).eql(chave_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão\", function () {",
									"    var data_emissao_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].data_emissao;",
									"    var data_emissao_request = pm.environment.get(\"data_emissao_nfe_xml\");",
									"",
									"    pm.expect(data_emissao_response).eql(data_emissao_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_xml\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie_nfe_xml\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_nfe_xml\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_seg_nfe_xml\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa;",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere CFOP\", function () {",
									"    var cfop_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cfop;",
									"    var cfop_request = pm.environment.get(\"cfop_nfe_xml\");",
									"    cfop_request = ''+cfop_request;",
									"",
									"    pm.expect(cfop_response).eql(cfop_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e76020a9-8a0b-4b0a-9688-7e9e6fd013f2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c6fdf152-f5f9-4cad-93b4-2d15eb9835df",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NF - XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e8e746f-804f-40bd-bead-e82f689ca2a6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a6f29579-20ce-4488-987d-a612f0082c4e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf_xml}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f839ec1-7692-4779-9683-dfdfa7961274",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a6cd316d-411c-4d0b-ace0-54a1115c7bb8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nf_xml}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": \"{{id_centro_custo}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dbfb6fb-4a2a-41d1-a866-3773a5472edf",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e4de7506-4f56-47c5-8b3f-0c069a6a7f71",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nf_xml}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": \"{{id_centro_custo}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28b7fc89-78b0-453a-8d56-80edec92fb37",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1e98865a-78c8-4fff-8613-97276d2a3a77",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "69a54dc2-719b-4c83-9c17-8a84860182ce",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "baed5c1a-5d8f-4df0-9030-1e0559588373",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM D - NFE AGRUPADA",
			"item": [
				{
					"name": "M220 - manipulaMotorista NFe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "355c948b-f9e6-44a2-bf0d-92c7fe362eb2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dcf1c727-b150-4bbb-99f7-04ccff11edff",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd3fdf29-76d8-4a4a-9406-5c1d9ee2e819",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "149b7e10-2fe2-415e-997e-b358e39cf47e",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a039b936-c447-44d1-a941-e4159a65f6f6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "221cda77-2dc6-4410-a4e2-467eac58760f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fe4ca215-5bbe-4013-9119-acf5c9c8abe5",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b89ba7d-2eeb-4b20-9dfa-52b3f7cc0afd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd15e40b-ac33-484e-af9f-63122f4ff4c6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bb9d2872-241a-44b0-a351-080ca81b9fde",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "570caccb-9ae4-4b2e-88ea-ebf727d4639e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aaa5a0e9-c70a-456b-a505-e8d2ff0cbcdb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29c10c87-db9a-4d66-8c88-dbe1cdf8034c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fea77660-4307-4a48-a1d0-c20c2e0ca759",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3af9d5bd-4cb7-4b12-8360-bec06c1e432d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id_nfe\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1bbd0686-8a4d-4c97-a2de-6456468af41d",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "297ba659-52de-45d3-9ce7-b31eafee7717",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6df66df-e262-4708-a680-8536317fdb33",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4208c1b-82de-404a-a147-86bc7ab2b0f8",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cac4f12-eaf0-4c42-b920-a081b37ebe8a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec767ed6-6a11-4ab9-9a1c-29cae6b3a372",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f39c993d-f39f-4f1d-b3c6-316c50de4c56",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d37ded8-bca6-4603-aa75-3b5041bde083",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e81a3346-ce2c-4873-94e4-cde85b739f4f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db1db14e-9dd4-4f63-85d6-124ee4c86cac",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41677e44-2e06-4aac-a8b5-dea4d31a2235",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "82c2c3dc-c6d0-4c56-8164-e0e9bc80161f",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    ",
									"    pm.environment.set(\"cubagem\", 45);",
									"    ",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 2;",
									"    pm.environment.set(\"num_nfe\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"52191011325194000111550010000512201703935134\";",
									"    pm.environment.set(\"chave\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "40394999-613f-46ad-849d-77c21a46ba12",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nfe\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0526e1e2-5ed0-4ee7-a3dd-73523ae40096",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie; ",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4eb67404-c054-488e-8f57-1170008b83df",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3135a0e8-b748-4338-9a19-03c49c697b68",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml_nf2\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml_nf2\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml_nf2\", cod_end_remetente_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d48866fe-370d-487d-bd87-34e41d9fb8a0",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xmlNF2\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xmlNF2}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3705c659-49a0-4af8-be5e-cae13e805fdd",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 4;",
									"    pm.environment.set(\"num_nfe2\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"41200207031916000158550010000009111009331856\";",
									"    pm.environment.set(\"chave_2\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "09896af5-db7e-45c4-b823-31b8f8e13aed",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe2}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave_xml_nf2}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml_nf2}}\", \n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml_nf2}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7759c8f-a067-487a-bd79-50c89293d60f",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2a64894-1b97-4dd4-a0fc-dae41e0890d8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb750a1c-8a8a-41c6-9781-21cd5487a045",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4731d132-8834-48f4-aafb-59a6346bff7f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id_nfe}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NFe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1e4f44e-446c-44e7-a17a-507e84feacca",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nfe}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b62363e3-2ed0-4143-8688-67095eac409d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "732ccedb-002d-4c49-91cd-633170754fa1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2bed577-9419-4890-82df-36bdc1d60146",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9b5f1f67-5dfb-4a3b-8787-52bb3d47fa7f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfe0f08d-d4fb-401b-ae4a-53d6d0b47ad4",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8b797322-c1e7-44d7-bca8-0629f7cfcb37",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5a9801da-dd56-4a72-a3a5-fa86c172515b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e23ac902-5f24-48cb-bca7-4e8ee4d3417b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VIAGEM E - NFE NAO-AGRUPADA",
			"item": [
				{
					"name": "M220 - manipulaMotorista E",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d428cbc-866d-4b3a-8db2-4ab193d46398",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter Código Pessoa\", function () {",
									"    var id_pessoa = jsonData.result.cod_pessoa;",
									"    pm.environment.set(\"cod_pessoa\", id_pessoa);",
									"});",
									"",
									"pm.test(\"Obter Código Email Pessoa\", function () {",
									"    var cod_email = jsonData.result.emails[0].cod_email;",
									"    pm.environment.set(\"cod_email\", cod_email);",
									"    ",
									"    var cod_email2 = jsonData.result.emails[1].cod_email;",
									"    pm.environment.set(\"cod_email2\", cod_email2);",
									"});",
									"",
									"pm.test(\"Obter Código Conta Bancária\", function () {",
									"    var cod_conta = jsonData.result.contas_bancarias[0].cod_conta;",
									"    pm.environment.set(\"cod_conta\", cod_conta);",
									"    ",
									"    var cod_conta2 = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.environment.set(\"cod_conta2\", cod_conta2);",
									"});",
									"",
									"pm.test(\"Obter Código Telefone\", function () {",
									"    var cod_telefone = jsonData.result.telefones[0].cod_telefone;",
									"    pm.environment.set(\"cod_telefone\", cod_telefone);",
									"    ",
									"    var cod_telefone2 = jsonData.result.telefones[1].cod_telefone;",
									"    pm.environment.set(\"cod_telefone2\", cod_telefone2);",
									"});",
									"",
									"pm.test(\"Obter Código Endereço\", function () {",
									"    var cod_endereco = jsonData.result.enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco\", cod_endereco);",
									"    ",
									"    var cod_endereco2 = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.environment.set(\"cod_endereco2\", cod_endereco2);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Verificação das inserções",
									"//Endereço",
									"pm.test(\"Insere Tipo Endereço\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos[0].cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Endereço\", function () {",
									"    var tipo_padrao_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).endereco_padrao;",
									"    var tipo_padrao_end_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_end_response).eql(tipo_padrao_end_request);",
									"    ",
									"    var tipo_padrao2_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).endereco_padrao;",
									"    var tipo_padrao2_end_request = pm.environment.get(\"tipo_2\");",
									"    pm.expect(tipo_padrao2_end_response).eql(tipo_padrao2_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//Endereço 2",
									"pm.test(\"Insere Tipo Endereço 2\", function () {",
									"    var tipo_end_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_endereco_tipo;",
									"    var tipo_end_request = pm.environment.get(\"cod_endereco_tipo\");",
									"    ",
									"    pm.expect(tipo_end_response).eql(tipo_end_request);",
									"});",
									"",
									"pm.test(\"Insere CEP Endereço 2\", function () {",
									"    var cep_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cep;",
									"    var cep_resquest = pm.environment.get(\"cep_1\");",
									"    ",
									"    pm.expect(cep_response).eql(cep_resquest);",
									"});",
									"",
									"pm.test(\"Insere Município Endereço 2\", function () {",
									"    var cidade_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).municipio_id;",
									"    var cidade_resquest = pm.environment.get(\"municipio_id_ins_est\");",
									"    ",
									"    pm.expect(cidade_response).eql(cidade_resquest);",
									"});",
									"",
									"pm.test(\"Insere Inscrição Estadual Endereço 2\", function () {",
									"    var insc_est_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).inscricao_estadual;",
									"    var insc_est_resquest = pm.environment.get(\"inscricao_estadual\");",
									"    ",
									"    pm.expect(insc_est_response).eql(insc_est_resquest);",
									"});",
									"",
									"pm.test(\"Insere Logradouro Endereço 2\", function () {",
									"    var logradouro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).logradouro;",
									"    var logradouro_request = pm.environment.get(\"logradouro1\");",
									"    ",
									"    pm.expect(logradouro_response).eql(logradouro_request);",
									"});",
									"",
									"pm.test(\"Insere Número Endereço 2\", function () {",
									"    var numero_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).numero;",
									"    var numero_request = pm.environment.get(\"num_endereco1\");",
									"    ",
									"    pm.expect(numero_response).eql(numero_request);",
									"});",
									"",
									"pm.test(\"Insere Complemento Endereço 2\", function () {",
									"    var complemento_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).complemento;",
									"    var complemento_request = pm.environment.get(\"complemento1\");",
									"    ",
									"    pm.expect(complemento_response).eql(complemento_request);",
									"});",
									"",
									"pm.test(\"Insere Bairro Endereço 2\", function () {",
									"    var bairro_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).bairro;",
									"    var bairro_request = pm.environment.get(\"bairro1\");",
									"    ",
									"    pm.expect(bairro_response).eql(bairro_request);",
									"});",
									"",
									"pm.test(\"Insere Atividade Fiscal Endereço 2\", function () {",
									"    var ativ_fiscal_response = jsonData.result.enderecos.find(x => x.cep == pm.environment.get(\"cep_1\")).cod_atividade_fiscal;",
									"    var ativ_fiscal_request = pm.environment.get(\"cod_atividade_fiscal\");",
									"    ",
									"    pm.expect(ativ_fiscal_response).eql(ativ_fiscal_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Telefone",
									"pm.test(\"Insere Tipo Telefone\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Telefone\", function () {",
									"    var tipo_padrao_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone\")).telefone_padrao;",
									"    var tipo_padrao_fone_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_fone_response).eql(tipo_padrao_fone_request);",
									"    ",
									"    var tipo_padrao2_fone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_padrao;",
									"    var tipo_padrao2_fone_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_fone_response).eql(tipo_padrao2_fone_request);",
									"});",
									"",
									"//Telefone 2",
									"pm.test(\"Insere Tipo Telefone 2\", function () {",
									"    var fone_id_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_tipo_id;",
									"    var fone_id_request = pm.environment.get(\"tipo_fone_id\");",
									"    ",
									"    pm.expect(fone_id_response).eql(fone_id_request);",
									"});",
									"",
									"pm.test(\"Insere Telefone 2\", function () {",
									"    var telefone_response = jsonData.result.telefones.find(x => x.telefone_completo == pm.environment.get(\"telefone2\")).telefone_completo;",
									"    var telefone_request = pm.environment.get(\"telefone2\");",
									"    ",
									"    pm.expect(telefone_response).eql(telefone_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Email",
									"pm.test(\"Insere Tipo Email\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).endereco;",
									"    var email_request = pm.environment.get(\"email\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Email\", function () {",
									"    var tipo_padrao_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_padrao\")).email_padrao;",
									"    var tipo_padrao_email_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_email_response).eql(tipo_padrao_email_request);",
									"    ",
									"    var tipo_padrao2_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_padrao;",
									"    var tipo_padrao2_email_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_email_response).eql(tipo_padrao2_email_request);",
									"});",
									"",
									"//Email 2",
									"pm.test(\"Insere Tipo Email 2\", function () {",
									"    var tipo_email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).email_tipo_id;",
									"    var tipo_email_request = pm.environment.get(\"email_tipo_id\");",
									"",
									"    pm.expect(tipo_email_response).eql(tipo_email_request);",
									"});",
									"",
									"pm.test(\"Insere Endereço Email 2\", function () {",
									"    var email_response = jsonData.result.emails.find(x => x.email_padrao == pm.environment.get(\"tipo_2\")).endereco;",
									"    var email_request = pm.environment.get(\"email2\");",
									"",
									"    pm.expect(email_response).eql(email_request);",
									"});",
									"",
									"//Conta",
									"pm.test(\"Insere Banco\", function () {",
									"    var banco_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).banco_id;",
									"    var banco_request = pm.environment.get(\"banco_id\");",
									"    pm.environment.set(\"debug3\", banco_response);",
									"    ",
									"    var agencia_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_id\")).agencia_id;",
									"    var agencia_request = pm.environment.get(\"agencia_id\");",
									"",
									"    pm.expect(banco_response).eql(banco_request);",
									"    pm.expect(agencia_response).eql(agencia_request);",
									"});",
									"",
									"pm.test(\"Insere Conta\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta;",
									"    var conta_request = pm.environment.get(\"conta_banco\");",
									"    var conta_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_dv;",
									"    var conta_dv_request = pm.environment.get(\"dv_conta_banco\");",
									"",
									"    pm.expect(conta_response).eql(conta_request);",
									"    pm.expect(conta_dv_response).eql(conta_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Banco 2\", function () {",
									"    var banco2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).banco_id;",
									"    var banco2_request = pm.environment.get(\"banco_1_id\");",
									"    var agencia2_response = jsonData.result.contas_bancarias.find(x => x.agencia_id == pm.environment.get(\"agencia_1_id\")).agencia_id;",
									"    var agencia2_request = pm.environment.get(\"agencia_1_id\");",
									"",
									"    pm.expect(banco2_response).eql(banco2_request);",
									"    pm.expect(agencia2_response).eql(agencia2_request);",
									"});",
									"",
									"pm.test(\"Insere Conta 2\", function () {",
									"    var conta2_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta;",
									"    var conta2_request = pm.environment.get(\"conta_banco2\");",
									"    var conta2_dv_response = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_dv;",
									"    var conta2_dv_request = pm.environment.get(\"dv_conta_banco2\");",
									"",
									"    pm.expect(conta2_response).eql(conta2_request);",
									"    pm.expect(conta2_dv_response).eql(conta2_dv_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo Padrão Conta\", function () {",
									"    var tipo_padrao_conta_response =  jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco\")).conta_padrao;",
									"    var tipo_padrao_conta_request = pm.environment.get(\"tipo_padrao\");",
									"    ",
									"    pm.expect(tipo_padrao_conta_response).eql(tipo_padrao_conta_request);",
									"    ",
									"    var tipo_padrao2_conta_request = jsonData.result.contas_bancarias.find(x => x.conta == pm.environment.get(\"conta_banco2\")).conta_padrao;",
									"    var tipo_padrao2_conta_request = pm.environment.get(\"tipo_2\");",
									"    ",
									"    pm.expect(tipo_padrao2_conta_request).eql(tipo_padrao2_conta_request);",
									"});",
									"",
									"//=========================================================================================",
									"",
									"//Teste para verificar se o sistema está permitindo inserir mais de um item.",
									"pm.test(\"Ambos enderecos inseridos\", function () {",
									"    var qtde_endereco = jsonData.result.enderecos[1].cod_endereco;",
									"    pm.expect(qtde_endereco).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos telefones inseridos\", function () {",
									"    var qtde_fone = jsonData.result.telefones[1].cod_telefone;",
									"    pm.expect(qtde_fone).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambos emails inseridos\", function () {",
									"    var qtde_email = jsonData.result.emails[1].cod_email;",
									"    pm.expect(qtde_email).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"Ambas contas inseridas\", function () {",
									"    var qtde_conta = jsonData.result.contas_bancarias[1].cod_conta;",
									"    pm.expect(qtde_conta).not.eql(undefined);",
									"});",
									"",
									"//Teste para verificar se o sistema permite inserir dados repetidos.",
									"pm.test(\"Endereços Diferentes\", function () {",
									"    var num_response = jsonData.result.enderecos[0].numero;",
									"    var num_1_response = jsonData.result.enderecos[1].numero;",
									"    ",
									"    var rua_response = jsonData.result.enderecos[0].logradouro;",
									"    var rua_1_response = jsonData.result.enderecos[1].logradouro;",
									"    ",
									"    var cep_response = jsonData.result.enderecos[0].cep;",
									"    var cep_1_response = jsonData.result.enderecos[1].cep;",
									"    ",
									"    var bairro_response = jsonData.result.enderecos[0].bairro;",
									"    var bairro_1_response = jsonData.result.enderecos[1].bairro;",
									"    ",
									"    pm.expect(num_response).not.eql(num_1_response);",
									"    pm.expect(rua_response).not.eql(rua_1_response);",
									"    pm.expect(cep_response).not.eql(cep_1_response);",
									"    pm.expect(bairro_response).not.eql(bairro_1_response);",
									"});",
									"",
									"pm.test(\"Telefones Diferentes\", function () {",
									"    var fone_response = jsonData.result.telefones[0].telefone_completo;",
									"    var fone_1_response = jsonData.result.telefones[1].telefone_completo;",
									"    ",
									"    pm.expect(fone_response).not.eql(fone_1_response);",
									"});",
									"",
									"pm.test(\"Emails Diferentes\", function () {",
									"    var email_response = jsonData.result.emails[0].endereco;",
									"    var email_1_response = jsonData.result.emails[1].endereco;",
									"    ",
									"    pm.expect(email_response).not.eql(email_1_response);",
									"});",
									"",
									"",
									"pm.test(\"Contas Bancárias Diferentes\", function () {",
									"    var conta_response = jsonData.result.contas_bancarias[0].conta;",
									"    var conta_1_response = jsonData.result.contas_bancarias[1].conta;",
									"    ",
									"    var banco_response = jsonData.result.contas_bancarias[0].banco_id;",
									"    var banco_1_response = jsonData.result.contas_bancarias[1].banco_id;",
									"    ",
									"    pm.expect(conta_response).not.eql(conta_1_response);",
									"    pm.expect(banco_response).not.eql(banco_1_response);",
									"});",
									"",
									"//Verificar tipos de item padrão",
									"pm.test(\"Tipo endereço padrão inserido\", function () {",
									"    var padrao_endereco = jsonData.result.enderecos[0].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"    ",
									"    var padrao2_endereco = jsonData.result.enderecos[1].endereco_padrao;",
									"    pm.expect(padrao_endereco).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo telefone padrão inserido\", function () {",
									"    var padrao_fone = jsonData.result.telefones[0].telefone_padrao;",
									"    pm.expect(padrao_fone).not.eql(null);",
									"    ",
									"    var padrao2_fone = jsonData.result.telefones[1].telefone_padrao;",
									"    pm.expect(padrao2_fone).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo padrão email inserido\", function () {",
									"    var padrao_email = jsonData.result.emails[0].email_padrao;",
									"    pm.expect(padrao_email).not.eql(null);",
									"    ",
									"    var padrao2_email = jsonData.result.emails[1].email_padrao;",
									"    pm.expect(padrao2_email).not.eql(null);",
									"});",
									"",
									"pm.test(\"Tipo conta padrão inserida\", function () {",
									"    var padrao_conta = jsonData.result.emails[0].conta_padrao;",
									"    pm.expect(padrao_conta).not.eql(null);",
									"    ",
									"    var padrao2_conta = jsonData.result.emails[1].conta_padrao;",
									"    pm.expect(padrao2_conta).not.eql(null);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.nat_municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Nacionalidade\", function () {",
									"    var nacionalide_id_response = jsonData.result.cod_nacionalidade;",
									"    var nacionalide_id_request = pm.environment.get(\"nacionalidade_id\");",
									"    ",
									"    pm.expect(nacionalide_id_response).eql(nacionalide_id_request);",
									"});",
									"",
									"pm.test(\"Insere CPF\", function () {",
									"    var cpf_response = jsonData.result.cnpj_cpf;",
									"    var cpf_request = pm.environment.get(\"cpf\");",
									"    ",
									"    pm.expect(cpf_response).eql(cpf_request);",
									"});",
									"",
									"pm.test(\"Insere Nome\", function () {",
									"    var nome_response = jsonData.result.nome;",
									"    var nome_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_response).eql(nome_request);",
									"});",
									"",
									"pm.test(\"Insere Genero\", function () {",
									"    var sexo_response = jsonData.result.cod_sexo;",
									"    var sexo_request = pm.environment.get(\"genero\");",
									"    ",
									"    pm.expect(sexo_response).eql(sexo_request);",
									"});",
									"",
									"pm.test(\"Insere Data Nascimento\", function () {",
									"    var data_nasc_response = jsonData.result.data_nascimento;",
									"    var data_nasc_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_nasc_response).eql(data_nasc_request);",
									"});",
									"",
									"pm.test(\"Insere Número PIS\", function () {",
									"    var pis_response = jsonData.result.pis_pasep_nit;",
									"    var pis_request = pm.environment.get(\"numero_pis\");",
									"    ",
									"    pm.expect(pis_response).eql(pis_request);",
									"});",
									"",
									"pm.test(\"Insere RG\", function () {",
									"    var rg_response = jsonData.result.cart_ident_num;",
									"    var rg_request = pm.environment.get(\"rg\");",
									"    ",
									"    pm.expect(rg_response).eql(rg_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor RG\", function () {",
									"    var rg_emissor_response = jsonData.result.cart_ident_orgao;",
									"    var rg_emissor_request = pm.environment.get(\"emissor_rg\");",
									"    ",
									"    pm.expect(rg_emissor_response).eql(rg_emissor_request);",
									"});",
									"",
									"pm.test(\"Insere UF RG\", function () {",
									"    var uf_rg_response = jsonData.result.cart_ident_uf;",
									"    var uf_rg_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_rg_response).eql(uf_rg_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão RG\", function () {",
									"    var data_emis_response = jsonData.result.cart_ident_emissao;",
									"    var data_emis_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_response).eql(data_emis_request);",
									"});",
									"",
									"pm.test(\"Insere Registro CNH\", function () {",
									"    var registro_cnh_response = jsonData.result.cnh_num_registro;",
									"    var registro_cnh_request = pm.environment.get(\"cnh_registro\");",
									"    ",
									"    pm.expect(registro_cnh_response).eql(registro_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Número CNH\", function () {",
									"    var cnh_numero_response = jsonData.result.cnh_numero;",
									"    var cnh_numero_request = pm.environment.get(\"cnh_numero\");",
									"    ",
									"    pm.expect(cnh_numero_response).eql(cnh_numero_request);",
									"});",
									"",
									"pm.test(\"Insere Categoria CNH\", function () {",
									"    var cat_cnh_response = jsonData.result.cnh_cod_categoria;",
									"    var cat_cnh_request = pm.environment.get(\"categoria_cnh\");",
									"    ",
									"    pm.expect(cat_cnh_response.trim()).eql(cat_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere UF CNH\", function () {",
									"    var uf_cnh_response = jsonData.result.cnh_uf;",
									"    var uf_cnh_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_cnh_response).eql(uf_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Emissor CNH\", function () {",
									"    var emissor_cnh_response = jsonData.result.cnh_orgao_emissor;",
									"    var emissor_cnh_request = pm.environment.get(\"emissor_cnh\");",
									"    ",
									"    pm.expect(emissor_cnh_response).eql(emissor_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Validade CNH\", function () {",
									"    var validade_cnh_response = jsonData.result.cnh_validade;",
									"    var validade_cnh_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(validade_cnh_response).eql(validade_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão CNH\", function () {",
									"    var data_emis_cnh_response = jsonData.result.cnh_data_emissao;",
									"    var data_emis_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(data_emis_cnh_response).eql(data_emis_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Data Emissão Primeira CNH\", function () {",
									"    var provisoria_cnh_response = jsonData.result.cnh_primeira_habilitacao;",
									"    var provisoria_cnh_request = pm.environment.get(\"data_antiga\");",
									"    ",
									"    pm.expect(provisoria_cnh_response).eql(provisoria_cnh_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Mãe\", function () {",
									"    var nome_mae_response = jsonData.result.nome_mae;",
									"    var nome_mae_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_mae_response).eql(nome_mae_request);",
									"});",
									"",
									"pm.test(\"Insere Nome Pai\", function () {",
									"    var nome_pai_response = jsonData.result.nome_pai;",
									"    var nome_pai_request = pm.environment.get(\"nome\");",
									"    ",
									"    pm.expect(nome_pai_response).eql(nome_pai_request);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fd1d5f67-c881-45a5-a0c2-e3e4de7c173d",
								"exec": [
									"",
									"// Gerar CPF",
									"function gera_random(n) {",
									"\tvar ranNum = Math.round(Math.random()*n);",
									"\treturn ranNum;",
									"}",
									"",
									"function mod(dividendo,divisor) {",
									"\treturn Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"}",
									"",
									"function geraCpf() {",
									"\tvar n = 9;",
									"\tvar n1 = gera_random(n);",
									"\tvar n2 = gera_random(n);",
									"\tvar n3 = gera_random(n);",
									"\tvar n4 = gera_random(n);",
									"\tvar n5 = gera_random(n);",
									"\tvar n6 = gera_random(n);",
									"\tvar n7 = gera_random(n);",
									"\tvar n8 = gera_random(n);",
									"\tvar n9 = gera_random(n);",
									"\t",
									"\tvar d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"\td1 = 11 - (mod(d1,11));",
									"\t",
									"\tif (d1 >= 10) d1 = 0;",
									"\t",
									"\tvar d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"\td2 = 11 - (mod(d2,11));",
									"\t",
									"\tif (d2 >= 10) d2 = 0;",
									"\t",
									"    gera_cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"\treturn gera_cpf;",
									"}",
									"",
									"pm.test(\"Gerar CPF\", function () {",
									"    var cpf = geraCpf();",
									"    pm.environment.set(\"cpf\", cpf);",
									"});",
									"",
									"//Gerar número de PIS",
									"function geraPis() {",
									"    var n = 9;",
									"\tvar num = [9];",
									"\t",
									"\tfor (var i = 0; i < 10; i++) {",
									"\t    num[i] = gera_random(n);",
									"\t}",
									"\t",
									"\tvar x1 = 3 * num[0];",
									"\tvar x2 = 2 * num[1];",
									"\tvar x3 = 9 * num[2];",
									"\tvar x4 = 8 * num[3];",
									"\tvar x5 = 7 * num[4];",
									"\tvar x6 = 6 * num[5];",
									"\tvar x7 = 5 * num[6];",
									"\tvar x8 = 4 * num[7];",
									"\tvar x9 = 3 * num[8];",
									"\tvar x10 = 2 * num[9];",
									"\t",
									"\tvar soma = x1+x2+x3+x4+x5+x6+x7+x8+x9+x10;",
									"\t",
									"\tvar divisao = (mod(soma,11));",
									"\tvar digito_ver = (11-divisao);",
									"\t",
									"\tif (digito_ver === 10 || digito_ver === 11) ",
									"\t    digito_ver = 0;",
									"\t",
									"\tvar pis = ''+num[0]+num[1]+num[2]+num[3]+num[4]+num[5]+num[6]+num[7]+num[8]+num[9]+digito_ver;",
									"\t",
									"\treturn pis;",
									"}",
									"",
									"pm.test(\"Gerar PIS\", function () {",
									"    var num_pis = geraPis();",
									"    var num_pis_edicao = geraPis();",
									"    pm.environment.set(\"numero_pis\", num_pis);",
									"    pm.environment.set(\"num_pis_edicao\", num_pis_edicao);",
									"});",
									"",
									"//Gerador de Nomes",
									"function geraNome() {",
									"    var array_nome = [\"JOÃO\", \"MARIA\", \"PEDRO\", \"ANA\", \"BEATRIZ\", \"JERONIMO\", \"DANIELE\", \"TIAGO\", \"LEONARDO\"];",
									"    var array_sobrenome = [\"SILVA\", \"FERREIRA\", \"SANTOS\", \"LIMA\", \"NASCIMENTO\", \"LOS\", \"NUNES\", \"PRADO\", \"MARCONDES\"];",
									"    var position = Math.round(Math.random() * 8);",
									"    ",
									"    var nome_completo = array_nome[position] + ' ' + array_sobrenome[position];",
									"    ",
									"    return nome_completo;",
									"}",
									"",
									"pm.test(\"Gerar Nome\", function () {",
									"    var nome = geraNome();",
									"    var nome_edicao = geraNome();",
									"    pm.environment.set(\"nome\", nome);",
									"    pm.environment.set(\"nome_edicao\", nome_edicao);",
									"});",
									"",
									"//Gerador de gênero",
									"function geraGenero() {",
									"    var sort = Math.floor((Math.random() * 2) + 1);",
									"    var sexo = '';",
									"    switch (sort) {",
									"        case 1:",
									"            sexo = \"M\";",
									"            break;",
									"        case 2: ",
									"            sexo = \"F\";",
									"            break;",
									"    }",
									"    ",
									"    return sexo;",
									"}",
									"",
									"pm.test(\"Gerar Gênero\", function () {",
									"    var genero = geraGenero();",
									"    var genero_edicao = geraGenero();",
									"    pm.environment.set(\"genero\", genero);",
									"    pm.environment.set(\"genero_edicao\", genero_edicao);",
									"});",
									"",
									"//Gerar Data Antiga",
									"function geraDataAntiga() {",
									"    let data_sistema = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoA = data_sistema.getFullYear();",
									"    anoA -= Math.round((Math.random() * 25) + 5);",
									"    dataA = anoA+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataA;",
									"}",
									"",
									"// Gerar Data Futura",
									"function geraDataFutura() {",
									"    let data_sistema_fut = new Date();",
									"    ",
									"    //dia",
									"    dia  = Math.round((Math.random() * 25) + 1);",
									"    //mês",
									"    mes  = Math.round((Math.random() * 11) + 1);",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data_sistema_fut.getFullYear();",
									"    anoF += Math.round(Math.random() * 3) + 2;",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"//Gerar Data ",
									"pm.test(\"Gerar Data\", function () {",
									"    var data_antiga = geraDataAntiga();",
									"    var data_futura = geraDataFutura();",
									"    var data_antiga_edicao = geraDataAntiga();",
									"    var data_futura_edicao = geraDataFutura();",
									"    ",
									"    pm.environment.set(\"data_antiga\", data_antiga);",
									"    pm.environment.set(\"data_futura\", data_futura);",
									"    pm.environment.set(\"data_antiga_edicao\", data_antiga_edicao);",
									"    pm.environment.set(\"data_futura_edicao\", data_futura_edicao);",
									"});",
									"",
									"//Gerador de RG",
									"pm.test(\"Gerar RG\", function () {",
									"    var identidade = geraCpf();",
									"    var identidade_edicao = geraCpf();",
									"    pm.environment.set(\"rg\", identidade);",
									"    pm.environment.set(\"rg_edicao\", identidade_edicao);",
									"});",
									"",
									"//Orgão Emissor RG",
									"pm.test(\"Gerar Orgão Emissor RG\", function () {",
									"    var emissor_rg = \"SSP\";",
									"    var emissor_rg_edicao = \"SESP\";",
									"    pm.environment.set(\"emissor_rg\", emissor_rg);",
									"    pm.environment.set(\"emissor_rg_edicao\", emissor_rg_edicao);",
									"});",
									"",
									"//Gerador CNH",
									"function geraEmissorCnh() {",
									"    var uf_emissao = [\"SP\", \"RJ\", \"PR\", \"SC\", \"RS\", \"MG\"];",
									"    var position = Math.round((Math.random() * 5) + 0);",
									"    var emis_cnh = \"Detran\" +\"/\"+ uf_emissao[position];",
									"    return emis_cnh;",
									"} ",
									"",
									"pm.test(\"Gerar Número CNH\", function () {",
									"    var cnh_numero = Math.floor((Math.random() * 1000) + 1000);",
									"    cnh_numero = ''+cnh_numero+Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number = Math.floor((Math.random() * 1000) + 1000);",
									"    var cnh_number_1 = Math.floor((Math.random() * 1000) + 5000);",
									"    var cnh_numero_edicao = ''+cnh_number+cnh_number_1;",
									"    ",
									"    pm.environment.set(\"cnh_numero\", cnh_numero);",
									"    pm.environment.set(\"cnh_numero_edicao\", cnh_numero_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Emissor CNH\", function () {",
									"    var emissor_cnh = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh\", emissor_cnh);",
									"    ",
									"    var emissor_cnh_edicao = geraEmissorCnh();",
									"    pm.environment.set(\"emissor_cnh_edicao\", emissor_cnh_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Registro CNH\", function () {",
									"    var cnh_registro = geraCpf();",
									"    pm.environment.set(\"cnh_registro\", cnh_registro);",
									"    ",
									"    var cnh_registro_edicao = geraCpf();",
									"    pm.environment.set(\"cnh_registro_edicao\", cnh_registro_edicao);",
									"});",
									"",
									"//Categoria CNH",
									"function geraCategoria() {",
									"    var cat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"AE\"];",
									"    ",
									"    var position = Math.round(Math.random() * 5);",
									"    ",
									"    var letra = cat[position];",
									"    return letra;",
									"}",
									"",
									"pm.test(\"Gerar Categoria\", function () {",
									"    var categoria_cnh = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh\", categoria_cnh);",
									"    ",
									"    var categoria_cnh_edicao = geraCategoria();",
									"    pm.environment.set(\"categoria_cnh_edicao\", categoria_cnh_edicao);",
									"});",
									"",
									"//Gerador Telefone",
									"function geraTelefone() {",
									"\tvar n1 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n2 = Math.floor((Math.random() * 1000) + 5000);",
									"\tvar n3 = Math.floor((Math.random() * 800) + 100);",
									"\t",
									"\tvar numero_tel = ''+n1+n2+n3;",
									"    return numero_tel;",
									"}",
									"",
									"pm.test(\"Gerar Telefone\", function () {",
									"   var telefone = geraTelefone();",
									"   pm.environment.set(\"telefone\", telefone);",
									"   ",
									"   var telefone2 = geraTelefone();",
									"   pm.environment.set(\"telefone2\", telefone2);",
									"   ",
									"   var telefone_edicao = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao\", telefone_edicao);",
									"   ",
									"   var telefone_edicao2 = geraTelefone();",
									"   pm.environment.set(\"telefone_edicao2\", telefone_edicao2);",
									"});",
									"",
									"//Gerador de Email",
									"",
									"function geraEmail() {",
									"    var array_nome = [\"João\", \"Maria\", \"Pedro\", \"Ana\", \"Beatriz\", \"Jeronimo\", \"Daniele\", \"Tiago\", \"Leonardo\"];",
									"    var provedor = [\"gmail\", \"outlook\", \"hotmail\", \"yahoo\"]",
									"    var position = Math.round(Math.random() * 3);",
									"    var posicao = Math.round(Math.random() * 8);",
									"    var aux_email = Math.round(Math.random() * 10000) + 5000000;",
									"    var provedor_email = provedor[position];",
									"    var nome_email = array_nome[posicao]+posicao+aux_email;",
									"    var email_completo = nome_email + \"@\" + provedor_email + \".com\";",
									"    ",
									"    return email_completo;",
									"}",
									"",
									"pm.test(\"Gerar Email\", function () {",
									"    var email = geraEmail();",
									"    pm.environment.set(\"email\", email);",
									"    ",
									"    var email2 = geraEmail();",
									"    pm.environment.set(\"email2\", email2);",
									"    ",
									"    var email_edicao = geraEmail();",
									"    pm.environment.set(\"email_edicao\", email_edicao);",
									"    ",
									"    var email_edicao2 = geraEmail();",
									"    pm.environment.set(\"email_edicao2\", email_edicao2);",
									"});",
									"",
									"",
									"//Gerador Tipo Endereço",
									"function geraTipoEndereco() {",
									"    var sort = Math.floor((Math.random() * 3) + 1);",
									"    var tipo_endereco = '';",
									"    ",
									"    switch (sort) {",
									"        case 1:",
									"            tipo_endereco = 5;",
									"            break;",
									"        case 2: ",
									"            tipo_endereco = 2;",
									"            break;",
									"        case 3:",
									"            tipo_endereco = 1;",
									"            break;",
									"    }",
									"    ",
									"    return tipo_endereco;",
									"}",
									"",
									"pm.test(\"Gerar Tipo Endereço\", function () {",
									"    var cod_endereco_tipo = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo\", cod_endereco_tipo);",
									"    ",
									"    var cod_endereco_tipo_edicao = geraTipoEndereco();",
									"    pm.environment.set(\"cod_endereco_tipo_edicao\", cod_endereco_tipo_edicao);",
									"});",
									"",
									"//Endereço",
									"function geraBairro() {",
									"    var array_bairro = [\"CENTRO\", \"UVARANAS\", \"OFICINAS\", \"NOVA RÚSSIA\", \"JARDIM CARVALHO\", \"PARAÍSO\", \"LONDRES\", \"NEVES\"];",
									"    var sort = Math.round(Math.random() * 7);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var vila = array_bairro[sort]+\" \"+aux;",
									"    return vila;",
									"}",
									"",
									"function geraLogradouro() {",
									"    var array_rua = [\"VICENTE MACHADO\", \"BALDUINO TAQUES\", \"ERNESTO VILELA\", \"MONTEIRO LOBATO\", \"CARLOS CAVALCANTI\", \"AV .DOM PEDRO II\", \"AV .FERNANDES PINHEIRO\",",
									"    \"AV .JOÃO M SANTOS RIBAS\", \"AV .PRESIDENTE KENNEDY\",\"AV .VISC MAUÁ\", \"AV .VISC TAUNAY\", \"AV. BONIFÁCIO VILELA\"];",
									"    var sort = Math.round(Math.random() * 11);",
									"    var aux = Math.round(Math.random() * 10000) + 5000000;",
									"    var rua = array_rua[sort]+\" \"+aux;",
									"    return rua;",
									"}",
									"",
									"function geraComplemento() {",
									"    var array_complemento = [\"AP-10\", \"AP-20\", \"AP-30\", \"AP-40\", \"AP-50\"];",
									"    var sort = Math.round(Math.random() * 4);",
									"    var complem = array_complemento[sort];",
									"    return complem;",
									"}",
									"",
									"function geraNumeroEndereco() {",
									"    var num_end = Math.round((Math.random() * 1000) + 100);",
									"    return num_end;",
									"}",
									"",
									"pm.test(\"Gerar Endereço\", function () {",
									"    var logradouro = geraLogradouro();",
									"    var complemento = geraComplemento();",
									"    var num_endereco = geraNumeroEndereco();",
									"    num_endereco = ''+num_endereco;",
									"    var bairro = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro\", logradouro);",
									"    pm.environment.set(\"num_endereco\", num_endereco);",
									"    pm.environment.set(\"bairro\", bairro);",
									"    pm.environment.set(\"complemento\", complemento);",
									"    ",
									"    var logradouro1 = geraLogradouro();",
									"    var complemento1 = geraComplemento();",
									"    var num_endereco1 = geraNumeroEndereco();",
									"    num_endereco1 = ''+num_endereco1;",
									"    var bairro1 = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro1\", logradouro1);",
									"    pm.environment.set(\"num_endereco1\", num_endereco1);",
									"    pm.environment.set(\"bairro1\", bairro1);",
									"    pm.environment.set(\"complemento1\", complemento1);",
									"    ",
									"    var logradouro_edicao = geraLogradouro();",
									"    var complemento_edicao = geraComplemento();",
									"    var num_endereco_edicao = geraNumeroEndereco();",
									"    num_endereco_edicao = ''+num_endereco_edicao;",
									"    var bairro_edicao = geraBairro();",
									"    ",
									"    pm.environment.set(\"logradouro_edicao\", logradouro_edicao);",
									"    pm.environment.set(\"complemento_edicao\", complemento_edicao);",
									"    pm.environment.set(\"num_endereco_edicao\", num_endereco_edicao);",
									"    pm.environment.set(\"bairro_edicao\", bairro_edicao);",
									"});",
									"",
									"//Atividade Fiscal",
									"function geraAtividadeFiscal() {",
									"    var at_fiscal = Math.floor((Math.random() * 4) + 2);",
									"    return at_fiscal;",
									"}",
									"",
									"pm.test(\"Gerar Atividade Fiscal\", function () {",
									"    var atividade_fiscal = geraAtividadeFiscal();",
									"    pm.environment.set(\"cod_atividade_fiscal\", atividade_fiscal);",
									"    ",
									"    var atividade_fiscal_edicao = geraAtividadeFiscal();",
									"    pm.environment.set(\"atividade_fiscal_edicao\", atividade_fiscal_edicao);",
									"});",
									"",
									"//Inscrição Estadual",
									"pm.test(\"Gerar Inscrição Estadual\", function () {",
									"    // Para validar a inscrição estadual é necessário que esteja vinculada com o estado do \"município_id\". ",
									"    // 55492(PR), 20290(GO)",
									"    // 6182694930(PR), 156296225(GO)",
									"    // 2019939971(PR), 57355(PR)",
									"    ",
									"    var municipio_id_ins_est = 55492;",
									"    var ins_estadual = '6182694930';",
									"    pm.environment.set(\"municipio_id_ins_est\", municipio_id_ins_est);",
									"    pm.environment.set(\"inscricao_estadual\", ins_estadual);",
									"    ",
									"    // Dados para edição",
									"    var alt_municipio_id_ins_est = 20290;",
									"    var altera_ins_estadual = '156296225';",
									"    pm.environment.set(\"alt_municipio_id_ins_est\", alt_municipio_id_ins_est); ",
									"    pm.environment.set(\"alt_inscricao_estadual\", altera_ins_estadual);",
									"    ",
									"    var municipio_id_ins_est_edicao = 57355;",
									"    var ins_estadual_edicao = '2019939971';",
									"    pm.environment.set(\"municipio_id_ins_est_edicao\", municipio_id_ins_est_edicao); ",
									"    pm.environment.set(\"ins_estadual_edicao\", ins_estadual_edicao);",
									"});",
									"",
									"//Conta Bancária",
									"function geraConta() {",
									"    var conta = Math.floor((Math.random() * 20000) + 10000);",
									"    return conta;",
									"}",
									"",
									"function geraDv() {",
									"    var dv = Math.floor(Math.random() * 9);",
									"    return dv;",
									"}",
									"",
									"pm.test(\"Gerar Conta Bancária\", function () {",
									"    var conta1 = geraConta();",
									"    var dv1 = geraDv();",
									"    conta1 = \"0000000\"+conta1;",
									"    dv1 = ''+dv1;",
									"    pm.environment.set(\"conta_banco\", conta1);",
									"    pm.environment.set(\"dv_conta_banco\", dv1);",
									"    ",
									"    var conta2 = geraConta();",
									"    var dv2 = geraDv();",
									"    conta2 = \"0000000\"+conta2;",
									"    dv2 = ''+dv2;",
									"    pm.environment.set(\"conta_banco2\", conta2); ",
									"    pm.environment.set(\"dv_conta_banco2\", dv2);",
									"    ",
									"    var conta_edicao = geraConta();",
									"    var dv_edicao = geraDv();",
									"    conta_edicao = \"0000000\"+conta_edicao;",
									"    dv_edicao = ''+dv_edicao;",
									"    pm.environment.set(\"conta_edicao\", conta_edicao); ",
									"    pm.environment.set(\"dv_edicao\", dv_edicao);",
									"    ",
									"    var conta_edicao2 = geraConta();",
									"    var dv_edicao2 = geraDv();",
									"    conta_edicao2 = \"0000000\"+conta_edicao2;",
									"    dv_edicao2 = ''+dv_edicao2;",
									"    pm.environment.set(\"conta_edicao2\", conta_edicao2); ",
									"    pm.environment.set(\"dv_edicao2\", dv_edicao2);",
									"});",
									"",
									"// Gerar Tipo de Padrão",
									"pm.test(\"Gerar Tipo\", function () {",
									"    var tipo_padrao = 1;",
									"    var tipo_2 = 0;",
									"    ",
									"    pm.environment.set(\"tipo_padrao\", tipo_padrao);",
									"    pm.environment.set(\"tipo_2\", tipo_2);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"manipulaMotorista\",\n    \"parameters\": {\n        \"operation\": \"INSERT\",\n        \"nat_municipio_id\": \"{{municipio_id}}\",\n        \"cod_nacionalidade\": \"{{nacionalidade_id}}\",\n        \"cnpj_cpf\": \"{{cpf}}\",\n        \"razao_social\": \"{{nome}}\",\n        \"cod_sexo\": \"{{genero}}\",\n        \"data_nascimento\": \"{{data_antiga}}\",\n        \"pis_pasep_nit\": \"{{numero_pis}}\",\n        \"cart_ident_num\": \"{{rg}}\",\n        \"cart_ident_orgao\": \"{{emissor_rg}}\",\n        \"cart_ident_uf\": \"{{uf}}\",\n        \"cart_ident_emissao\": \"{{data_antiga}}\",\n        \"cnh_num_registro\": \"{{cnh_registro}}\",\n        \"cnh_numero\": \"{{cnh_numero}}\",\n        \"cnh_cod_categoria\": \"{{categoria_cnh}}\",\n        \"cnh_uf\": \"{{uf}}\",\n        \"cnh_orgao_emissor\": \"{{emissor_cnh}}\",\n        \"cnh_validade\": \"{{data_futura}}\",\n        \"cnh_data_emissao\": \"{{data_antiga}}\",\n        \"cnh_primeira_habilitacao\": \"{{data_antiga}}\",\n        \"nome_mae\": \"{{nome}}\",\n        \"nome_pai\": \"{{nome}}\",\n        \"enderecos\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep}}\",\n                \"logradouro\": \"{{logradouro}}\",\n                \"numero\": \"{{num_endereco}}\",\n                \"complemento\": \"{{complemento}}\",\n                \"bairro\": \"{{bairro}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_padrao}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_endereco\": null,\n                \"municipio_id\": \"{{municipio_id_ins_est}}\",\n                \"cep\": \"{{cep_1}}\",\n                \"logradouro\": \"{{logradouro1}}\",\n                \"numero\": \"{{num_endereco1}}\",\n                \"complemento\": \"{{complemento1}}\",\n                \"bairro\": \"{{bairro1}}\",\n                \"inscricao_estadual\": \"{{inscricao_estadual}}\",\n                \"cod_endereco_tipo\": \"{{cod_endereco_tipo}}\",\n                \"endereco_padrao\": \"{{tipo_2}}\",\n                \"cod_atividade_fiscal\": \"{{cod_atividade_fiscal}}\"\n            }\n        ],\n        \"telefones\": [\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_padrao}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            },\n            {\n                \"cod_telefone\": null,\n                \"operation\": \"INSERT\",\n                \"telefone\": \"{{telefone2}}\",\n                \"telefone_cod_pais\": \"\",\n                \"telefone_contato\": \"Contato\",\n                \"telefone_ddd\": \"\",\n                \"telefone_id\": null,\n                \"telefone_padrao\": \"{{tipo_2}}\",\n                \"telefone_tipo_id\": \"{{tipo_fone_id}}\"\n            }\n        ],\n        \"emails\": [\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_padrao}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"cod_email\": null,\n                \"email_id\": null,\n                \"cod_pessoa\": null,\n                \"email_padrao\": \"{{tipo_2}}\",\n                \"endereco\": \"\",\n                \"email\": \"{{email2}}\",\n                \"email_tipo_id\": \"{{email_tipo_id}}\",\n                \"email_proprietario\": \"\",\n                \"tipo_email\": \"\",\n                \"type\": \"\",\n                \"_id\": \"\"\n            }\n        ],\n        \"contas_bancarias\": [\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_id}}\",\n                \"agencia\": \"{{agencia_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco}}\",\n                \"conta_dv\": \"{{dv_conta_banco}}\",\n                \"conta_padrao\": \"{{tipo_padrao}}\"\n            },\n            {\n                \"operation\": \"INSERT\",\n                \"banco_id\": \"{{banco_1_id}}\",\n                \"agencia\": \"{{agencia_1_id}}\",\n                \"agencia_dv\": \"\",\n                \"conta\": \"{{conta_banco2}}\",\n                \"conta_dv\": \"{{dv_conta_banco2}}\",\n                \"conta_padrao\": \"{{tipo_2}}\"\n            }\n        ],\n        \"motorista_veiculo\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d3ecf89-7652-445d-a854-73d4826cd298",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_cavalo\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a4321962-4857-41d1-add4-af1e38feda7d",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    //Gera placa cavalo CTE",
									"    var placa_cavalo = geraPlaca();",
									"    pm.environment.set(\"placa_cavalo\", placa_cavalo);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    //Gera renavam cavalo CTE",
									"    var renavam_cavalo = renavamEleven(); ",
									"    pm.environment.set(\"renavam_cavalo\", renavam_cavalo);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa_cavalo}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam_cavalo}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id}}\",\n        \"agrupamento_id\": \"{{agrupamento_id}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa_cavalo}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdCavalo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24351429-aace-45a0-b2a9-34e86ca829ca",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam_cavalo\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_cavalo}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insVeiculoReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0be86d12-37ed-4383-8795-b3c0c5f8adc0",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"pm.test('Valida Renavam', function() {",
									"    pm.expect(pm.response.code).not.eql([500]);",
									"});",
									"",
									"//Get edição",
									"pm.test(\"Obter ID Veículo\", function () {",
									"    var veiculo = jsonData.result.veiculo_id;",
									"    ",
									"    pm.environment.set(\"veiculo_id_reboque\", veiculo);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c847c628-397d-4093-958d-3da2b62f9416",
								"exec": [
									"//Variáveis",
									"var letra = '';",
									"var numero = [3];",
									"var alfabeto = 'A,B,C,D,E,F,G,H,I,J,L,M,N,O,P,Q,R,S,T,U,V,X,Z';",
									"var renavam =  '';",
									"",
									"",
									"//Funções",
									"function geraPlaca() {",
									"    for (var j = 0; j <= 2; j++) {",
									"        var rnum = Math.floor(Math.random() * alfabeto.length);",
									"        letra = letra + alfabeto.substring(rnum, rnum + 2);",
									"    }",
									"    ",
									"    for (var i = 0; i <= 3; i++){",
									"        numero[i] = Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    var gera_placa = letra+numero;",
									"    return gera_placa;",
									"}",
									"",
									"pm.test(\"Gerar Placa\", function () {",
									"    var placa = geraPlaca();",
									"    pm.environment.set(\"placa\", placa);",
									"});",
									"",
									"//Gerar Renavam",
									"function generateRandom() {",
									"    var randomNumber = Math.floor((Math.random() * 9) + 0);",
									"    return randomNumber;",
									"}",
									"",
									"function renavamEleven() {",
									"    var n0 = generateRandom();",
									"    var n1 = generateRandom();",
									"    var n2 = generateRandom();",
									"    var n3 = generateRandom();",
									"    var n4 = generateRandom();",
									"    var n5 = generateRandom();",
									"    var n6 = generateRandom();",
									"    var n7 = generateRandom();",
									"    var n8 = generateRandom();",
									"    var n9 = generateRandom();",
									"",
									"    var moduloOnze = (((n0*3)+(n1*2)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2))*10)%11;",
									"",
									"    if(moduloOnze == 10) {",
									"        moduloOnze = 0;",
									"    }",
									"    gera_renavam = ''+n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+moduloOnze;",
									"    ",
									"    return gera_renavam;",
									"}",
									"",
									"pm.test(\"Gerar Renavam\", function () {",
									"    var renavam = renavamEleven();",
									"    pm.environment.set(\"renavam\", renavam);",
									"    ",
									"    var alt_renavam = renavamEleven(); ",
									"    pm.environment.set(\"alt_renavam\", alt_renavam);",
									"});",
									"",
									"//Ano",
									"function geraAno() {",
									"    var gera_ano = Math.floor((Math.random() * 2019) + 1950);",
									"    return gera_ano;",
									"}",
									"",
									"pm.test(\"Gerar Ano\", function () {",
									"    var ano_fab = geraAno(); ",
									"    pm.environment.set(\"ano_fab\", ano_fab);",
									"    ",
									"    var alt_ano_fab = geraAno(); //Editar Ano",
									"    pm.environment.set(\"alt_ano_fab\", alt_ano_fab);",
									"});",
									"",
									"",
									"pm.test(\"Gerar Chassis\", function () {",
									"    var chassis = renavamEleven();",
									"    pm.environment.set(\"chassis\", chassis);",
									"    ",
									"    var alt_chassis = renavamEleven();",
									"    pm.environment.set(\"alt_chassis\", alt_chassis);",
									"}); ",
									"",
									"//Modalidade",
									"function geraModalidade() {",
									"    var position = Math.floor((Math.random() * 2) + 1);",
									"    var mod = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            mod = \"FROTA\";",
									"            break;",
									"        case 2:",
									"            mod = \"TERCEIRO\";",
									"            break;",
									"    }",
									"    return mod;",
									"}",
									"",
									"pm.test(\"Gerar Modalidade\", function () {",
									"    var modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"modalidade\", modalidade);",
									"    ",
									"    var alt_modalidade = \"TERCEIRO\";",
									"    pm.environment.set(\"alt_modalidade\", alt_modalidade);",
									"});",
									"",
									"//Cor",
									"function geraCor() {",
									"    var position = Math.floor((Math.random() * 7) + 1);",
									"    var cor = \"\";",
									"    ",
									"    switch (position) {",
									"        case 1:",
									"            cor = \"AZUL\";",
									"            break;",
									"        case 2:",
									"            cor = \"VERDE\";",
									"            break;",
									"        case 3:",
									"            cor = \"BRANCO\";",
									"            break;",
									"        case 4:",
									"            cor = \"PRETO\";",
									"            break;",
									"        case 5:",
									"            cor = \"AMARELO\";",
									"            break;",
									"        case 6:",
									"            cor = \"CINZA\";",
									"            break;",
									"        case 7:",
									"            cor = \"VERMELHO\";",
									"            break;",
									"    }",
									"    return cor;",
									"}",
									"",
									"pm.test(\"Gerar Cor\", function() {",
									"   var color = geraCor();",
									"   pm.environment.set(\"cor\", color);",
									"   ",
									"   var alt_color = geraCor();",
									"   pm.environment.set(\"alt_cor\", alt_color);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": null,\n        \"placa\": \"{{placa}}\",\n        \"uf\": \"{{uf}}\",\n        \"municipio_id\": \"{{municipio_id}}\",\n        \"ano\": \"{{ano_fab}}\",\n        \"chassis\": \"{{chassis}}\",\n        \"renavam\": \"{{renavam}}\",\n        \"modalidade\": \"{{modalidade}}\",\n        \"cor\": \"{{cor}}\",\n        \"tipo_carroceria_id\": \"{{carroceria_id_reboque}}\",\n        \"agrupamento_id\": \"{{agrupamento_id_reboque}}\",\n        \"marca_id\": \"{{marca_id}}\",\n        \"modelo_id\": \"{{modelo_id}}\",\n        \"volume\": \"\",\n        \"peso\": \"\",\n        \"tara\": \"\",\n        \"proprietario\": [\n            {\n                \"cod_pessoa\": \"{{cod_prest_serv_pf}}\",\n                \"data_inicio\": \"{{data_ini_lote}}\",\n                \"data_fim\": null,\n                \"placa\": \"{{placa}}\",\n                \"operation\": \"INSERT\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getVeiculoIdReboque",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85ef6638-f1fb-4d79-9161-c14f07b45f5c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Obter Placa Veiculo\", function () {",
									"    placa_id = jsonData.result.items[0].placa;",
									"    ",
									"    pm.environment.set(\"placa_id\", placa_id);",
									"});",
									"",
									"// Verificação das inserções",
									"pm.test(\"Insere Placa\", function () {",
									"    var placa_response = jsonData.result.items[0].placa;",
									"    var placa_request = pm.environment.get(\"placa_id\");",
									"    ",
									"    pm.expect(placa_response).eql(placa_request);",
									"});",
									"",
									"pm.test(\"Insere UF\", function () {",
									"    var uf_response = jsonData.result.items[0].uf;",
									"    var uf_request = pm.environment.get(\"uf\");",
									"    ",
									"    pm.expect(uf_response).eql(uf_request);",
									"});",
									"",
									"pm.test(\"Insere Município\", function () {",
									"    var municipio_id_response = jsonData.result.items[0].municipio_id;",
									"    var municipio_id_request = pm.environment.get(\"municipio_id\");",
									"    ",
									"    pm.expect(municipio_id_response).eql(municipio_id_request);",
									"});",
									"",
									"pm.test(\"Insere Ano\", function () {",
									"    var ano_response = jsonData.result.items[0].ano;",
									"    var ano_request = pm.environment.get(\"ano_fab\");",
									"    ",
									"    pm.expect(ano_response).eql(ano_request);",
									"});",
									"",
									"pm.test(\"Insere Chassis\", function () {",
									"    var chassis_response = jsonData.result.items[0].chassis;",
									"    var chassis_request = pm.environment.get(\"chassis\");",
									"    ",
									"    pm.expect(chassis_response).eql(chassis_request);",
									"});",
									"",
									"pm.test(\"Insere Renavam\", function () {",
									"    var renavam_response = jsonData.result.items[0].renavam;",
									"    var renavam_request = pm.environment.get(\"renavam\");",
									"    ",
									"    pm.expect(renavam_response).eql(renavam_request);",
									"});",
									"",
									"pm.test(\"Insere Modalidade\", function () {",
									"    var modalidade_response = jsonData.result.items[0].modalidade;",
									"    var modalidade_request = pm.environment.get(\"modalidade\");",
									"    ",
									"    pm.expect(modalidade_response).eql(modalidade_request);",
									"});",
									"",
									"pm.test(\"Insere Cor\", function () {",
									"    var cor_response = jsonData.result.items[0].cor;",
									"    var cor_request = pm.environment.get(\"cor\");",
									"    ",
									"    pm.expect(cor_response).eql(cor_request);",
									"});",
									"",
									"pm.test(\"Insere Carroceria\", function () {",
									"    var carroceria_id_response = jsonData.result.items[0].tipo_carroceria_id;",
									"    var carroceria_id_request = pm.environment.get(\"carroceria_id_reboque\");",
									"    ",
									"    pm.expect(carroceria_id_response).eql(carroceria_id_request);",
									"});",
									"",
									"pm.test(\"Insere Marca\", function () {",
									"    var marca_id_response = jsonData.result.items[0].marca_id;",
									"    var marca_id_request = pm.environment.get(\"marca_id\");",
									"    ",
									"    pm.expect(marca_id_response).eql(marca_id_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo\", function () {",
									"    var modelo_id_response = jsonData.result.items[0].modelo_id;",
									"    var modelo_id_request = pm.environment.get(\"modelo_id\");",
									"    ",
									"    pm.expect(modelo_id_response).eql(modelo_id_request);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getVeiculo\",\n    \"parameters\": {\n        \"veiculo_id\": \"{{veiculo_id_reboque}}\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89effdfd-b1f0-4f48-b170-ac6c76cbeb1b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Get para edição",
									"pm.test(\"Obter ID Lote\", function () {",
									"    var lote_id = jsonData.result.lote_id;",
									"    pm.environment.set(\"lote_id\", lote_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fcf04d53-a055-4497-af90-3e9510fe80a6",
								"exec": [
									"function geraLimite() {",
									"    var lim = Math.round(Math.random() * 500) + 1000;",
									"    return lim;",
									"}",
									"",
									"pm.test(\"Gerar Limite\", function () {",
									"    var limite = geraLimite();",
									"    pm.environment.set(\"limite\", limite);",
									"    var limite_edicao = geraLimite();",
									"    pm.environment.set(\"limite_edicao\", limite_edicao);",
									"});",
									"",
									"function descricao() {",
									"    var array_descricao = [\"Lote Milho\", \"Lote Soja\", \"Lote Trigo\", \"Lote Ração Peletizada\", \"Lote Farelo de Trigo\", \"Lote Azevém\", \"Lote Resíduo\", \"Lote Aveia\", \"Lote Feijão\", \"Lote Calcário\", \"Lote Farelo de Soja\"];",
									"    var position = Math.round(Math.random() * 10);",
									"    var classificacao = array_descricao[position];",
									"    ",
									"    return classificacao;",
									"}",
									"",
									"pm.test(\"Gerar Descrição\", function () {",
									"    var desc_prod = descricao();",
									"    pm.environment.set(\"descricao_prod\", desc_prod);",
									"    var desc_prod_edicao = descricao();",
									"    pm.environment.set(\"descricao_prod_edicao\", desc_prod_edicao);",
									"});",
									"",
									"function geraValorMinimo() {",
									"    var val_minimo = Math.round(Math.random() * 1) + 10;",
									"    return val_minimo;",
									"}",
									"",
									"function geraValorMaximo() {",
									"    var val_maximo = Math.round(Math.random() * 20000) + 50000;",
									"    return val_maximo;",
									"}",
									"",
									"pm.test(\"Gerar Valor\", function () {",
									"    var valor_min =geraValorMinimo();",
									"    pm.environment.set(\"valor_min\", valor_min);",
									"    ",
									"    var valor_max = geraValorMaximo();",
									"    pm.environment.set(\"valor_max\", valor_max);",
									"    ",
									"    //Valores edição",
									"    var valor_min_edicao = geraValorMinimo();",
									"    pm.environment.set(\"valor_min_edicao\", valor_min_edicao);",
									"    ",
									"    var valor_max_edicao = geraValorMaximo();",
									"    pm.environment.set(\"valor_max_edicao\", valor_max_edicao);",
									"});",
									"",
									"pm.test(\"Gerar Cadência\", function () {",
									"    var cadencia = geraLimite();",
									"    pm.environment.set(\"cadencia\", cadencia);",
									"    ",
									"    var cadencia_edicao = geraLimite();",
									"    pm.environment.set(\"cadencia_edicao\", cadencia_edicao);",
									"});",
									"",
									"function geraDataLoteInicio() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function DataLoteInicioEdicao() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    anoF += 1;",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"00:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Inicio Lote\", function () {",
									"    var data_ini_lote = geraDataLoteInicio();",
									"    pm.environment.set(\"data_ini_lote\", data_ini_lote);",
									"    ",
									"    var data_ini_lote_edicao = DataLoteInicioEdicao();",
									"    pm.environment.set(\"data_ini_lote_edicao\", data_ini_lote_edicao);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"module\":\"M220\",\n\t\"operation\":\"insLote\",\n\t\"parameters\":{\n\t\t\"limite_viagem\":\"{{limite}}\",\n\t\t\"limite_peso\":\"\",\n\t\t\"descricao\":\"{{descricao_prod}}\",\n\t\t\"operacao_id\":\"{{oper_log}}\",\n\t\t\"operacao\":\"{{desc_oper_log}}\",\n\t\t\"data_inicio\":\"{{data_ini_lote}}\",\n\t\t\"data_termino\":\"{{data_futura}}\",\n\t\t\"valor_custo_minimo\":\"{{valor_min}}\",\n\t\t\"valor_custo_maximo\":\"{{valor_max}}\",\n\t\t\"cadencia_ton_dia\":\"{{cadencia}}\",\n\t\t\"observacao\":\"{{descricao_prod}}\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7be52de-d129-413a-a1ab-08cac02d69d2",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"",
									"//Verificação das Inserções",
									"pm.test(\"Insere Limite\", function () {",
									"    var limite_response = jsonData.result.items[0].limite_viagem;",
									"    var limite_request = pm.environment.get(\"limite\");",
									"    ",
									"    pm.expect(limite_response).eql(limite_request);",
									"});",
									"",
									"pm.test(\"Insere Descrição\", function () {",
									"    var desc_response = jsonData.result.items[0].descricao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});",
									"",
									"pm.test(\"Insere ID Operação\", function () {",
									"    var id_oper_response = jsonData.result.items[0].operacao_id;",
									"    var id_oper_request = pm.environment.get(\"oper_log\");",
									"    ",
									"    pm.expect(id_oper_response).eql(id_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Operação\", function () {",
									"    var oper_response = jsonData.result.items[0].operacao;",
									"    var oper_request = pm.environment.get(\"desc_oper_log\");",
									"    ",
									"    pm.expect(oper_response).eql(oper_request);",
									"});",
									"",
									"pm.test(\"Insere Data Início\", function () {",
									"    var data_ini_response = jsonData.result.items[0].data_inicio;",
									"    var data_ini_request = pm.environment.get(\"data_ini_lote\");",
									"    ",
									"    pm.expect(data_ini_response).eql(data_ini_request);",
									"});",
									"",
									"pm.test(\"Insere Data Fim\", function () {",
									"    var data_fim_response = jsonData.result.items[0].data_termino;",
									"    var data_fim_request = pm.environment.get(\"data_futura\");",
									"    ",
									"    pm.expect(data_fim_response).eql(data_fim_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Mínimo\", function () {",
									"    var valor_min_response = jsonData.result.items[0].valor_custo_minimo;",
									"    var valor_min_request = pm.environment.get(\"valor_min\");",
									"    ",
									"    pm.expect(valor_min_response).eql(valor_min_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Máximo\", function () {",
									"    var valor_max_response = jsonData.result.items[0].valor_custo_maximo;",
									"    var valor_max_request = pm.environment.get(\"valor_max\");",
									"    ",
									"    pm.expect(valor_max_response).eql(valor_max_request);",
									"});",
									"",
									"pm.test(\"Insere Limite Cadência\", function () {",
									"    var cadencia_response = jsonData.result.items[0].cadencia_ton_dia;",
									"    var cadencia_request = pm.environment.get(\"cadencia\");",
									"    ",
									"    pm.expect(cadencia_response).eql(cadencia_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var desc_response = jsonData.result.items[0].observacao;",
									"    var desc_request = pm.environment.get(\"descricao_prod\");",
									"    ",
									"    pm.expect(desc_response).eql(desc_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"localizar_cadastro\": 1\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - aprovacaoLote Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f05bca3d-808d-46da-b79d-66f79bb5456a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Aprovar Lote\", function () {",
									"    var id_lote_response = jsonData.result.operacao_id;",
									"    var id_lote_request = pm.environment.get(\"lote_id\");",
									"    id_lote_request = ''+id_lote_request;",
									"    ",
									"    pm.expect(id_lote_response).eql(id_lote_request);",
									"    ",
									"    var mensagem_sucesso = \"Operação realizada com sucesso.\";",
									"    var msg_response = jsonData.result.mensagem;",
									"    ",
									"    pm.expect(mensagem_sucesso).eql(msg_response);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"aprovacaoLote\",\n    \"parameters\": {\n        \"lote_id\": \"{{lote_id}}\",\n        \"acao\": \"APROVAR_LOTE\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aafbd012-1551-42f9-ace8-0e35abc7f0e0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3c5e49c4-e915-4d3e-a85c-28ba90df367b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da805355-f8bf-4a4c-a780-ca568262294c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter ID Viagem\", function () {",
									"    var viagem_id = jsonData.result.viagem_id;",
									"    pm.environment.set(\"viagem_id\", viagem_id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6af9176e-aa38-4249-8f82-a9ed1fff8c3b",
								"exec": [
									"//Funcões",
									"pm.test(\"Gerar Observação\", function () {",
									"    var obs_viagem = \"Teste Viagem\";",
									"    pm.environment.set(\"obs_viagem\", obs_viagem);",
									"});",
									"",
									"pm.test(\"Gerar ID pedido\", function () {",
									"    pedido_id = 0;",
									"    pedido_id++;",
									"    pm.environment.set(\"pedido_id\", pedido_id);",
									"});",
									"",
									"function geraDataCarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = data.getDate().toString();",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    ",
									"    if (mes < 10) mes = \"0\"+mes;",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    dataF = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"06:00:00\";",
									"    ",
									"    return dataF;",
									"}",
									"",
									"function geraDataDescarregamento() {",
									"    let data = new Date();",
									"    ",
									"    //dia",
									"    dia  = (data.getDate()+1).toString();",
									"    ",
									"    //mês",
									"    mes  = (data.getMonth()+1).toString();",
									"    ",
									"    if (dia < 10) dia = \"0\"+dia;",
									"    if (mes < 10) mes = \"0\"+mes",
									"    ",
									"    ",
									"    //ano",
									"    anoF = data.getFullYear();",
									"    ",
									"    if (mes > 12) {",
									"        anoF += 1;",
									"    }",
									"    ",
									"    dataEd = anoF+\"-\"+mes+\"-\"+dia+\" \"+\"23:00:00\";",
									"    ",
									"    return dataEd;",
									"}",
									"",
									"pm.test(\"Gerar Data Viagem\", function () {",
									"    var data_carregamento = geraDataCarregamento();",
									"    pm.environment.set(\"data_carregamento\", data_carregamento);",
									"    var data_descarregamento = geraDataDescarregamento();",
									"    pm.environment.set(\"data_descarregamento\", data_descarregamento);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": null,\n        \"operation\": \"INSERT\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": null,\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "729b2905-22b4-4284-b28e-b38475a085dd",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fb06280-c52a-4e27-9d26-edafee7ceda1",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": null,\n        \"rota_id\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsLote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6583a60b-ec5d-4519-b859-db8acecffcb6",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f0e4b62-492c-48c7-b947-8b8388de7c2a",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"placas\": [\n            \t{\n                    \"veiculo_id\": \"{{veiculo_id_cavalo}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 0\n                },\n                {\n                    \"veiculo_id\": \"{{veiculo_id_reboque}}\",\n                    \"viagem_veiculo_id\": null,\n                    \"operation\": \"INSERT\",\n                    \"ordem\": 1\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsPlaca",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e50fdf62-fe7f-4a49-8f89-5f38f91aef72",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92cdf0de-d1e9-44d6-a2e0-b85acea3cecb",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"composicao\": {\n            \"motoristas\": [\n                {\n                    \"cod_motorista\": \"{{cod_pessoa}}\",\n                    \"operation\": \"INSERT\",\n                    \"cartao_frete\": \"\",\n                    \"cartao_pedagio\": \"\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsMotorista",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2cede30-de39-457a-af85-3519829f29cc",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getUnidadeMedida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99477a8a-e718-46e8-a2ba-dc6dbc6e0c2e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter Código Unidade de Medida\", function () {",
									"    /*var cod_unidade_medida = jsonData.result.items.find(x => x.descricao == \"Kilogramas\").cod_unidade;*/",
									"    var cod_unidade_medida = jsonData.result.items.find(x => x.cod_unidade == \"Kg\").cod_unidade;",
									"    pm.environment.set(\"cod_unidade_medida\", cod_unidade_medida);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getUnidadeMedida\",\n    \"parameters\": {\n        \"query\": {}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImpostoCFOP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f77a3ee-c933-437f-b218-5c08c53d2e3d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Obter CFOP\", function () {",
									"    var cfop_id = jsonData.result.items[1].cfop;",
									"    pm.environment.set(\"cfop_id\", cfop_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImpostoCFOP\",\n    \"parameters\": {\n        \"query\": {\n            \"sorting\": [\n                {\n                    \"column\": \"descricao\",\n                    \"direction\": \"asc\"\n                }\n            ],\n            \"filtering\": [\n                {\n                    \"value\": \"%\",\n                    \"column\": \"descricao\",\n                    \"operator\": \"contains\"\n                }\n            ],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 10\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemAgrupamento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9226c402-cdcb-43a7-9272-5ab9061b09ea",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);",
									"});",
									"",
									"//gerarViagemInsNotaFiscal",
									"pm.test(\"Obter Código Remetente, Código Endereço e Munícipio\", function () {",
									"    var cod_remetente = jsonData.result.participantes.remetente[0].cod_remetente;",
									"    pm.environment.set(\"cod_remetente\", cod_remetente);",
									"    ",
									"    var cod_endereco_remetente = jsonData.result.participantes.remetente[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_remetente\", cod_endereco_remetente);",
									"    ",
									"    /*var origem_viagem = jsonData.result.participantes.coleta[1].enderecos[0].municipio;*/",
									"    var origem_viagem = jsonData.result.participantes.coleta.find(x => x.enderecos[0].municipio == \"Jaraguá\").enderecos[0].municipio;",
									"    pm.environment.set(\"origem_viagem\", origem_viagem);",
									"});",
									"",
									"pm.test(\"Obter Código Destinatário, Código Endereço e Destino\", function () {",
									"    var cod_destinatario = jsonData.result.participantes.destinatario[0].cod_destinatario;",
									"    pm.environment.set(\"cod_destinatario\", cod_destinatario);",
									"    ",
									"    var cod_endereco_destinatario = jsonData.result.participantes.destinatario[0].enderecos[0].cod_endereco;",
									"    pm.environment.set(\"cod_endereco_destinatario\", cod_endereco_destinatario);",
									"    ",
									"    var destino_viagem = jsonData.result.participantes.entrega[0].enderecos[0].municipio;",
									"    pm.environment.set(\"destino_viagem\", destino_viagem);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"operation\": \"UPDATE\",\n        \"data_inicio_viagem\": \"{{data_carregamento}}\",\n        \"data_termino_viagem\": \"{{data_descarregamento}}\",\n        \"identificacao_cliente\": \"{{pedido_id}}\",\n        \"observacao\": \"{{obs_viagem}}\",\n        \"lote_id\": \"{{lote_id}}\",\n        \"agrupamento_tipo\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ff2615aa-7100-4832-a658-6d5c3dd3872f",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 2;",
									"    pm.environment.set(\"num_nfe\", num_nfe);",
									"    ",
									"    //chave acesso nfe",
									"    var chave = \"52191011325194000111550010000512201703935134\";",
									"    pm.environment.set(\"chave\", chave);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d2cf3ec7-a99e-48f3-b4b7-fdacac9f086e",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"    pm.environment.set(\"sol_carga_nfe_nao_agrupada\", sol_carga);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4147f801-43f0-4566-b206-6284a395c461",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemEmitirCte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08635256-ec09-453a-8651-7840cf1e1d8c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(25000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e1f844a6-6ee4-42f4-bbdc-b03257f5e99d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"gerar_viagem\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NFe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09424290-593a-42a1-ab47-9aa93745cf11",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nfe_nao_agrupada}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6fde2c0-eb49-4fe4-8fe9-27cd545f6e37",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e528c7ee-c1eb-45d0-9f3b-a5d5467ca014",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": 336\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40df8bd9-6e67-41df-879b-b124841b1a39",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "863a31dc-0c7b-4440-84a1-f44d928a258c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ec6cbad-c6f3-405a-adc4-c7b3289d5616",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220QA - configuraGERAL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83f5c4a1-c3a4-46d9-a862-39010dfaa598",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e07f0075-f8bd-4b78-b878-386ad7acc9da",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(4000);",
									"});",
									"",
									"var status_code = jsonData.code;",
									"",
									"if (status_code != 200) postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"module\": \"M220QA\",\r\n    \"operation\": \"configuraGERAL\",\r\n    \"parameters\": {\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getXMLDadosNFE Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f48f25b-17b8-4933-8b0a-a54782ba4240",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test(\"Obter Chave NFe\", function () {",
									"    var chave_xml = jsonData.result.params.chave;",
									"    pm.environment.set(\"chave_xml_nf2\", chave_xml);",
									"});",
									"",
									"pm.test(\"Obter Remetente NFe\", function () {",
									"    var cod_remetente_xml = jsonData.result.params.cod_remetente;",
									"    pm.environment.set(\"cod_remetente_xml_nf2\", cod_remetente_xml);",
									"    ",
									"    var cod_end_remetente_xml = jsonData.result.params.endereco_remetente[0].cod_endereco;",
									"    pm.environment.set(\"cod_end_remetente_xml_nf2\", cod_end_remetente_xml);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0a066ee6-e973-4b0e-ba61-7ebfb9dec4cb",
								"exec": [
									"pm.test(\"Dados XML\", function () {",
									"    var xml = \"\";",
									"    ",
									"    pm.environment.set(\"xmlNF2\", xml);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getXMLDadosNFE\",\n    \"parameters\": {\n        \"nota_xml\": \"{{xmlNF2}}\",\n        \"base64\": 1,\n        \"inserir\": 1,\n        \"lote_id\": \"{{loteIdXML}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - gerarViagemInsNotaFiscalEletronica - 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e64b881e-ff07-4990-a573-d085daefa2e8",
								"exec": [
									"pm.test(\"Dados\", function () {",
									"    //número nfe",
									"    var num_nfe = pm.environment.get(\"pedido_id\");",
									"    num_nfe += 6;",
									"    pm.environment.set(\"num_nfe_2\", num_nfe);",
									"    ",
									"    //modelo",
									"    pm.environment.set(\"modelo_nfe\", 55);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "27b0aeb2-c85e-425e-bf04-260cb09bdb4c",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"pm.test(\"Obter Solicitação de Carga\", function () {",
									"    var sol_carga = jsonData.result.solicitacao_carga[1].solicitacao_carga_id;",
									"    if (pm.environment.get(\"sol_carga_nfe_nao_agrupada\") === sol_carga){",
									"        var sol_carga = jsonData.result.solicitacao_carga[0].solicitacao_carga_id;",
									"        pm.environment.set(\"sol_carga_nfe_nao_agrupada_2\", sol_carga);",
									"    } else {",
									"        pm.environment.set(\"sol_carga_nfe_nao_agrupada_2\", sol_carga);",
									"    }",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"gerarViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"nota_fiscal\": [\n            {\n                \"operation\": \"INSERT\",\n                \"numero\": \"{{num_nfe_2}}\",\n                \"data_emissao\": \"{{data_carregamento}}\",\n                \"modelo\": \"{{modelo_nfe}}\",\n                \"serie\": \"{{serie}}\",\n                \"sub_serie\": \"{{sub_serie}}\", \n                \"valor_total\": \"{{valor_min}}\", \n                \"valor_segurado\": \"{{valor_min}}\",\n                \"ordem_compra_cliente\": \"{{pedido_id}}\",\n                \"qtde_volume\": \"{{cubagem}}\",\n                \"peso\": \"{{peso}}\",\n                \"cod_unidade\": \"{{cod_unidade_medida}}\",\n                \"natureza\": \"{{descricaoNatureza}}\",\n                \"num_especie\": \"{{cod_especie_edicao}}\",\n                \"m3\": \"\",\n                \"cubagem\": null,\n                \"peso_cobrado\": \"{{peso}}\",\n                \"cfop\": \"{{cfop_id}}\",\n                \"chave_acesso_nfe\": \"{{chave_xml_nf2}}\",\n                \"documento_id\": null,\n                \"cod_pessoa_remetente\": \"{{cod_remetente_xml_nf2}}\",\n                \"cod_pessoa_destinatario\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_coleta\": \"{{cod_participante_pf}}\",\n                \"cod_pessoa_entrega\": \"{{cod_participante_pj}}\",\n                \"cod_pessoa_tomador\": \"{{cod_recebedor_repom}}\",\n                \"endereco_tomador_id\": \"{{cod_end_recebedor_repom}}\",\n                \"endereco_remetente_id\": \"{{cod_end_remetente_xml_nf2}}\",\n                \"endereco_destinatario_id\": \"{{cod_endereco_participante_pj}}\",\n                \"endereco_coleta_id\": \"{{cod_endereco_participante_pf}}\",\n                \"endereco_entrega_id\": \"{{cod_endereco_participante_pj}}\",\n                \"altura\": \"{{altura}}\",\n                \"largura\": \"{{largura}}\",\n                \"comprimento\": \"{{comprimento}}\",\n                \"produto\": \"\",\n                \"tipo_documento_id\": 1\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getViagemInsNotaFiscalEletronica - 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f09f9ad2-ca89-4cb5-9d15-55734226708b",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"var solicitacoes = jsonData.result.viagem[0].solicitacoes;",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.viagem.length;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"//Verificação das inserções",
									"pm.test(\"Insere Data Carregamento\", function () {",
									"    var data_carregamento_response = jsonData.result.viagem[0].data_inicio;",
									"    var data_carregamento_request = pm.environment.get(\"data_carregamento\");",
									"",
									"    pm.expect(data_carregamento_response).eql(data_carregamento_request);",
									"});",
									"",
									"pm.test(\"Insere Data Descarregamento\", function () {",
									"    var data_descarregamento_response = jsonData.result.viagem[0].data_termino;",
									"    var data_descarregamento_request = pm.environment.get(\"data_descarregamento\");",
									"",
									"    pm.expect(data_descarregamento_response).eql(data_descarregamento_request);",
									"});",
									"",
									"pm.test(\"Insere ID Pedido Cliente\", function () {",
									"    var pedido_response = jsonData.result.viagem[0].pedido_cliente;",
									"    var pedido_request = pm.environment.get(\"pedido_id\");",
									"    pedido_request = ''+pedido_request;",
									"    pm.expect(pedido_response).eql(pedido_request);",
									"});",
									"",
									"pm.test(\"Insere Observação\", function () {",
									"    var obs_response = jsonData.result.viagem[0].observacao;",
									"    var obs_request = pm.environment.get(\"obs_viagem\");",
									"",
									"    pm.expect(obs_response).eql(obs_request);",
									"});",
									"",
									"pm.test(\"Insere Lote\", function () {",
									"    var lote_response = jsonData.result.viagem[0].lote_id;",
									"    var lote_request = pm.environment.get(\"lote_id\");",
									"",
									"    pm.expect(lote_response).eql(lote_response);",
									"});",
									"",
									"pm.test(\"Insere Cavalo\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_cavalo\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_cavalo\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Reboque\", function () {",
									"    var veiculo_id_response = jsonData.result.viagem[0].placas.find(x => x.veiculo_id == pm.environment.get(\"veiculo_id_reboque\")).veiculo_id;",
									"    var veiculo_id_request = pm.environment.get(\"veiculo_id_reboque\");",
									"",
									"    pm.expect(veiculo_id_response).eql(veiculo_id_request);",
									"});",
									"",
									"pm.test(\"Insere Motorista\", function () {",
									"    var motorista_id_response = jsonData.result.viagem[0].motoristas[0].cod_motorista;",
									"    var motorista_id_request = pm.environment.get(\"cod_pessoa\");",
									"",
									"    pm.expect(motorista_id_response).eql(motorista_id_request);",
									"});",
									"",
									"//Inserções Agrupamento",
									"pm.test(\"Insere Número Pedido\", function () {",
									"    var num_pedido_nf_response = jsonData.result.viagem[0].solicitacoes[0].pedido_shipment;",
									"    var num_pedido_nf_request = pm.environment.get(\"pedido_id\");",
									"    num_pedido_nf_request = ''+num_pedido_nf_request;",
									"",
									"    pm.expect(num_pedido_nf_response).eql(num_pedido_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Quantidade Volume\", function () {",
									"    var qtde_volume_response = jsonData.result.viagem[0].solicitacoes[0].qtde_volume;",
									"    var qtde_volume_request = pm.environment.get(\"cubagem\");",
									"",
									"    pm.expect(qtde_volume_response).eql(qtde_volume_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request);",
									"});",
									"",
									"pm.test(\"Insere Natureza\", function () {",
									"    var natureza_oper_response = jsonData.result.viagem[0].solicitacoes[0].num_natureza;",
									"    var natureza_oper_request = pm.environment.get(\"oper_natureza_id\");",
									"",
									"    pm.expect(natureza_oper_response).eql(natureza_oper_request);",
									"});",
									"",
									"pm.test(\"Insere Espécie\", function () {",
									"    var num_especie_response = jsonData.result.viagem[0].solicitacoes[0].num_especie;",
									"    var num_especie_request = pm.environment.get(\"cod_especie_edicao\");",
									"",
									"    pm.expect(num_especie_response).eql(num_especie_request);",
									"});",
									"",
									"pm.test(\"Insere Código Remetente\", function () {",
									"    /*var remetente_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].cod_pessoa; ",
									"    var remetente_request = pm.environment.get(\"cod_remetente_xml\");",
									"    ",
									"    pm.expect(remetente_response).eql(remetente_request);",
									"    */",
									"    var cod_remetente = [];",
									"    for(let i in solicitacoes){",
									"        cod_remetente.push(solicitacoes[i].participantes.remetente[0].cod_pessoa);",
									"    }",
									"",
									"    pm.expect(pm.environment.get(\"cod_remetente_xml\")).eql(cod_remetente.find(element => element === pm.environment.get(\"cod_remetente_xml\")));",
									"    pm.expect(pm.environment.get(\"cod_remetente_xml_nf2\")).eql(cod_remetente.find(element => element === pm.environment.get(\"cod_remetente_xml_nf2\")));",
									"});",
									"",
									"pm.test(\"Insere Código Destinatário\", function () {",
									"    var destinatario_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].cod_pessoa;",
									"    var destinatario_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(destinatario_response).eql(destinatario_request);",
									"});",
									"",
									"pm.test(\"Insere Código Coleta\", function () {",
									"    var coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].cod_pessoa;",
									"    var coleta_request = pm.environment.get(\"cod_participante_pf\");",
									"",
									"    pm.expect(coleta_response).eql(coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Entrega\", function () {",
									"    var entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].cod_pessoa;",
									"    var entrega_request = pm.environment.get(\"cod_participante_pj\");",
									"",
									"    pm.expect(entrega_response).eql(entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Remetente\", function () {",
									"    /*var cod_endereco_rem_response = jsonData.result.viagem[0].solicitacoes[0].participantes.remetente[0].endereco[0].cod_endereco;",
									"    var cod_endereco_rem_request = pm.environment.get(\"cod_end_remetente_xml\");",
									"",
									"    pm.expect(cod_endereco_rem_response).eql(cod_endereco_rem_request);*/",
									"",
									"    var cod_end_remetente = [];",
									"    for(let i in solicitacoes){",
									"        cod_end_remetente.push(solicitacoes[i].participantes.remetente[0].endereco[0].cod_endereco);",
									"    }",
									"",
									"    pm.expect(pm.environment.get(\"cod_end_remetente_xml\")).eql(cod_end_remetente.find(element => element === pm.environment.get(\"cod_end_remetente_xml\")));",
									"    pm.expect(pm.environment.get(\"cod_end_remetente_xml_nf2\")).eql(cod_end_remetente.find(element => element === pm.environment.get(\"cod_end_remetente_xml_nf2\")));",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Destinatário\", function () {",
									"    var cod_endereco_dest_response = jsonData.result.viagem[0].solicitacoes[0].participantes.destinatario[0].endereco[0].cod_endereco;",
									"    var cod_endereco_dest_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_dest_response).eql(cod_endereco_dest_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Coleta\", function () {",
									"    var cod_endereco_coleta_response = jsonData.result.viagem[0].solicitacoes[0].participantes.coleta[0].endereco[0].cod_endereco;",
									"    var cod_endereco_coleta_request = pm.environment.get(\"cod_endereco_participante_pf\");",
									"",
									"    pm.expect(cod_endereco_coleta_response).eql(cod_endereco_coleta_request);",
									"});",
									"",
									"pm.test(\"Insere Código Endereço Entrega\", function () {",
									"    var cod_endereco_entrega_response = jsonData.result.viagem[0].solicitacoes[0].participantes.entrega[0].endereco[0].cod_endereco;",
									"    var cod_endereco_entrega_request = pm.environment.get(\"cod_endereco_participante_pj\");",
									"",
									"    pm.expect(cod_endereco_entrega_response).eql(cod_endereco_entrega_request);",
									"});",
									"",
									"pm.test(\"Insere Origem\", function () {",
									"    var origem_response = jsonData.result.viagem[0].origem;",
									"    var origem_request = pm.environment.get(\"origem_viagem\");",
									"",
									"    pm.expect(origem_response).eql(origem_request);",
									"});",
									"",
									"pm.test(\"Insere Destino\", function () {",
									"    var destino_response = jsonData.result.viagem[0].destino;",
									"    var destino_request = pm.environment.get(\"destino_viagem\");",
									"",
									"    pm.expect(destino_response).eql(destino_request);",
									"});",
									"",
									"pm.test(\"Insere Rota\", function () {",
									"    var rota_id_response = jsonData.result.viagem[0].rota_id;",
									"    pm.expect(rota_id_response).not.eql(null);",
									"});",
									"",
									"var numeroNF = [];",
									"for(let i in solicitacoes){",
									"    numeroNF.push(solicitacoes[i].nota_fiscal[0].numero);",
									"}",
									"",
									"var chaveNF = [];",
									"for(let i in solicitacoes){",
									"    chaveNF.push(solicitacoes[i].nota_fiscal[0].chave);",
									"}",
									"",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica                               |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    /*var num_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);*/",
									"",
									"    pm.expect(pm.environment.get(\"num_nfe\")).eql(numeroNF.find(element => element === pm.environment.get(\"num_nfe\")));",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    /*var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[0].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);*/",
									"",
									"    pm.expect(pm.environment.get(\"chave\")).eql(chaveNF.find(element => element === pm.environment.get(\"chave\")));",
									"});",
									"",
									"// ============================================================================================================",
									"// |                           Verificação das inserções Nota Fiscal Eletrônica 2                             |",
									"// ============================================================================================================",
									"pm.test(\"Insere Número NF\", function () {",
									"    /*var num_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].numero;",
									"    var num_nf_request = pm.environment.get(\"num_nfe_2\");",
									"",
									"    pm.expect(num_nf_response).eql(num_nf_request);*/",
									"        pm.expect(pm.environment.get(\"num_nfe_2\")).eql(numeroNF.find(element => element === pm.environment.get(\"num_nfe_2\")));",
									"});",
									"",
									"pm.test(\"Insere Modelo NF\", function () {",
									"    var modelo_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].modelo;",
									"    var modelo_nf_request = pm.environment.get(\"modelo_nfe\");",
									"    modelo_nf_request = ''+modelo_nf_request;",
									"    pm.expect(modelo_nf_response).eql(modelo_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Série NF\", function () {",
									"    var serie_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].serie;",
									"    var serie_nf_request = pm.environment.get(\"serie\");",
									"    serie_nf_request = ''+serie_nf_request;",
									"",
									"    pm.expect(serie_nf_response).eql(serie_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Total NF\", function () {",
									"    var valor_tot_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].valor_total;",
									"    var valor_tot_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_tot_nf_response).eql(valor_tot_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Segurado NF\", function () {",
									"    var valor_seg_nf_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].valor_segurado;",
									"    var valor_seg_nf_request = pm.environment.get(\"valor_min\");",
									"",
									"    pm.expect(valor_seg_nf_response).eql(valor_seg_nf_request);",
									"});",
									"",
									"pm.test(\"Insere Peso\", function () {",
									"    var peso_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].peso;",
									"    var peso_request = pm.environment.get(\"peso\");",
									"",
									"    pm.expect(peso_response).eql(peso_request)",
									"});",
									"",
									"pm.test(\"Insere Código Unidade Medida\", function () {",
									"    var unidade_medida_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].cod_unidade;",
									"    var unidade_medida_request = pm.environment.get(\"cod_unidade_medida\");",
									"",
									"    pm.expect(unidade_medida_response).eql(unidade_medida_request);",
									"});",
									"",
									"pm.test(\"Insere Tipo de Documento\", function () {",
									"    var tipo_doc_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].tipo_documento_id;",
									"    var tipo_doc_request = 1;",
									"",
									"    pm.expect(tipo_doc_response).eql(tipo_doc_request);",
									"});",
									"",
									"pm.test(\"Insere Chave\", function () {",
									"    /*var chave_nfe_response = jsonData.result.viagem[0].solicitacoes[1].nota_fiscal[0].chave;",
									"    var chave_nfe_request = pm.environment.get(\"chave_xml_nf2\");",
									"",
									"    pm.expect(chave_nfe_response).eql(chave_nfe_request);*/",
									"    pm.expect(pm.environment.get(\"chave_xml_nf2\")).eql(chaveNF.find(element => element === pm.environment.get(\"chave_xml_nf2\")));",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getViagem\",\n    \"parameters\": {\n        \"viagem_id\": \"{{viagem_id}}\",\n        \"localizar\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - NFe - 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c853e9a3-3978-40ce-828c-f2aef0490188",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\": \"{{sol_carga_nfe_nao_agrupada_2}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - previaCTE - Recalcular 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "023274f8-b320-484e-b3e8-335605df14ce",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"",
									"pm.test(\"Insere Valor Frete\", function () {",
									"    var valor_frete_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"FRETEUNITARIO\").valor;",
									"    var valor_frete_request = pm.environment.get(\"valor_frete\");",
									"    valor_frete_request = ''+valor_frete_request;",
									"",
									"    pm.expect(valor_frete_response).eql(valor_frete_request);",
									"});",
									"",
									"pm.test(\"Insere Valor Pedágio\", function () {",
									"    var valor_pedagio_response = jsonData.result.tabelafrete.variaveis.find(x => x.cod_variavel == \"VALORUNITARIOPEDAGIO\").valor;",
									"    var valor_pedagio_request = pm.environment.get(\"valor_pedagio\");",
									"    valor_pedagio_request = ''+valor_pedagio_request;",
									"",
									"    pm.expect(valor_pedagio_response).eql(valor_pedagio_request);",
									"});",
									"",
									"pm.test(\"Obter Descrição Imposto\", function () {",
									"    var descricao_imposto_response = jsonData.result.impostos.itens[0].descricao;",
									"    ",
									"    pm.environment.set(\"descricao_imposto_response\", descricao_imposto_response);",
									"",
									"    pm.expect(descricao_imposto_response).not.eql(null);",
									"});",
									"",
									"pm.test(\"Obter Alíquota Imposto\", function () {",
									"    var aliquota_response = jsonData.result.impostos.itens[0].aliquota;",
									"    ",
									"    pm.environment.set(\"aliquota_response\", aliquota_response);",
									"",
									"    pm.expect(aliquota_response).not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e1c4a3ce-0865-4b81-a65c-4ffea7ef7173",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"previaCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada_2}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1111,\n            \"organizacional_id\": 336\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - insCTE 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a964c75e-4481-4b36-a5ec-c460811b070d",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(60000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cf132bf4-7998-4f0c-adce-f4623ed10c1f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"insCTE\",\n    \"parameters\": {\n        \"tipo_emissao\": \"CTE_RODO\",\n        \"solicitacao_carga_id\":  \"{{sol_carga_nfe_nao_agrupada_2}}\",\n        \"gerais\": {\n            \"conhecimento_tipo_id\": 1,\n            \"cod_organograma\": 1,\n            \"organizacional_id\": \"{{organizacional_id}}\"\n        },\n        \"participantes\": {\n            \"remetente\": [],\n            \"expedidor\": [],\n            \"destinatario\": [],\n            \"recebedor\": [],\n            \"tomador\": []\n        },\n        \"tabelafrete\": {\n            \"variaveis\": [\n                {\n                    \"cod_variavel\": \"FRETEUNITARIO\",\n                    \"valor\": \"{{valor_frete}}\"\n                },\n                {\n                    \"cod_variavel\": \"VALORUNITARIOPEDAGIO\",\n                    \"valor\": \"{{valor_pedagio}}\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "M220 - getCenarioImposto 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a0e8ee1-62f7-4001-8722-be614295d688",
								"exec": [
									"//Variáveis",
									"var jsonData = pm.response.json();",
									"",
									"//Funções",
									"pm.test('Obter Resposta', function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Retorno Consulta\", function () {",
									"    var count = jsonData.result.count;",
									"    pm.expect(count).above(0);",
									"});",
									"",
									"pm.test(\"Performance Time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(8000);",
									"});",
									"",
									"pm.test(\"Teste Imposto ICMS\", function () {",
									"    var aliquota_response = jsonData.result.items.find(x => x.descricao == pm.environment.get(\"descricao_imposto_response\")).aliquota;",
									"    var aliquota_request = pm.environment.get(\"aliquota_response\");",
									"    ",
									"    pm.expect(aliquota_response).eql(aliquota_request);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "165c8501-3ca5-4c9e-a137-6d0161045100",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"module\": \"M220\",\n    \"operation\": \"getCenarioImposto\",\n    \"parameters\": {\n        \"query\": {\n            \"columns\": [\n                {\n                    \"name\": \"imposto_config_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_tipo_id\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"imposto_desc\",\n                    \"title\": \"columns.product_id\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"descricao\",\n                    \"title\": \"Descrição\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aliquota\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"reducao_base_calculo\",\n                    \"title\": \"Redução base de cálculo (%)\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"fundamentacao_legal\",\n                    \"title\": \"Alíquota\",\n                    \"visible\": false\n                },\n                {\n                    \"name\": \"reservado_fisco\",\n                    \"title\": \"Reservado ao fisco\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"regime_cumulativo\",\n                    \"title\": \"Regime cumulativo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_cod_retencao_id\",\n                    \"title\": \"Código retenção ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"retido_fonte\",\n                    \"title\": \"Retido na fonte\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"cod_retencao\",\n                    \"title\": \"Código retenção\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"titulo\",\n                    \"title\": \"Título\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_origem_id\",\n                    \"title\": \"Imposto origem ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"imposto_situacao_trib_tipo_id\",\n                    \"title\": \"Tipo situacao tributária ID\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_pedagio_base_calc\",\n                    \"title\": \"Considera pedagio base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"aplica_reducao_base_calc\",\n                    \"title\": \"Aplica redução base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_base_calc\",\n                    \"title\": \"Considera ICMS base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"considera_icms_st_base_calc\",\n                    \"title\": \"Considera ICMS  base de cálculo\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"codigo_tributacao_municipio\",\n                    \"title\": \"Código tributação município\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_insert\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_insert\",\n                    \"title\": \"Date insert\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"user_update\",\n                    \"title\": \"User update\",\n                    \"visible\": true\n                },\n                {\n                    \"name\": \"date_update\",\n                    \"title\": \"User insert\",\n                    \"visible\": true\n                }\n            ],\n            \"summary\": [],\n            \"paging\": {\n                \"page\": 0,\n                \"size\": 1000\n            },\n            \"sorting\": [],\n            \"grouping\": [],\n            \"filtering\": []\n        }\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url_qa}}",
							"host": [
								"{{url_qa}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Executar antes pastas 'VEICULO', 'MOTORISTA' para testes unitários.\n\n- NOTA FISCAL E CTE.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b3191286-9b22-4f11-b77a-d4c732197177",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4519123c-a3da-4746-ae48-ee7b627f7918",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8fa55c18-5294-4571-9606-e44037c565ab",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0a8383af-3710-41ac-86f1-4e366fd5d30c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}